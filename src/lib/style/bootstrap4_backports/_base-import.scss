@use '../abstracts/variables' as SRC;
@use '../abstracts/mixins' as SrcMixins;
@use 'sass:color';
@use 'sass:map';

.bootstrap-4-backport {
  //initial bootstrap config based on Synapse design
  $primary: SRC.$primary-action-color;
  $secondary: SRC.$secondary-action-color;
  $border-radius: 0.2rem;
  $btn-box-shadow: SRC.$box-shadow-soft;
  $input-height: 50px;
  $input-padding-x: 0.75rem;
  $input-padding-y: 0.5rem;
  $input-border-color: SRC.$border-color-gray;
  $input-border-width: 1px;
  $input-border-radius: 2px;
  $modal-footer-margin-between: 0rem;
  // Hide the caret, we will replace it with a chevron (see .dropdown-toggle in overrides.scss)
  $enable-caret: false;
  @import 'bootstrap/scss/bootstrap';

  .alert-danger {
    @include alert-variant(
      SRC.$bootstrap-4-danger-bg,
      color.adjust(SRC.$bootstrap-4-danger-bg, $lightness: -5%),
      SRC.$bootstrap-4-danger-text-color
    );
  }
  // For all buttons, make the box shadow more intense on hover
  .btn {
    @include hover() {
      box-shadow: SRC.$box-shadow-med;
    }
  }

  // Add the 'pill' class for a pill shape
  .btn.pill {
    border-radius: 24px;
  }

  .btn.pill.btn-lg {
    font-size: 16px;
    padding: 10px 24px;
  }

  // Extra-long pill shape
  .btn.pill-xl {
    border-radius: 24px;
    min-width: 168px;
    padding: 10px;
  }

  .btn.pill-xl.btn-sm {
    min-width: 150px;
    min-height: 20px;
    padding: 5px;
  }

  .btn.pill-xl.btn-lg {
    min-width: 220px;
    padding: 10px;
  }

  // default variant is in BS3 but not BS4, so we recreate it here
  .btn-default {
    @include button-variant(
      $background: #fff,
      $border: #ccc,
      $hover-background: #e6e6e6,
      $hover-border: #adadad
    );
  }

  .btn-gray {
    @include button-variant($background: #ececec, $border: #ececec);
  }

  // Override built-in btn-white with this
  .btn-white {
    @include button-variant(#fff, #fff);
    @include hover() {
      color: rgba(0, 0, 0, 0.73);
    }
    color: rgba(0, 0, 0, 0.54);
    box-shadow: 0 2px 2px 0 rgba(0, 0, 0, 0.24), 0 0 1px 0 rgba(0, 0, 0, 0.24);
  }

  /**
   * For our expanded primary color palette, create regular and light
   * button variants for each color.
   * For button mixins, see node_modules/bootstrap/scss/mixins/_buttons.scss
   */
  @each $color-variant, $color in SRC.$primary-color-palette {
    .btn-primary-#{$color-variant} {
      @include button-variant($background: $color, $border: $color);
    }

    .btn-light-primary-#{$color-variant} {
      @include button-variant(
        $background: #dfdfdf,
        $border: #dfdfdf,
        $hover-background: $color,
        $hover-border: $color,
        $active-background: color.scale($color, $lightness: -20%),
        $active-border: color.scale($color, $lightness: -30%)
      );
    }

    .btn-gray-primary-#{$color-variant} {
      @include button-outline-variant($color: $color);
      background-color: #f9f9f9;
      border-color: #e3e3e3;
    }

    .btn-transparent-primary-#{$color-variant} {
      @include button-variant(
        $background: color.change(white, $alpha: 0),
        $border: color.change(white, $alpha: 0),
        // $active-background: color.change(white, $alpha: 0),
        $active-border: color.change($color)
      );
      color: $color;

      &:hover {
        color: color.adjust($color, $lightness: -10%);
        box-shadow: unset;
      }
      &:active {
        color: color.adjust($color, $lightness: -15%);
        box-shadow: unset;
      }
    }
  }

  .btn-secondary,
  .btn-secondary-base {
    @include button-variant(
      $background: SRC.$secondary-action-color,
      $border: SRC.$secondary-action-color
    );
  }

  .btn-light-secondary,
  .btn-light-secondary-base {
    @include button-variant(
      $background: #dfdfdf,
      $border: #dfdfdf,
      $hover-background: SRC.$secondary-action-color,
      $hover-border: SRC.$secondary-action-color,
      $active-background:
        color.scale(SRC.$secondary-action-color, $lightness: -20%),
      $active-border: color.scale(SRC.$secondary-action-color, $lightness: -30%)
    );
  }

  .btn-gray-select {
    color: SRC.$text-color-dark;
    @include button-variant(
      $background: SRC.$gray-light,
      $border: SRC.$gray-dark,
      $hover-background: SRC.$gray-light,
      $active-background: SRC.$gray-light
    );
  }

  // Primary button based on Synapse Design System
  // See https://www.figma.com/file/0oPm5lLSUva8kyfVNMS6FA/Synapse-Style-%26-Component-Library?node-id=53%3A1189
  .btn-sds-primary {
    @include button-variant(
      $background: map.get(SRC.$primary-color-palette, 500),
      $border: map.get(SRC.$primary-color-palette, 500),
      $hover-background: map.get(SRC.$primary-color-palette, 600),
      $hover-border: map.get(SRC.$primary-color-palette, 600),
      $active-background: map.get(SRC.$primary-color-palette, 700),
      $active-border: map.get(SRC.$primary-color-palette, 700)
    );
    border-radius: 0px;
    font-weight: 900;
    &:hover {
      box-shadow: none; // ?
    }

    &:disabled {
      color: map.get(SRC.$colors, 'gray-600');
      background-color: map.get(SRC.$colors, 'gray-400');
      border-color: map.get(SRC.$colors, 'gray-400');
    }
  }

  // Secondary button based on Synapse Design System
  // See https://www.figma.com/file/0oPm5lLSUva8kyfVNMS6FA/Synapse-Style-%26-Component-Library?node-id=53%3A1216
  .btn-outline {
    @include button-outline-variant(
      $color: map.get(SRC.$primary-color-palette, 500),
      $color-hover: map.get(SRC.$primary-color-palette, 600),
      $active-background: rgba(255, 255, 255, 0),
      $active-border: map.get(SRC.$primary-color-palette, 700)
    );
    border-radius: 0px;
    font-weight: 900;
    &:hover {
      box-shadow: none; // ?
    }

    &:disabled {
      color: map.get(SRC.$colors, 'gray-600');
      border-color: map.get(SRC.$colors, 'gray-400');
    }
  }

  // Tertiary button based on Synapse Design System
  // See https://www.figma.com/file/0oPm5lLSUva8kyfVNMS6FA/Synapse-Style-%26-Component-Library?node-id=53%3A1239
  .btn-tertiary {
    @include button-outline-variant(
      $color: map.get(SRC.$primary-color-palette, 500),
      $color-hover: map.get(SRC.$primary-color-palette, 600),
      $active-background: rgba(255, 255, 255, 0),
      $active-border: map.get(SRC.$primary-color-palette, 700)
    );
    border: none;
    font-weight: 900;
    white-space: normal; // Since this appears more like a link, line breaks are ok
    &:hover {
      box-shadow: none;
    }

    @include SrcMixins.highlightLink;
    &:visited,
    &:active,
    &:link {
      @include SrcMixins.highlightLink;
    }
  }
}
