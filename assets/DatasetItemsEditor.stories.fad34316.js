import{F as Q,A as X,B as ee,a as te,D as oe,b as re,c as ie,C as ne,M as ae,d as se,P as de,e as le}from"./EntityFinder.0d6548e6.js";import{S as me}from"./SkeletonTable.b956c12d.js";import{r as N}from"./FullWidthAlert.50041932.js";import{o as ce,dr as pe,ds as ue}from"./index.05abe325.js";import{E as fe}from"./EntityTypeUtils.bdce6c7e.js";import"./assert.c27a8558.js";import{T as L}from"./Typography.bfdf676e.js";import{E as he}from"./EntityFinderModal.c15afb48.js";import{I as ye}from"./IconSvg.3d20df6f.js";import{W as Ie}from"./WarningModal.c0522703.js";import{d as C}from"./ToastMessage.0defc330.js";import{C as Se}from"./Checkbox.7f748159.js";import{a as h,j as o,F as M}from"./jsx-runtime.2e925369.js";import{S as Ee}from"./Skeleton.8dd0668e.js";import{B as D}from"./Button.c582ea4c.js";import"./iframe.fc0b8fd7.js";import"./objectWithoutPropertiesLoose.090b3c10.js";import"./toConsumableArray.b3669986.js";import"./index.06f4a415.js";import"./withStyles.8be28b48.js";import"./react-sizeme.a6464a17.js";import"./Arrow.c6e8b887.js";import"./sqlFunctions.b49ac766.js";import"./use-deep-compare-effect.esm.9d3fc03b.js";import"./useGetEntityChildren.1a57327b.js";import"./EntityChildren.50133102.js";import"./index.f252d424.js";import"./stateManager-845a3300.esm.2aae5abd.js";import"./classCallCheck.8304ed06.js";import"./inherits.98d6a15d.js";import"./HelpPopover.4b5ab842.js";import"./MarkdownPopover.d60756d8.js";import"./usePopperMarginModifiers.7a874fe8.js";import"./useWaitForDOMRef.0721218f.js";import"./isObject.f3be1931.js";import"./Transition.d42a873e.js";import"./hasClass.56fd144a.js";import"./MarkdownSynapse.15019ac7.js";import"./UserCard.0e7f72e7.js";import"./getEndpoint.0de7fccf.js";import"./IconCopy.b1eba79c.js";import"./Tooltip.6c95fe7b.js";import"./createSvgIcon.d78a924b.js";import"./SvgIcon.31249d58.js";import"./useTheme.8804f8cd.js";import"./makeStyles.9dfaa099.js";import"./Overlay.ac713ce0.js";import"./factory.f8c83873.js";import"./SynapseVideo.cb2e3482.js";import"./react-intersection-observer.m.66de6abb.js";import"./DateFormatter.b45669c3.js";import"./moment.53181859.js";import"./LoadingScreen.e3fe6e43.js";import"./Modal.ea36991f.js";import"./useWillUnmount.4a16e5cd.js";import"./removeClass.27874bcb.js";import"./useEntityBundle.45a3fc33.js";import"./EntityIcon.8355c74f.js";import"./SynapseTableConstants.07ecdebd.js";import"./SchemaDrivenAnnotationEditor.483ac8af.js";import"./isEmpty.93b41982.js";import"./toString.f9b9a371.js";import"./useListState.7f5a3e64.js";import"./Collapse.fe074047.js";import"./groupBy.4df63a42.js";import"./_baseMap.831321ea.js";import"./_baseIsEqual.9bd73e20.js";import"./_cacheHas.5cf1e846.js";import"./_setToArray.a82100c8.js";import"./CalendarWithIconFormGroup.dc53bb37.js";import"./index.5ef2ed87.js";import"./index.8cde812d.js";import"./EntityModal.3793d4d1.js";import"./ExternalFileHandleInterface.8faef74d.js";import"./LockTwoTone.32ff1570.js";import"./cloneDeep.1251cc82.js";import"./Dropdown.83bddc70.js";import"./isRequiredForA11y.61bbc671.js";import"./Sort.71380cfe.js";import"./EntityLink.96052256.js";import"./useFavorites.5a129321.js";import"./times.cda879eb.js";import"./toInteger.1984412c.js";import"./toNumber.71be2bd9.js";import"./debounce.bb67b392.js";import"./TypeUtils.a2c41307.js";import"./InfoOutlined.22a371fd.js";import"./uniqueId.50daefd4.js";const Ce=window.React.useState;function De(m){const[c,p]=Ce(new Set(m));function u(...y){const n=new Set(c);for(const T of y)n.add(T);p(n)}function w(y){const n=new Set(c);n.delete(y),p(n)}function d(){p(new Set)}return{set:c,add:u,remove:w,clear:d}}const ge=window.React.useEffect,R=window.React.useState,v="Add Files",be="Remove Files",Re="No files in this Dataset",P="Save the Dataset to continue.",ve="Create a Version of this Dataset to freeze it in its current state",we="Dataset Saved",z=42,Te=350;function g(m){var V;const{entityId:c,onSave:p,onClose:u}=m,[w,d]=R(!1),[y,n]=R(!1),[T,A]=R(!1),[r,K]=R(),b=e=>{A(!0),K(e)},{data:I,refetch:H}=ce(c,void 0,{enabled:!r});ge(()=>{!r&&I&&(I.items==null&&(I.items=[]),b(I),A(!1))},[I,r]);const{set:l,add:F,remove:j,clear:_}=De(),O=!!(r&&r.items.length===l.size),{data:k}=pe(c),$=(V=k==null?void 0:k.path[1])==null?void 0:V.id,W=ue({onSuccess:()=>{p?p():C(ve,"success",{title:we})},onError:e=>{e.status===412?C("Re-retrieve the dataset to get the latest changes. Your current changes will be lost.","warning",{title:"Dataset Updated since Last Fetched",primaryButtonConfig:{text:"Retrieve Dataset",onClick:()=>{H()}}}):C(e.reason,"danger",{title:"An Error Occurred"})}}),G=r==null?void 0:r.items.map(e=>({...e,isSelected:l.has(e.entityId),setSelected:t=>t?F(e.entityId):j(e.entityId)}));function U(e){b(t=>{if(t){const s=t.items.filter(i=>!e.find(E=>E.targetId===i.entityId)),a=e.filter(i=>t.items.find(E=>E.entityId===i.targetId)),f=e.filter(i=>!t.items.find(E=>E.entityId===i.targetId));let S=`${f.length} Item${f.length===1?"":"s"} added`;a.length>0?S+=` and ${a.length} Item${a.length===1?"":"s"} updated`:S+=" to Dataset",C(P,"info",{title:S});const Z=[...s,...a.map(i=>({entityId:i.targetId,versionNumber:i.targetVersionNumber})),...f.map(i=>({entityId:i.targetId,versionNumber:i.targetVersionNumber}))];return{...t,items:Z}}else return console.warn("Cannot add items to the Dataset because it is undefined. The Dataset may not have been fetched yet."),t}),_()}function Y(){b(e=>({...e,items:e.items.filter(t=>!l.has(t.entityId))})),C(P,"info",{title:`${l.size} Item${l.size===1?"":"s"} removed from the Dataset`}),_()}function q(e,t){b(s=>({...s,items:s.items.map(a=>a.entityId===e?{entityId:e,versionNumber:t}:a)}))}const B=[{key:"errorState",width:30,cellRenderer:te},{key:"isSelected",width:40,dataKey:"isSelected",headerRenderer:r?o(e=>{const{datasetToUpdate:t,clearSelectedIds:s,addSelectedId:a}=e,f=O;return t?o("div",{"data-testid":"Select All",style:{cursor:"pointer"},onClick:()=>{f?s():a(...t.items.map(S=>S.entityId))},children:o(Se,{label:"",className:"SRC-pointer-events-none",checked:f,disabled:t.items.length===0,onChange:()=>{}})}):o(M,{})},{datasetToUpdate:r,selectedIds:l,clearSelectedIds:_,addSelectedId:F,allItemsAreSelected:O}):o(M,{}),cellRenderer:oe},{key:"name",width:350,dataKey:"entityId",title:"Name",resizable:!0,cellRenderer:re},{key:"status",width:80,dataKey:"entityId",resizable:!0,cellRenderer:ie},{key:"id",width:140,title:"ID",dataKey:"entityId",resizable:!0},{key:"version",width:150,title:"Version",dataKey:"entityId",cellRenderer:e=>o(le,{...e,toggleSelection:t=>{q(t.entityId,t.versionNumber)}})},{key:"createdOn",width:200,title:"Created On",dataKey:"entityId",resizable:!0,cellRenderer:ne},{key:"modifiedOn",width:200,title:"Modified On",dataKey:"entityId",resizable:!0,cellRenderer:ae},{key:"modifiedBy",width:250,title:"Modified By",dataKey:"entityId",resizable:!0,cellRenderer:se},{key:"projectId",width:300,title:"Project",dataKey:"entityId",resizable:!0,cellRenderer:de}],x=B.reduce((e,t)=>e+t.width,0);function J(){return h("div",{className:"NoItemsPlaceholder",children:[o(L,{variant:"headline3",children:Re}),h(D,{className:"AddItemsButton",variant:"sds-primary",onClick:()=>d(!0),children:[o(ye,{options:{icon:"addCircleTwoTone"}}),o("span",{children:v})]})]})}return h("div",{className:"DatasetEditor bootstrap-4-backport",children:[o(he,{configuration:{projectId:$,selectMultiple:!0,initialScope:Q.ALL_PROJECTS,initialContainer:null,selectableTypes:[fe.FILE],mustSelectVersionNumber:!0},titlePopoverProps:{markdownText:"Use the left pane to browse Projects and Folders to find Files to add to this Dataset. Files in a Dataset can be added from multiple folders. You can also use Search to find and select Files.",helpUrl:"https://help.synapse.org/docs/Datasets.2611281979.html"},promptCopy:"Find Files located across one or more Folders to add to the Dataset.",show:w,onClose:()=>{d(!1)},title:v+" to Dataset",confirmButtonCopy:v,onConfirm:e=>{U(e),d(!1)},onCancel:()=>d(!1)}),o(Ie,{title:"Unsaved Changes",modalBody:"Any unsaved changes will be lost. Are you sure you want to close the editor?",confirmButtonText:"Close Editor",onConfirm:()=>{u&&(n(!1),u())},show:y,onConfirmCallbackArgs:[],onCancel:()=>n(!1)}),h("div",{className:"DatasetEditorTopBottomPanel",children:[o("div",{className:"ItemCount",children:r?h(L,{variant:"headline3",children:[r.items.length===0?"No":r.items.length.toLocaleString()," ","File",r.items.length!==1&&"s"]}):o(Ee,{variant:"rect",width:200})}),o(D,{variant:"sds-primary",disabled:r==null,onClick:()=>d(!0),children:v}),o(D,{disabled:l.size===0,variant:"outline",onClick:Y,children:be})]}),o("div",{className:"DatasetEditorTableContainer",children:r?r.items.length===0?o(J,{}):o(X,{height:Te,onResize:N,children:({height:e,width:t})=>o(ee,{classPrefix:"DatasetEditorTable",data:G,height:e,width:t>x?t:x,rowHeight:z,overscanRowCount:5,columns:B,rowClassName:"DatasetEditorRow",rowProps:({rowData:s})=>({"aria-selected":s.isSelected}),headerCellProps:{role:"columnheader"},onRowsRendered:N,onScroll:N})}):o(me,{className:"DatasetItemsEditorSkeleton",numRows:8,numCols:6,rowHeight:`${z}px`})}),h("div",{className:"DatasetEditorTopBottomPanel",children:[o(D,{variant:"outline",onClick:()=>{T?n(!0):u&&u()},children:"Cancel"}),o(D,{disabled:!r,variant:"sds-primary",onClick:()=>W.mutate(r),children:"Save"})]})]})}try{g.displayName="DatasetItemsEditor",g.__docgenInfo={description:"",displayName:"DatasetItemsEditor",props:{entityId:{defaultValue:null,description:"",name:"entityId",required:!0,type:{name:"string"}},onSave:{defaultValue:null,description:"",name:"onSave",required:!1,type:{name:"(() => void)"}},onClose:{defaultValue:null,description:"",name:"onClose",required:!1,type:{name:"(() => void)"}}}},typeof STORYBOOK_REACT_CLASSES!="undefined"&&(STORYBOOK_REACT_CLASSES["src/lib/containers/table/datasets/DatasetItemsEditor.tsx#DatasetItemsEditor"]={docgenInfo:g.__docgenInfo,name:"DatasetItemsEditor",path:"src/lib/containers/table/datasets/DatasetItemsEditor.tsx#DatasetItemsEditor"})}catch{}var fo={parameters:{storySource:{source:`import React from 'react'
import { ComponentStory, ComponentMeta } from '@storybook/react'
import { DatasetItemsEditor } from './DatasetItemsEditor'

export default {
  title: 'Synapse/DatasetItemsEditor',
  component: DatasetItemsEditor,
} as ComponentMeta<typeof DatasetItemsEditor>

const Template: ComponentStory<typeof DatasetItemsEditor> = args => (
  <DatasetItemsEditor {...args} />
)

export const Demo = Template.bind({})
Demo.args = {
  entityId: 'syn26302617',
}
`,locationsMap:{demo:{startLoc:{col:60,line:10},endLoc:{col:1,line:12},startBody:{col:60,line:10},endBody:{col:1,line:12}}}}},title:"Synapse/DatasetItemsEditor",component:g};const _e=m=>o(g,{...m}),ke=_e.bind({});ke.args={entityId:"syn26302617"};const ho=["Demo"];export{ke as Demo,ho as __namedExportsOrder,fo as default};
//# sourceMappingURL=DatasetItemsEditor.stories.fad34316.js.map
