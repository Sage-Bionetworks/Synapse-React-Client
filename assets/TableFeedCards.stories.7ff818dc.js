import{f as x,cT as R,B as E}from"./index.40bbd24f.js";import{h as N}from"./moment.a565bb48.js";import{M}from"./MarkdownSynapse.cd05a4d7.js";import{l as v}from"./LoadingScreen.b468edab.js";import{a as u,j as e}from"./jsx-runtime.00d70968.js";import{B}from"./Button.fda23eee.js";import"./withStyles.d50e1a5a.js";import"./objectWithoutPropertiesLoose.5e7699d1.js";import"./toConsumableArray.c4898ee4.js";import"./FullWidthAlert.9ae706f1.js";import"./Typography.e0d7a65e.js";import"./index.57d09176.js";import"./makeStyles.733638f6.js";import"./Tooltip.006e7cf4.js";import"./SvgIcon.53be2b5b.js";import"./slicedToArray.e72f11da.js";import"./index.35ce73ec.js";import"./ToastMessage.72011e3e.js";import"./assert.88909c85.js";import"./iframe.87762dd2.js";import"./getEndpoint.bb7ded34.js";import"./UserCard.6c03f119.js";import"./IconCopy.095bf867.js";import"./SkeletonTable.14f7957b.js";import"./times.d4aa3706.js";import"./toInteger.ee4505e0.js";import"./Skeleton.c897a2bf.js";import"./IconSvg.e3afc045.js";import"./InfoOutlined.31277c73.js";import"./Overlay.b3559176.js";import"./useWaitForDOMRef.064fee4c.js";import"./usePopperMarginModifiers.0428ddea.js";import"./factory.663cefeb.js";import"./sqlFunctions.b49ac766.js";import"./SynapseVideo.02e99978.js";import"./react-intersection-observer.esm.e445ee86.js";import"./DateFormatter.6f01e483.js";import"./index.4e5953c7.js";import"./index.1ec0c122.js";import"./index.66e0b57e.js";import"./index.440cefe9.js";import"./Modal.ec8bc390.js";import"./useWillUnmount.4a16e5cd.js";const D=window.React.useEffect,C=window.React.useState,d=({tableEntityId:r})=>{const{accessToken:c}=x(),[n,y]=C(),[m,T]=C(3);let p=!0;if(D(()=>((()=>{if(p){if(n)return;const s={concreteType:"org.sagebionetworks.repo.model.table.QueryBundleRequest",query:{sql:`SELECT "categories", "date", "title", "mdDescription" FROM ${r} ORDER BY "date" desc`},entityId:r,partMask:E};R(s,c).then(o=>{var a;y((a=o.queryResult)==null?void 0:a.queryResults)})}})(),()=>{p=!1}),[r,c]),!n)return v;const i=n.headers,b=i.findIndex(t=>t.name==="categories"),S=i.findIndex(t=>t.name==="date"),F=i.findIndex(t=>t.name==="title"),g=i.findIndex(t=>t.name==="mdDescription");return u("div",{className:"Feed bootstrap-4-backport",children:[e("div",{className:"FeedItems",children:n.rows.map((t,s)=>{if(s>m-1)return;const o=t.values;o.some(l=>l===null)&&console.warn("Row has null value(s) when no nulls expected");const a=JSON.parse(o[b]),I=o[S],h=o[F],w=o[g];return e("div",{className:"FeedItem",children:u("div",{children:[a&&e("div",{className:"FeedItemCategories",children:a.map((l,_)=>e("div",{className:"FeedItemCategory",children:l},`row-${s},categoryIndex-${_}`))}),e("p",{className:"FeedItemDate",children:N(new Date(parseInt(I))).format("MMMM YYYY")}),e("p",{className:"FeedItemTitle",children:h}),e("div",{className:"FeedItemDescription",children:e(M,{markdown:w})})]})},`row-${s}`)})}),n.rows.length>m&&e("div",{className:"FeedViewAllNewsButtonContainer",children:e(B,{variant:"primary",size:"lg",className:"pill",onClick:()=>T(m+3),children:"VIEW MORE NEWS"})})]})},f=d;try{d.displayName="TableFeedCards",d.__docgenInfo={description:"",displayName:"TableFeedCards",props:{tableEntityId:{defaultValue:null,description:"",name:"tableEntityId",required:!0,type:{name:"string"}}}},typeof STORYBOOK_REACT_CLASSES<"u"&&(STORYBOOK_REACT_CLASSES["src/lib/containers/TableFeedCards.tsx#TableFeedCards"]={docgenInfo:d.__docgenInfo,name:"TableFeedCards",path:"src/lib/containers/TableFeedCards.tsx#TableFeedCards"})}catch{}const _e={parameters:{storySource:{source:`import React from 'react'
import { ComponentStory, ComponentMeta } from '@storybook/react'
import TableFeedCards from './TableFeedCards'

export default {
  title: 'Synapse/TableFeedCards',
  component: TableFeedCards,
} as ComponentMeta<typeof TableFeedCards>

const Template: ComponentStory<typeof TableFeedCards> = args => (
  <TableFeedCards {...args} />
)

export const Demo = Template.bind({})
Demo.args = {
  tableEntityId: 'syn23520190',
}
`,locationsMap:{demo:{startLoc:{col:56,line:10},endLoc:{col:1,line:12},startBody:{col:56,line:10},endBody:{col:1,line:12}}}}},title:"Synapse/TableFeedCards",component:f},O=r=>e(f,{...r}),k=O.bind({});k.args={tableEntityId:"syn23520190"};const xe=["Demo"];export{k as Demo,xe as __namedExportsOrder,_e as default};
