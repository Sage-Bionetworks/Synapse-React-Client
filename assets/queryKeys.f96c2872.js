const t={all:[{objectType:"entity"}],entity:e=>[{...t.all[0],id:e}],version:(e,n)=>[{...t.entity(e)[0],versionNumber:n}],versions:e=>[{...t.entity(e)[0],scope:"versions"}],versionsQuery:(e,n,i)=>[{...t.versions(e)[0],versionQuery:{limit:n,offset:i}}],json:e=>[{...t.entity(e)[0],scope:"json"}],path:e=>[{...t.entity(e)[0],scope:"path"}],bundle:(e,n,i)=>[{...t.version(e,n)[0],scope:"entityBundle",entityBundleRequest:i}],children:(e,n)=>{var i;return[{...t.entity((i=e.parentId)!=null?i:"root")[0],scope:"children",isInfinite:n,entityChildrenRequest:e}]},tableQueryResult:(e,n)=>[{...t.entity(e.entityId)[0],scope:"tableQueryResult",isInfinite:n,tableQueryBundleRequest:e}],tableQueryResultWithAsyncStatus:(e,n)=>[{...t.entity(e.entityId)[0],scope:"tableQueryResultWithAsyncStatus",isInfinite:n,tableQueryBundleRequest:e}],fullTableQueryResult:e=>[{...t.entity(e.entityId)[0],scope:"fullTableQueryResult",tableQueryBundleRequest:e}],boundJSONSchema:e=>[{...t.entity(e)[0],scope:"boundJSONSchema"}],schemaValidationResults:e=>[{...t.entity(e)[0],scope:"schemaValidationResults"}]};function s(e,n){return e.invalidateQueries(t.entity(n))}export{t as e,s as i};
