import{p as c,i as Q}from"./sqlFunctions.b49ac766.js";import{T as _,F as W,a as V,b as v,S as R,L as x}from"./LastUpdatedOn.30f6e519.js";import{l as D,f as O,h as I,k as U,B as A,n as M,w as F,p as N}from"./index.7b99b109.js";import{f as B,Q as k,a as P,l as K,T as Y}from"./TotalQueryResults.ba8569c1.js";import{j}from"./EntityTypeUtils.e713357e.js";import{j as e,a as z,F as H}from"./jsx-runtime.2e925369.js";import{c as $}from"./cloneDeep.f366132e.js";import"./HelpPopover.43af33af.js";import"./MarkdownPopover.c0341a2a.js";import"./usePopperMarginModifiers.fc55270a.js";import"./objectWithoutPropertiesLoose.090b3c10.js";import"./useWaitForDOMRef.679b0e64.js";import"./FullWidthAlert.4dd40e61.js";import"./Typography.5a45efab.js";import"./index.f252d424.js";import"./makeStyles.38be5a7f.js";import"./withStyles.461112f3.js";import"./objectWithoutProperties.07f8cd75.js";import"./toConsumableArray.8f496188.js";import"./createClass.67a84016.js";import"./Tooltip.3e761ad5.js";import"./SvgIcon.6d10a3ac.js";import"./slicedToArray.e9a7fa03.js";import"./Button.c582ea4c.js";import"./index.06f4a415.js";import"./ToastMessage.093903bc.js";import"./MarkdownSynapse.8e1bb1ce.js";import"./UserCard.cd0ed53c.js";import"./getEndpoint.0de7fccf.js";import"./IconCopy.b1eba79c.js";import"./SkeletonTable.0ccaf18e.js";import"./times.78454f16.js";import"./toInteger.91c80714.js";import"./Skeleton.3d9d9757.js";import"./IconSvg.19550831.js";import"./InfoOutlined.a7449f61.js";import"./Overlay.7f5ddc31.js";import"./assert.e1652bf7.js";import"./iframe.af98166e.js";import"./index.8cde812d.js";import"./factory.a250fcf7.js";import"./SynapseVideo.cd487ec9.js";import"./react-intersection-observer.m.66de6abb.js";import"./DateFormatter.1fc603e0.js";import"./moment.53181859.js";import"./HelpOutlineTwoTone.70006c26.js";import"./Collapse.ccf7adfd.js";import"./unCamelCase.d070537b.js";import"./ColumnType.744125d2.js";import"./ElementWithTooltip.98af391c.js";import"./SynapseTableConstants.07ecdebd.js";import"./index.5aed5e4e.js";import"./index.5ef2ed87.js";import"./Dropdown.c5bbe35b.js";import"./Modal.50036a73.js";import"./useWillUnmount.4a16e5cd.js";import"./isRequiredForA11y.61bbc671.js";import"./use-deep-compare-effect.esm.76673280.js";import"./ProgrammaticInstructionsModal.2c842531.js";import"./QueryCount.51501465.js";import"./NoData.928742eb.js";import"./InteractiveCopyIdsIcon.7c71f535.js";import"./ExternalFileHandleInterface.8c788d80.js";import"./HasAccessV2.4fa71b2a.js";import"./useGetAccessRequirement.b606e31e.js";import"./useEntityBundle.b03e5c46.js";import"./FileEntity.4f8cb425.js";import"./TypeUtils.a2c41307.js";import"./AccessRequirementList.c96f7e6a.js";import"./useGetInfoFromIds.ff13868e.js";import"./uniq.2f53a096.js";import"./_cacheHas.938833a1.js";import"./_baseDifference.f1f35f38.js";import"./_setToArray.a82100c8.js";import"./without.b3be3733.js";import"./LockTwoTone.30ff49a7.js";import"./AccessApproval.493867d3.js";import"./ManagedACTAccessRequirementStatus.be369a71.js";import"./FileUpload.580e1fb2.js";import"./UserSearchBox.0461143f.js";import"./UserOrTeamBadge.57b1b120.js";import"./RadioGroup.3f583c0c.js";import"./sortBy.a6d8e3de.js";import"./_baseMap.6a17b6fa.js";import"./_baseIsEqual.081f1487.js";import"./LoadingScreen.3ecba03a.js";import"./EntityLink.aee16d01.js";import"./EntityIcon.cd0831e3.js";import"./GenericCard.19e3679c.js";import"./IconList.65dede38.js";import"./FileHandleLink.5009f816.js";import"./isEmpty.1b60db36.js";import"./Checkbox.ced79741.js";import"./SearchResultsNotFound.263a233e.js";import"./NoSearchResults.19ed4ed4.js";import"./ButtonBase.3794374e.js";import"./queryUtils.a894e9f9.js";import"./IconMinus.f135ad99.js";import"./RangeSlider.19d66a3c.js";import"./classCallCheck.8304ed06.js";import"./inherits.0fdbf119.js";const G=t=>$({partMask:D|O|I|U|A|M,entityId:c(t),concreteType:"org.sagebionetworks.repo.model.table.QueryBundleRequest",query:{sql:t,limit:25,offset:0}}),r=t=>{const{title:h,searchParams:m,sqlOperator:f,showAccessColumn:C,sql:u,hideDownload:S,hideQueryCount:T,name:L,showTopLevelControls:d=!1,searchConfiguration:o,unitDescription:E="Results",rgbIndex:w,showLastUpdatedOn:q,...n}=t,a=G(u);m&&(a.query.sql=Q(a.query.sql,m,f));const b=F(),g=c(u),{data:l}=N(g);return e(B,{...n,initQueryRequest:a,children:e(k,{rgbIndex:w,unitDescription:E,showLastUpdatedOn:q,...n,children:e(P,{children:i=>{if(i===void 0)throw new Error("No queryContext found when calling QueryContextConsumer");return e(K,{children:s=>{if(s===void 0)throw new Error("No queryVisualizationContext found when calling QueryVisualizationContextConsumer");return z(H,{children:[d&&e(_,{showColumnSelection:!0,name:L,hideDownload:S,hideQueryCount:T,hideFacetFilterControl:!0,hideVisualizationsControl:!0}),l&&j(l)&&l.isSearchEnabled?e(W,{helpUrl:o==null?void 0:o.fullTextSearchHelpURL}):e(V,{...o,queryContext:i,queryVisualizationContext:s}),e(v,{}),d&&e(Y,{frontText:""}),e(R,{synapseContext:b,queryContext:i,queryVisualizationContext:s,showAccessColumn:C,title:h,"data-testid":"SynapseTable",...n}),e(x,{})]})}})}})})})};var y=r;try{r.displayName="StandaloneQueryWrapper",r.__docgenInfo={description:`This component was initially implemented on the portal side. It renders a SynapseTable if a title is provided.
If showTopLevelControls is set to true, then the SynapseTable will also include the TopLevelControls (search, export table, column selection).`,displayName:"StandaloneQueryWrapper",props:{title:{defaultValue:null,description:"",name:"title",required:!1,type:{name:"string"}},hideDownload:{defaultValue:null,description:"",name:"hideDownload",required:!1,type:{name:"boolean"}},showAccessColumn:{defaultValue:null,description:"",name:"showAccessColumn",required:!1,type:{name:"boolean"}},showDownloadColumn:{defaultValue:null,description:"",name:"showDownloadColumn",required:!1,type:{name:"boolean"}},columnLinks:{defaultValue:null,description:"",name:"columnLinks",required:!1,type:{name:"LabelLinkConfig"}},isRowSelectionVisible:{defaultValue:null,description:"",name:"isRowSelectionVisible",required:!1,type:{name:"boolean"}},linkCountToDisaggregatedQuery:{defaultValue:null,description:`If true, columns created by the COUNT function will render with a link to Synapse that opens the disaggregated query results filtered by the conditions of that row.
Note that this is very brittle and only supports one column at a time. See SWC-6075 for more information. Default false.`,name:"linkCountToDisaggregatedQuery",required:!1,type:{name:"boolean"}},showNoContentAvailableWhenEmpty:{defaultValue:null,description:"",name:"showNoContentAvailableWhenEmpty",required:!1,type:{name:"boolean"}},searchParams:{defaultValue:null,description:"",name:"searchParams",required:!1,type:{name:"{ facetValue: string; }"}},sqlOperator:{defaultValue:null,description:"",name:"sqlOperator",required:!1,type:{name:"enum",value:[{value:'"LIKE"'},{value:'"="'},{value:'"HAS"'}]}},sql:{defaultValue:null,description:"",name:"sql",required:!0,type:{name:"string"}},rgbIndex:{defaultValue:null,description:"",name:"rgbIndex",required:!1,type:{name:"number"}},unitDescription:{defaultValue:null,description:"",name:"unitDescription",required:!1,type:{name:"string"}},facetAliases:{defaultValue:null,description:"",name:"facetAliases",required:!1,type:{name:"Record<string, string>"}},showTopLevelControls:{defaultValue:null,description:"",name:"showTopLevelControls",required:!1,type:{name:"boolean"}},searchConfiguration:{defaultValue:null,description:"",name:"searchConfiguration",required:!1,type:{name:'Omit<SearchV2Props, "queryContext" | "queryVisualizationContext">'}},showLastUpdatedOn:{defaultValue:null,description:"",name:"showLastUpdatedOn",required:!1,type:{name:"boolean"}},name:{defaultValue:null,description:"",name:"name",required:!1,type:{name:"string"}},hideVisualizationsControl:{defaultValue:null,description:"",name:"hideVisualizationsControl",required:!1,type:{name:"boolean"}},hideFacetFilterControl:{defaultValue:null,description:"",name:"hideFacetFilterControl",required:!1,type:{name:"boolean"}},hideQueryCount:{defaultValue:null,description:"",name:"hideQueryCount",required:!1,type:{name:"boolean"}},hideSqlEditorControl:{defaultValue:null,description:"",name:"hideSqlEditorControl",required:!1,type:{name:"boolean"}},showColumnSelection:{defaultValue:null,description:"",name:"showColumnSelection",required:!1,type:{name:"boolean"}},customControls:{defaultValue:null,description:"",name:"customControls",required:!1,type:{name:"CustomControl[]"}}}},typeof STORYBOOK_REACT_CLASSES!="undefined"&&(STORYBOOK_REACT_CLASSES["src/lib/containers/table/StandaloneQueryWrapper.tsx#StandaloneQueryWrapper"]={docgenInfo:r.__docgenInfo,name:"StandaloneQueryWrapper",path:"src/lib/containers/table/StandaloneQueryWrapper.tsx#StandaloneQueryWrapper"})}catch{}var zt={parameters:{storySource:{source:`import React from 'react'
import { ComponentStory, ComponentMeta } from '@storybook/react'
import StandaloneQueryWrapper from './StandaloneQueryWrapper'

export default {
  title: 'Explore/StandaloneQueryWrapper',
  component: StandaloneQueryWrapper,
} as ComponentMeta<typeof StandaloneQueryWrapper>

const Template: ComponentStory<typeof StandaloneQueryWrapper> = args => (
  <StandaloneQueryWrapper {...args} />
)

export const WithoutTopLevelControls = Template.bind({})
WithoutTopLevelControls.args = {
  title: 'Data Files',
  sql: \`SELECT * FROM syn21994970.5 where dhPortalIndex = 'TRUE' LIMIT 10\`,
  columnLinks: [
    {
      matchColumnName: 'studyOrProject',
      isMarkdown: true,
    },
  ],
}

export const WithColumnAlias = Template.bind({})
WithColumnAlias.args = {
  title: 'With column alias',
  sql: \`SELECT count(ownerID) as Sagers FROM syn23564971 WHERE institution has ('Sage Bionetworks')\`,
}

export const TopLevelControls = Template.bind({})
TopLevelControls.args = {
  title: 'Data Files',
  name: 'Top Level Controls demo',
  hideDownload: false,
  sql: \`SELECT * FROM syn21994970.5 where dhPortalIndex = 'TRUE' LIMIT 10\`,
  showTopLevelControls: true,
}
`,locationsMap:{"without-top-level-controls":{startLoc:{col:64,line:10},endLoc:{col:1,line:12},startBody:{col:64,line:10},endBody:{col:1,line:12}},"with-column-alias":{startLoc:{col:64,line:10},endLoc:{col:1,line:12},startBody:{col:64,line:10},endBody:{col:1,line:12}},"top-level-controls":{startLoc:{col:64,line:10},endLoc:{col:1,line:12},startBody:{col:64,line:10},endBody:{col:1,line:12}}}}},title:"Explore/StandaloneQueryWrapper",component:y};const p=t=>e(y,{...t}),J=p.bind({});J.args={title:"Data Files",sql:"SELECT * FROM syn21994970.5 where dhPortalIndex = 'TRUE' LIMIT 10",columnLinks:[{matchColumnName:"studyOrProject",isMarkdown:!0}]};const X=p.bind({});X.args={title:"With column alias",sql:"SELECT count(ownerID) as Sagers FROM syn23564971 WHERE institution has ('Sage Bionetworks')"};const Z=p.bind({});Z.args={title:"Data Files",name:"Top Level Controls demo",hideDownload:!1,sql:"SELECT * FROM syn21994970.5 where dhPortalIndex = 'TRUE' LIMIT 10",showTopLevelControls:!0};const Ht=["WithoutTopLevelControls","WithColumnAlias","TopLevelControls"];export{Z as TopLevelControls,X as WithColumnAlias,J as WithoutTopLevelControls,Ht as __namedExportsOrder,zt as default};
//# sourceMappingURL=StandaloneQueryWrapper.stories.85f10b32.js.map
