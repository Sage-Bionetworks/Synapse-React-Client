{"version":3,"file":"ButtonBase.ab38336e.js","sources":["../../node_modules/@material-ui/core/esm/utils/useEventCallback.js","../../node_modules/@material-ui/core/esm/ButtonBase/Ripple.js","../../node_modules/@material-ui/core/esm/ButtonBase/TouchRipple.js","../../node_modules/@material-ui/core/esm/ButtonBase/ButtonBase.js"],"sourcesContent":["import * as React from 'react';\nvar useEnhancedEffect = typeof window !== 'undefined' ? React.useLayoutEffect : React.useEffect;\n/**\n * https://github.com/facebook/react/issues/14099#issuecomment-440013892\n *\n * @param {function} fn\n */\n\nexport default function useEventCallback(fn) {\n  var ref = React.useRef(fn);\n  useEnhancedEffect(function () {\n    ref.current = fn;\n  });\n  return React.useCallback(function () {\n    return (0, ref.current).apply(void 0, arguments);\n  }, []);\n}","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport useEventCallback from '../utils/useEventCallback';\nvar useEnhancedEffect = typeof window === 'undefined' ? React.useEffect : React.useLayoutEffect;\n/**\n * @ignore - internal component.\n */\n\nfunction Ripple(props) {\n  var classes = props.classes,\n      _props$pulsate = props.pulsate,\n      pulsate = _props$pulsate === void 0 ? false : _props$pulsate,\n      rippleX = props.rippleX,\n      rippleY = props.rippleY,\n      rippleSize = props.rippleSize,\n      inProp = props.in,\n      _props$onExited = props.onExited,\n      onExited = _props$onExited === void 0 ? function () {} : _props$onExited,\n      timeout = props.timeout;\n\n  var _React$useState = React.useState(false),\n      leaving = _React$useState[0],\n      setLeaving = _React$useState[1];\n\n  var rippleClassName = clsx(classes.ripple, classes.rippleVisible, pulsate && classes.ripplePulsate);\n  var rippleStyles = {\n    width: rippleSize,\n    height: rippleSize,\n    top: -(rippleSize / 2) + rippleY,\n    left: -(rippleSize / 2) + rippleX\n  };\n  var childClassName = clsx(classes.child, leaving && classes.childLeaving, pulsate && classes.childPulsate);\n  var handleExited = useEventCallback(onExited); // Ripple is used for user feedback (e.g. click or press) so we want to apply styles with the highest priority\n\n  useEnhancedEffect(function () {\n    if (!inProp) {\n      // react-transition-group#onExit\n      setLeaving(true); // react-transition-group#onExited\n\n      var timeoutId = setTimeout(handleExited, timeout);\n      return function () {\n        clearTimeout(timeoutId);\n      };\n    }\n\n    return undefined;\n  }, [handleExited, inProp, timeout]);\n  return /*#__PURE__*/React.createElement(\"span\", {\n    className: rippleClassName,\n    style: rippleStyles\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: childClassName\n  }));\n}\n\nprocess.env.NODE_ENV !== \"production\" ? Ripple.propTypes = {\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore - injected from TransitionGroup\n   */\n  in: PropTypes.bool,\n\n  /**\n   * @ignore - injected from TransitionGroup\n   */\n  onExited: PropTypes.func,\n\n  /**\n   * If `true`, the ripple pulsates, typically indicating the keyboard focus state of an element.\n   */\n  pulsate: PropTypes.bool,\n\n  /**\n   * Diameter of the ripple.\n   */\n  rippleSize: PropTypes.number,\n\n  /**\n   * Horizontal position of the ripple center.\n   */\n  rippleX: PropTypes.number,\n\n  /**\n   * Vertical position of the ripple center.\n   */\n  rippleY: PropTypes.number,\n\n  /**\n   * exit delay\n   */\n  timeout: PropTypes.number.isRequired\n} : void 0;\nexport default Ripple;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { TransitionGroup } from 'react-transition-group';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Ripple from './Ripple';\nvar DURATION = 550;\nexport var DELAY_RIPPLE = 80;\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      overflow: 'hidden',\n      pointerEvents: 'none',\n      position: 'absolute',\n      zIndex: 0,\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0,\n      borderRadius: 'inherit'\n    },\n\n    /* Styles applied to the internal `Ripple` components `ripple` class. */\n    ripple: {\n      opacity: 0,\n      position: 'absolute'\n    },\n\n    /* Styles applied to the internal `Ripple` components `rippleVisible` class. */\n    rippleVisible: {\n      opacity: 0.3,\n      transform: 'scale(1)',\n      animation: \"$enter \".concat(DURATION, \"ms \").concat(theme.transitions.easing.easeInOut)\n    },\n\n    /* Styles applied to the internal `Ripple` components `ripplePulsate` class. */\n    ripplePulsate: {\n      animationDuration: \"\".concat(theme.transitions.duration.shorter, \"ms\")\n    },\n\n    /* Styles applied to the internal `Ripple` components `child` class. */\n    child: {\n      opacity: 1,\n      display: 'block',\n      width: '100%',\n      height: '100%',\n      borderRadius: '50%',\n      backgroundColor: 'currentColor'\n    },\n\n    /* Styles applied to the internal `Ripple` components `childLeaving` class. */\n    childLeaving: {\n      opacity: 0,\n      animation: \"$exit \".concat(DURATION, \"ms \").concat(theme.transitions.easing.easeInOut)\n    },\n\n    /* Styles applied to the internal `Ripple` components `childPulsate` class. */\n    childPulsate: {\n      position: 'absolute',\n      left: 0,\n      top: 0,\n      animation: \"$pulsate 2500ms \".concat(theme.transitions.easing.easeInOut, \" 200ms infinite\")\n    },\n    '@keyframes enter': {\n      '0%': {\n        transform: 'scale(0)',\n        opacity: 0.1\n      },\n      '100%': {\n        transform: 'scale(1)',\n        opacity: 0.3\n      }\n    },\n    '@keyframes exit': {\n      '0%': {\n        opacity: 1\n      },\n      '100%': {\n        opacity: 0\n      }\n    },\n    '@keyframes pulsate': {\n      '0%': {\n        transform: 'scale(1)'\n      },\n      '50%': {\n        transform: 'scale(0.92)'\n      },\n      '100%': {\n        transform: 'scale(1)'\n      }\n    }\n  };\n};\n/**\n * @ignore - internal component.\n *\n * TODO v5: Make private\n */\n\nvar TouchRipple = /*#__PURE__*/React.forwardRef(function TouchRipple(props, ref) {\n  var _props$center = props.center,\n      centerProp = _props$center === void 0 ? false : _props$center,\n      classes = props.classes,\n      className = props.className,\n      other = _objectWithoutProperties(props, [\"center\", \"classes\", \"className\"]);\n\n  var _React$useState = React.useState([]),\n      ripples = _React$useState[0],\n      setRipples = _React$useState[1];\n\n  var nextKey = React.useRef(0);\n  var rippleCallback = React.useRef(null);\n  React.useEffect(function () {\n    if (rippleCallback.current) {\n      rippleCallback.current();\n      rippleCallback.current = null;\n    }\n  }, [ripples]); // Used to filter out mouse emulated events on mobile.\n\n  var ignoringMouseDown = React.useRef(false); // We use a timer in order to only show the ripples for touch \"click\" like events.\n  // We don't want to display the ripple for touch scroll events.\n\n  var startTimer = React.useRef(null); // This is the hook called once the previous timeout is ready.\n\n  var startTimerCommit = React.useRef(null);\n  var container = React.useRef(null);\n  React.useEffect(function () {\n    return function () {\n      clearTimeout(startTimer.current);\n    };\n  }, []);\n  var startCommit = React.useCallback(function (params) {\n    var pulsate = params.pulsate,\n        rippleX = params.rippleX,\n        rippleY = params.rippleY,\n        rippleSize = params.rippleSize,\n        cb = params.cb;\n    setRipples(function (oldRipples) {\n      return [].concat(_toConsumableArray(oldRipples), [/*#__PURE__*/React.createElement(Ripple, {\n        key: nextKey.current,\n        classes: classes,\n        timeout: DURATION,\n        pulsate: pulsate,\n        rippleX: rippleX,\n        rippleY: rippleY,\n        rippleSize: rippleSize\n      })]);\n    });\n    nextKey.current += 1;\n    rippleCallback.current = cb;\n  }, [classes]);\n  var start = React.useCallback(function () {\n    var event = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var cb = arguments.length > 2 ? arguments[2] : undefined;\n    var _options$pulsate = options.pulsate,\n        pulsate = _options$pulsate === void 0 ? false : _options$pulsate,\n        _options$center = options.center,\n        center = _options$center === void 0 ? centerProp || options.pulsate : _options$center,\n        _options$fakeElement = options.fakeElement,\n        fakeElement = _options$fakeElement === void 0 ? false : _options$fakeElement;\n\n    if (event.type === 'mousedown' && ignoringMouseDown.current) {\n      ignoringMouseDown.current = false;\n      return;\n    }\n\n    if (event.type === 'touchstart') {\n      ignoringMouseDown.current = true;\n    }\n\n    var element = fakeElement ? null : container.current;\n    var rect = element ? element.getBoundingClientRect() : {\n      width: 0,\n      height: 0,\n      left: 0,\n      top: 0\n    }; // Get the size of the ripple\n\n    var rippleX;\n    var rippleY;\n    var rippleSize;\n\n    if (center || event.clientX === 0 && event.clientY === 0 || !event.clientX && !event.touches) {\n      rippleX = Math.round(rect.width / 2);\n      rippleY = Math.round(rect.height / 2);\n    } else {\n      var _ref = event.touches ? event.touches[0] : event,\n          clientX = _ref.clientX,\n          clientY = _ref.clientY;\n\n      rippleX = Math.round(clientX - rect.left);\n      rippleY = Math.round(clientY - rect.top);\n    }\n\n    if (center) {\n      rippleSize = Math.sqrt((2 * Math.pow(rect.width, 2) + Math.pow(rect.height, 2)) / 3); // For some reason the animation is broken on Mobile Chrome if the size if even.\n\n      if (rippleSize % 2 === 0) {\n        rippleSize += 1;\n      }\n    } else {\n      var sizeX = Math.max(Math.abs((element ? element.clientWidth : 0) - rippleX), rippleX) * 2 + 2;\n      var sizeY = Math.max(Math.abs((element ? element.clientHeight : 0) - rippleY), rippleY) * 2 + 2;\n      rippleSize = Math.sqrt(Math.pow(sizeX, 2) + Math.pow(sizeY, 2));\n    } // Touche devices\n\n\n    if (event.touches) {\n      // check that this isn't another touchstart due to multitouch\n      // otherwise we will only clear a single timer when unmounting while two\n      // are running\n      if (startTimerCommit.current === null) {\n        // Prepare the ripple effect.\n        startTimerCommit.current = function () {\n          startCommit({\n            pulsate: pulsate,\n            rippleX: rippleX,\n            rippleY: rippleY,\n            rippleSize: rippleSize,\n            cb: cb\n          });\n        }; // Delay the execution of the ripple effect.\n\n\n        startTimer.current = setTimeout(function () {\n          if (startTimerCommit.current) {\n            startTimerCommit.current();\n            startTimerCommit.current = null;\n          }\n        }, DELAY_RIPPLE); // We have to make a tradeoff with this value.\n      }\n    } else {\n      startCommit({\n        pulsate: pulsate,\n        rippleX: rippleX,\n        rippleY: rippleY,\n        rippleSize: rippleSize,\n        cb: cb\n      });\n    }\n  }, [centerProp, startCommit]);\n  var pulsate = React.useCallback(function () {\n    start({}, {\n      pulsate: true\n    });\n  }, [start]);\n  var stop = React.useCallback(function (event, cb) {\n    clearTimeout(startTimer.current); // The touch interaction occurs too quickly.\n    // We still want to show ripple effect.\n\n    if (event.type === 'touchend' && startTimerCommit.current) {\n      event.persist();\n      startTimerCommit.current();\n      startTimerCommit.current = null;\n      startTimer.current = setTimeout(function () {\n        stop(event, cb);\n      });\n      return;\n    }\n\n    startTimerCommit.current = null;\n    setRipples(function (oldRipples) {\n      if (oldRipples.length > 0) {\n        return oldRipples.slice(1);\n      }\n\n      return oldRipples;\n    });\n    rippleCallback.current = cb;\n  }, []);\n  React.useImperativeHandle(ref, function () {\n    return {\n      pulsate: pulsate,\n      start: start,\n      stop: stop\n    };\n  }, [pulsate, start, stop]);\n  return /*#__PURE__*/React.createElement(\"span\", _extends({\n    className: clsx(classes.root, className),\n    ref: container\n  }, other), /*#__PURE__*/React.createElement(TransitionGroup, {\n    component: null,\n    exit: true\n  }, ripples));\n});\nprocess.env.NODE_ENV !== \"production\" ? TouchRipple.propTypes = {\n  /**\n   * If `true`, the ripple starts at the center of the component\n   * rather than at the point of interaction.\n   */\n  center: PropTypes.bool,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string\n} : void 0;\nexport default withStyles(styles, {\n  flip: false,\n  name: 'MuiTouchRipple'\n})( /*#__PURE__*/React.memo(TouchRipple));","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport * as ReactDOM from 'react-dom';\nimport clsx from 'clsx';\nimport { elementTypeAcceptingRef, refType } from '@material-ui/utils';\nimport useForkRef from '../utils/useForkRef';\nimport useEventCallback from '../utils/useEventCallback';\nimport deprecatedPropType from '../utils/deprecatedPropType';\nimport withStyles from '../styles/withStyles';\nimport useIsFocusVisible from '../utils/useIsFocusVisible';\nimport TouchRipple from './TouchRipple';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'inline-flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    position: 'relative',\n    WebkitTapHighlightColor: 'transparent',\n    backgroundColor: 'transparent',\n    // Reset default value\n    // We disable the focus ring for mouse, touch and keyboard users.\n    outline: 0,\n    border: 0,\n    margin: 0,\n    // Remove the margin in Safari\n    borderRadius: 0,\n    padding: 0,\n    // Remove the padding in Firefox\n    cursor: 'pointer',\n    userSelect: 'none',\n    verticalAlign: 'middle',\n    '-moz-appearance': 'none',\n    // Reset\n    '-webkit-appearance': 'none',\n    // Reset\n    textDecoration: 'none',\n    // So we take precedent over the style of a native <a /> element.\n    color: 'inherit',\n    '&::-moz-focus-inner': {\n      borderStyle: 'none' // Remove Firefox dotted outline.\n\n    },\n    '&$disabled': {\n      pointerEvents: 'none',\n      // Disable link interactions\n      cursor: 'default'\n    },\n    '@media print': {\n      colorAdjust: 'exact'\n    }\n  },\n\n  /* Pseudo-class applied to the root element if `disabled={true}`. */\n  disabled: {},\n\n  /* Pseudo-class applied to the root element if keyboard focused. */\n  focusVisible: {}\n};\n/**\n * `ButtonBase` contains as few styles as possible.\n * It aims to be a simple building block for creating a button.\n * It contains a load of style reset and some focus/ripple logic.\n */\n\nvar ButtonBase = /*#__PURE__*/React.forwardRef(function ButtonBase(props, ref) {\n  var action = props.action,\n      buttonRefProp = props.buttonRef,\n      _props$centerRipple = props.centerRipple,\n      centerRipple = _props$centerRipple === void 0 ? false : _props$centerRipple,\n      children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      component = _props$component === void 0 ? 'button' : _props$component,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      _props$disableRipple = props.disableRipple,\n      disableRipple = _props$disableRipple === void 0 ? false : _props$disableRipple,\n      _props$disableTouchRi = props.disableTouchRipple,\n      disableTouchRipple = _props$disableTouchRi === void 0 ? false : _props$disableTouchRi,\n      _props$focusRipple = props.focusRipple,\n      focusRipple = _props$focusRipple === void 0 ? false : _props$focusRipple,\n      focusVisibleClassName = props.focusVisibleClassName,\n      onBlur = props.onBlur,\n      onClick = props.onClick,\n      onFocus = props.onFocus,\n      onFocusVisible = props.onFocusVisible,\n      onKeyDown = props.onKeyDown,\n      onKeyUp = props.onKeyUp,\n      onMouseDown = props.onMouseDown,\n      onMouseLeave = props.onMouseLeave,\n      onMouseUp = props.onMouseUp,\n      onTouchEnd = props.onTouchEnd,\n      onTouchMove = props.onTouchMove,\n      onTouchStart = props.onTouchStart,\n      onDragLeave = props.onDragLeave,\n      _props$tabIndex = props.tabIndex,\n      tabIndex = _props$tabIndex === void 0 ? 0 : _props$tabIndex,\n      TouchRippleProps = props.TouchRippleProps,\n      _props$type = props.type,\n      type = _props$type === void 0 ? 'button' : _props$type,\n      other = _objectWithoutProperties(props, [\"action\", \"buttonRef\", \"centerRipple\", \"children\", \"classes\", \"className\", \"component\", \"disabled\", \"disableRipple\", \"disableTouchRipple\", \"focusRipple\", \"focusVisibleClassName\", \"onBlur\", \"onClick\", \"onFocus\", \"onFocusVisible\", \"onKeyDown\", \"onKeyUp\", \"onMouseDown\", \"onMouseLeave\", \"onMouseUp\", \"onTouchEnd\", \"onTouchMove\", \"onTouchStart\", \"onDragLeave\", \"tabIndex\", \"TouchRippleProps\", \"type\"]);\n\n  var buttonRef = React.useRef(null);\n\n  function getButtonNode() {\n    // #StrictMode ready\n    return ReactDOM.findDOMNode(buttonRef.current);\n  }\n\n  var rippleRef = React.useRef(null);\n\n  var _React$useState = React.useState(false),\n      focusVisible = _React$useState[0],\n      setFocusVisible = _React$useState[1];\n\n  if (disabled && focusVisible) {\n    setFocusVisible(false);\n  }\n\n  var _useIsFocusVisible = useIsFocusVisible(),\n      isFocusVisible = _useIsFocusVisible.isFocusVisible,\n      onBlurVisible = _useIsFocusVisible.onBlurVisible,\n      focusVisibleRef = _useIsFocusVisible.ref;\n\n  React.useImperativeHandle(action, function () {\n    return {\n      focusVisible: function focusVisible() {\n        setFocusVisible(true);\n        buttonRef.current.focus();\n      }\n    };\n  }, []);\n  React.useEffect(function () {\n    if (focusVisible && focusRipple && !disableRipple) {\n      rippleRef.current.pulsate();\n    }\n  }, [disableRipple, focusRipple, focusVisible]);\n\n  function useRippleHandler(rippleAction, eventCallback) {\n    var skipRippleAction = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : disableTouchRipple;\n    return useEventCallback(function (event) {\n      if (eventCallback) {\n        eventCallback(event);\n      }\n\n      var ignore = skipRippleAction;\n\n      if (!ignore && rippleRef.current) {\n        rippleRef.current[rippleAction](event);\n      }\n\n      return true;\n    });\n  }\n\n  var handleMouseDown = useRippleHandler('start', onMouseDown);\n  var handleDragLeave = useRippleHandler('stop', onDragLeave);\n  var handleMouseUp = useRippleHandler('stop', onMouseUp);\n  var handleMouseLeave = useRippleHandler('stop', function (event) {\n    if (focusVisible) {\n      event.preventDefault();\n    }\n\n    if (onMouseLeave) {\n      onMouseLeave(event);\n    }\n  });\n  var handleTouchStart = useRippleHandler('start', onTouchStart);\n  var handleTouchEnd = useRippleHandler('stop', onTouchEnd);\n  var handleTouchMove = useRippleHandler('stop', onTouchMove);\n  var handleBlur = useRippleHandler('stop', function (event) {\n    if (focusVisible) {\n      onBlurVisible(event);\n      setFocusVisible(false);\n    }\n\n    if (onBlur) {\n      onBlur(event);\n    }\n  }, false);\n  var handleFocus = useEventCallback(function (event) {\n    // Fix for https://github.com/facebook/react/issues/7769\n    if (!buttonRef.current) {\n      buttonRef.current = event.currentTarget;\n    }\n\n    if (isFocusVisible(event)) {\n      setFocusVisible(true);\n\n      if (onFocusVisible) {\n        onFocusVisible(event);\n      }\n    }\n\n    if (onFocus) {\n      onFocus(event);\n    }\n  });\n\n  var isNonNativeButton = function isNonNativeButton() {\n    var button = getButtonNode();\n    return component && component !== 'button' && !(button.tagName === 'A' && button.href);\n  };\n  /**\n   * IE 11 shim for https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/repeat\n   */\n\n\n  var keydownRef = React.useRef(false);\n  var handleKeyDown = useEventCallback(function (event) {\n    // Check if key is already down to avoid repeats being counted as multiple activations\n    if (focusRipple && !keydownRef.current && focusVisible && rippleRef.current && event.key === ' ') {\n      keydownRef.current = true;\n      event.persist();\n      rippleRef.current.stop(event, function () {\n        rippleRef.current.start(event);\n      });\n    }\n\n    if (event.target === event.currentTarget && isNonNativeButton() && event.key === ' ') {\n      event.preventDefault();\n    }\n\n    if (onKeyDown) {\n      onKeyDown(event);\n    } // Keyboard accessibility for non interactive elements\n\n\n    if (event.target === event.currentTarget && isNonNativeButton() && event.key === 'Enter' && !disabled) {\n      event.preventDefault();\n\n      if (onClick) {\n        onClick(event);\n      }\n    }\n  });\n  var handleKeyUp = useEventCallback(function (event) {\n    // calling preventDefault in keyUp on a <button> will not dispatch a click event if Space is pressed\n    // https://codesandbox.io/s/button-keyup-preventdefault-dn7f0\n    if (focusRipple && event.key === ' ' && rippleRef.current && focusVisible && !event.defaultPrevented) {\n      keydownRef.current = false;\n      event.persist();\n      rippleRef.current.stop(event, function () {\n        rippleRef.current.pulsate(event);\n      });\n    }\n\n    if (onKeyUp) {\n      onKeyUp(event);\n    } // Keyboard accessibility for non interactive elements\n\n\n    if (onClick && event.target === event.currentTarget && isNonNativeButton() && event.key === ' ' && !event.defaultPrevented) {\n      onClick(event);\n    }\n  });\n  var ComponentProp = component;\n\n  if (ComponentProp === 'button' && other.href) {\n    ComponentProp = 'a';\n  }\n\n  var buttonProps = {};\n\n  if (ComponentProp === 'button') {\n    buttonProps.type = type;\n    buttonProps.disabled = disabled;\n  } else {\n    if (ComponentProp !== 'a' || !other.href) {\n      buttonProps.role = 'button';\n    }\n\n    buttonProps['aria-disabled'] = disabled;\n  }\n\n  var handleUserRef = useForkRef(buttonRefProp, ref);\n  var handleOwnRef = useForkRef(focusVisibleRef, buttonRef);\n  var handleRef = useForkRef(handleUserRef, handleOwnRef);\n\n  var _React$useState2 = React.useState(false),\n      mountedState = _React$useState2[0],\n      setMountedState = _React$useState2[1];\n\n  React.useEffect(function () {\n    setMountedState(true);\n  }, []);\n  var enableTouchRipple = mountedState && !disableRipple && !disabled;\n\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useEffect(function () {\n      if (enableTouchRipple && !rippleRef.current) {\n        console.error(['Material-UI: The `component` prop provided to ButtonBase is invalid.', 'Please make sure the children prop is rendered in this custom component.'].join('\\n'));\n      }\n    }, [enableTouchRipple]);\n  }\n\n  return /*#__PURE__*/React.createElement(ComponentProp, _extends({\n    className: clsx(classes.root, className, focusVisible && [classes.focusVisible, focusVisibleClassName], disabled && classes.disabled),\n    onBlur: handleBlur,\n    onClick: onClick,\n    onFocus: handleFocus,\n    onKeyDown: handleKeyDown,\n    onKeyUp: handleKeyUp,\n    onMouseDown: handleMouseDown,\n    onMouseLeave: handleMouseLeave,\n    onMouseUp: handleMouseUp,\n    onDragLeave: handleDragLeave,\n    onTouchEnd: handleTouchEnd,\n    onTouchMove: handleTouchMove,\n    onTouchStart: handleTouchStart,\n    ref: handleRef,\n    tabIndex: disabled ? -1 : tabIndex\n  }, buttonProps, other), children, enableTouchRipple ?\n  /*#__PURE__*/\n\n  /* TouchRipple is only needed client-side, x2 boost on the server. */\n  React.createElement(TouchRipple, _extends({\n    ref: rippleRef,\n    center: centerRipple\n  }, TouchRippleProps)) : null);\n});\nprocess.env.NODE_ENV !== \"production\" ? ButtonBase.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * A ref for imperative actions.\n   * It currently only supports `focusVisible()` action.\n   */\n  action: refType,\n\n  /**\n   * @ignore\n   *\n   * Use that prop to pass a ref to the native button component.\n   * @deprecated Use `ref` instead.\n   */\n  buttonRef: deprecatedPropType(refType, 'Use `ref` instead.'),\n\n  /**\n   * If `true`, the ripples will be centered.\n   * They won't start at the cursor interaction position.\n   */\n  centerRipple: PropTypes.bool,\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: elementTypeAcceptingRef,\n\n  /**\n   * If `true`, the base button will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   *\n   * ⚠️ Without a ripple there is no styling for :focus-visible by default. Be sure\n   * to highlight the element by applying separate styles with the `focusVisibleClassName`.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * If `true`, the touch ripple effect will be disabled.\n   */\n  disableTouchRipple: PropTypes.bool,\n\n  /**\n   * If `true`, the base button will have a keyboard focus ripple.\n   */\n  focusRipple: PropTypes.bool,\n\n  /**\n   * This prop can help identify which element has keyboard focus.\n   * The class name will be applied when the element gains the focus through keyboard interaction.\n   * It's a polyfill for the [CSS :focus-visible selector](https://drafts.csswg.org/selectors-4/#the-focus-visible-pseudo).\n   * The rationale for using this feature [is explained here](https://github.com/WICG/focus-visible/blob/master/explainer.md).\n   * A [polyfill can be used](https://github.com/WICG/focus-visible) to apply a `focus-visible` class to other components\n   * if needed.\n   */\n  focusVisibleClassName: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  href: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onClick: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onDragLeave: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * Callback fired when the component is focused with a keyboard.\n   * We trigger a `onFocus` callback too.\n   */\n  onFocusVisible: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onKeyDown: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onKeyUp: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onMouseDown: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onMouseLeave: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onMouseUp: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onTouchEnd: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onTouchMove: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onTouchStart: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  tabIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * Props applied to the `TouchRipple` element.\n   */\n  TouchRippleProps: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  type: PropTypes.oneOfType([PropTypes.oneOf(['button', 'reset', 'submit']), PropTypes.string])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiButtonBase'\n})(ButtonBase);"],"names":["React","useEnhancedEffect","styles","TouchRipple"],"mappings":"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"}