{"version":3,"file":"FileUpload.6e5f1b18.js","sources":["../../src/lib/containers/FileUpload.tsx"],"sourcesContent":["import * as React from 'react'\nimport { Button } from 'react-bootstrap'\nimport { uploadFile } from '../utils/SynapseClient'\nimport { useSynapseContext } from '../utils/SynapseContext'\nimport { FileUploadComplete, UploadCallbackResp } from '../utils/synapseTypes'\n\nexport type FileUploadProps = {\n  id?: string\n  label?: string\n  variant?: string // allow you to change the appearance of the button to link (see react bootstrap doc)\n  uploadCallback?: (response: UploadCallbackResp) => void\n  context?: any // to distinguish which file was uploaded if we have several FileUpload components on the same page\n}\n\nconst FileUpload: React.FC<FileUploadProps> = props => {\n  const { id, variant, label = 'Browse...', uploadCallback, context } = props\n  const { accessToken } = useSynapseContext()\n  const hiddenFileInput = React.useRef<HTMLInputElement>(null)\n\n  const clickHandler = () => {\n    if (hiddenFileInput?.current!) {\n      hiddenFileInput.current?.click()\n    }\n  }\n\n  const changeHandler = async (e: React.ChangeEvent<HTMLInputElement>) => {\n    if (e.target.files) {\n      const file = e.target.files[0]\n      try {\n        const resp: FileUploadComplete = await uploadFile(\n          accessToken,\n          file.name,\n          file,\n        )\n        uploadCallback?.({\n          success: true,\n          resp: resp,\n          context: context,\n        })\n      } catch (e) {\n        console.log('FileUpload: fail to upload file', e)\n        uploadCallback?.({\n          success: false,\n          error: e,\n        })\n      }\n    }\n  }\n\n  return (\n    <>\n      <input\n        type={'file'}\n        ref={hiddenFileInput}\n        onChange={changeHandler}\n        style={{ display: 'none' }}\n      />\n      <Button id={id} variant={variant} onClick={clickHandler}>\n        {label}\n      </Button>\n    </>\n  )\n}\n\nexport default FileUpload\n"],"names":["id","variant","uploadCallback","context","accessToken","_jsxs","_Fragment","_jsx","hiddenFileInput","resp","console","e","changeHandler","clickHandler","label"],"mappings":"qJAAA,KAAA,GAAA,OAAA,MAcA,EAAA,AAAA,GAAA,CACE,KAAA,CAAM,KAAEA,UAAIC,QAAAA,YAAiB,iBAAaC,WAAgBC,EAC1D,CAAM,eAAEC,EAAAA,EACR,EAAA,EAAA,OAAA,IAAA,EAgCA,MAAAC,GAAAC,EAAA,CACE,SAAA,CAAAC,EAAA,QAAA,CACE,KAAA,OACQ,IAAA,EACDC,SA5BX,KAAA,IAAA,CACE,GAAA,EAAA,OAAA,MAAA,CACE,KAAA,GAAA,EAAA,OAAA,MAAA,GACA,GAAA,CACE,KAAA,GAAA,KAAA,GAAA,EAAA,EAAA,KAAA,CAAA,EAKAN,WAAAA,CAAiB,QAAA,GACN,OACTO,SACAN,EAHY,OAAA,EAAA,CAMdO,QAAAA,IAAAA,kCAAAA,CAAAA,EACAR,WAAAA,CAAiB,QAAA,GACN,MAAA,CACFS,EAFK,CAIf,CACF,EAQaC,MAAAA,CACH,QAAA,MAAW,CAAX,CAAA,EAAAL,EAAA,EAAA,CAET,KAAQ,UAAQ,QAtCpB,IAAA,OACE,AAAA,WAAA,SACEC,MAAAA,UAAAA,QAAAA,QACD,EAmC4CK,SAAAA,CACxCC,CAAAA,CAAAA,CARL,CAAA,CAYH,EAED,GAAA,GAAA"}