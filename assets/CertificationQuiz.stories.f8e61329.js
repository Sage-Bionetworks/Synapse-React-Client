import{r as m,R as k,a as n,j as i,F as g}from"./jsx-runtime.325e7137.js";import{h as E,A as N,bt as O,bu as B}from"./index.26ad4be5.js";import{d}from"./ToastMessage.356d6e1c.js";import{M as L}from"./CardContainerLogic.981340ae.js";import{T as u}from"./Typography.46ba432f.js";import{B as x}from"./Button.2661b6a1.js";import{H as _}from"./IconSvg.a4adfbe0.js";import"./iframe.d25110d4.js";import"./index.1c9fa93d.js";import"./SynapseConstants.b6aa8bf5.js";import"./styled.8997d4d9.js";import"./utils.373161e6.js";import"./Alert.29e6a249.js";import"./createWithBsPrefix.2155bd3d.js";import"./index.35ce73ec.js";import"./isArray.ba495a61.js";import"./getEndpoint.bb7ded34.js";import"./SvgIcon.ac4cf4e1.js";import"./FullWidthAlert.3575feb9.js";import"./Tooltip.4e888661.js";import"./createSvgIcon.3ee89089.js";import"./removeClass.27874bcb.js";import"./hasClass.56fd144a.js";import"./uniqueId.69d847eb.js";import"./isSymbol.2f09fe74.js";import"./sqlFunctions.f22affb5.js";import"./RegularExpressions.3cd69849.js";import"./QueryFilter.590cf756.js";import"./useGetInfoFromIds.243ff3e5.js";import"./use-deep-compare-effect.esm.7f3b729f.js";import"./uniq.fe60be5f.js";import"./_baseSlice.50189bc5.js";import"./toInteger.ab08c53c.js";import"./_cacheHas.25c52fb1.js";import"./without.122c9dff.js";import"./_Set.a3bc86a9.js";import"./_setToArray.a82100c8.js";import"./ColumnType.744125d2.js";import"./FacetNav.6a2d1b44.js";import"./queryUtils.80dabcf7.js";import"./useInfiniteQuery.afe5b6da.js";import"./queryKeys.e0d3085f.js";import"./cloneDeep.c276ab46.js";import"./_baseClone.d743d757.js";import"./_getTag.f336c79f.js";import"./NoSearchResults.87a6bf00.js";import"./NoData.7c6227e7.js";import"./unCamelCase.07e38083.js";import"./useEntity.83926ac9.js";import"./useMutation.f1179de1.js";import"./pick.a485f6d7.js";import"./isEqual.f9f51665.js";import"./ElementWithTooltip.54bff3a8.js";import"./SynapseTableConstants.07ecdebd.js";import"./Dropdown.3db05cd7.js";import"./usePrevious.b109b72f.js";import"./contains.26318f11.js";import"./usePopperMarginModifiers.f4fd333a.js";import"./isRequiredForA11y.20ed4857.js";import"./Checkbox.7370b8fc.js";import"./RadioGroup.1d2bcaaa.js";import"./moment.a565bb48.js";import"./RangeSlider.410d56a0.js";import"./factory.3c8144b9.js";import"./react-sizeme.0043ad26.js";import"./Skeleton.4f13b0c1.js";import"./emotion-react.browser.esm.f1e534da.js";import"./hoist-non-react-statics.cjs.a7086e34.js";import"./ColorGradient.16f0e0f2.js";import"./colorPalette.8145e2e2.js";import"./LoadingScreen.96557e43.js";import"./Modal.ffdd738d.js";import"./inheritsLoose.fe1a6d58.js";import"./useWaitForDOMRef.25f83f82.js";import"./InfoOutlined.191e0556.js";import"./SelectionCriteriaPill.180359c3.js";import"./Close.8a7ab13a.js";import"./react-select.esm.37f0bd31.js";import"./Select-54ac8379.esm.7d4435ca.js";import"./CustomSelectWidget.8aa014ba.js";import"./index.browser.d3f051c7.js";import"./UserCard.c35f579d.js";import"./IconCopy.73ef776f.js";import"./SkeletonTable.a881218b.js";import"./times.a7f9fd68.js";import"./Overlay.4ea04f69.js";import"./WarningModal.d2809462.js";import"./react-intersection-observer.esm.3d7339a4.js";import"./DateFormatter.5ab10a51.js";import"./EntityIcon.214316ad.js";import"./core.esm.4df43147.js";import"./isEmpty.222398e6.js";import"./union.16201132.js";import"./isString.ccf264c0.js";import"./useGetDownloadListStatistics.309757f4.js";import"./QueryCount.761f554c.js";import"./useGetAccessRequirement.2e163384.js";import"./ManagedACTAccessRequirementStatus.be369a71.js";import"./FileUpload.cbea3817.js";import"./UserSearchBox.642720d5.js";import"./UserOrTeamBadge.100cabc8.js";import"./EntityLink.1360d713.js";import"./ButtonBase.4ea13919.js";import"./SynapseVideo.85edd752.js";import"./IconList.1e564fd3.js";import"./UserCardList.0ea15755.js";const M="org.sagebionetworks.repo.model.quiz.MultichoiceResponse",c=()=>{const{accessToken:a}=E(),z=N(),[o,T]=m.exports.useState(),[l,f]=m.exports.useState([]),[e,h]=m.exports.useState(),C=k.useRef(null),S="https://help.synapse.org/docs/Getting-Started.2055471150.html",y=async()=>{try{T(await O(a))}catch(t){z(t)}};m.exports.useEffect(()=>{y()},[a]);const w=(t,p)=>{const s=[...l.filter(r=>r.questionIndex!==t),{questionIndex:t,answerIndex:[p],concreteType:M}];f(s)},v=()=>{var t;(t=C.current)==null||t.reset(),f([]),h(void 0),y()},R=async()=>{try{if(o&&o.questions.length===l.length){const t={quizId:o.id,questionResponses:l},p=await B(a,t);h(p),window.scrollTo(0,0)}else d("Please answer all of the questions and try again.","warning")}catch(t){d(t.reason,"danger")}},b=t=>t?{content:i(g,{children:"More info"}),closePopoverOnClick:!0,onClick:()=>window.open(t,"_blank"),variant:"primary"}:void 0;return n("div",{className:"bootstrap-4-backport CertificationQuiz",children:[e&&i("div",{children:n(g,{children:[!e.passed&&i("div",{className:"failBanner",children:"Quiz Failed"}),n(u,{variant:"hintText",children:["Score: ",e.score," / ",o==null?void 0:o.questions.length]}),e.passed?d(`You passed the Synapse Certification Quiz on ${e.passedOn}`,"success"):n(u,{variant:"body1",children:["Please review the items shown in red below, and"," ",i("a",{href:"#",onClick:t=>{t.preventDefault(),v()},children:"try again"}),"."]})]})}),n("div",{className:"CertificationQuiz__container",children:[n(x,{onClick:()=>window.open(S,"_blank"),className:"help-button",variant:"light-secondary",children:[i(_,{className:"HelpButton",style:{marginRight:"4px"}}),"Help"]}),o?i("div",{dangerouslySetInnerHTML:{__html:o.header}}):"",i("form",{ref:C,onSubmit:t=>t.preventDefault(),children:i("ol",{children:o==null?void 0:o.questions.map(t=>{var p,s;return n("li",{role:t.exclusive?"radiogroup":void 0,children:[i("div",{dangerouslySetInnerHTML:{__html:t.prompt},className:e&&((s=(p=e.corrections)==null?void 0:p.find(r=>r.question.questionIndex===t.questionIndex))!=null&&s.isCorrect?"":"incorrectQuestion")}),t.answers.map(r=>n("div",{children:[i("input",{id:`${t.questionIndex}-${r.answerIndex}`,name:`${t.questionIndex}`,type:t.exclusive?"radio":"checkbox",value:r.answerIndex,onClick:I=>w(t.questionIndex,Number(I.currentTarget.value)),disabled:!!e}),i("label",{style:{fontWeight:400},htmlFor:`${t.questionIndex}-${r.answerIndex}`,children:r.prompt})]},`${t.questionIndex}-${r.answerIndex}`)),i(L,{contentProps:{markdown:t.helpText},placement:"right",actionButton:b(t.docLink),showCloseButton:!0,children:n(u,{variant:"hintText",color:"primary",children:[i(_,{className:"HelpButton",style:{marginRight:"4px"}}),"Need help answering this question?"]})})]},t.questionIndex)})})}),!e&&i(x,{className:"help-button",variant:"primary",onClick:()=>R(),children:"Submit"})]})]})},Q=c;try{c.displayName="CertificationQuiz",c.__docgenInfo={description:"",displayName:"CertificationQuiz",props:{}},typeof STORYBOOK_REACT_CLASSES<"u"&&(STORYBOOK_REACT_CLASSES["src/lib/containers/CertificationQuiz.tsx#CertificationQuiz"]={docgenInfo:c.__docgenInfo,name:"CertificationQuiz",path:"src/lib/containers/CertificationQuiz.tsx#CertificationQuiz"})}catch{}const Hi={parameters:{storySource:{source:`import React from 'react'
import { ComponentStory, ComponentMeta } from '@storybook/react'

import CertificationQuiz from './CertificationQuiz'

export default {
  title: 'Synapse/CertificationQuiz',
  component: CertificationQuiz,
  argTypes: {},
} as ComponentMeta<typeof CertificationQuiz>

const Template: ComponentStory<typeof CertificationQuiz> = args => (
  <CertificationQuiz {...args} />
)

export const CertificationQuizDemo = Template.bind({})
CertificationQuizDemo.args = {}
`,locationsMap:{"certification-quiz-demo":{startLoc:{col:59,line:12},endLoc:{col:1,line:14},startBody:{col:59,line:12},endBody:{col:1,line:14}}}}},title:"Synapse/CertificationQuiz",component:Q,argTypes:{}},H=a=>i(Q,{...a}),$=H.bind({});$.args={};const $i=["CertificationQuizDemo"];export{$ as CertificationQuizDemo,$i as __namedExportsOrder,Hi as default};
