import{V as w,aT as E}from"./index.09dc23e8.js";import{r as l,a as C,j as e}from"./jsx-runtime.ed9254b2.js";import{d as R}from"./dayjs.min.33c1da17.js";import{a as N}from"./CardContainerLogic.cb33a7b8.js";import{l as v}from"./LoadingScreen.61a6cd73.js";import{B as M}from"./Button.f70cf9a8.js";import{j as D}from"./SynapseConstants.290eab74.js";import"./index.6a4b5ee2.js";import"./iframe.99e068ca.js";import"./styled.83fecbff.js";import"./utils.ce7a07fb.js";import"./TransitionGroupContext.335c91bc.js";import"./useTheme.fd34ae61.js";import"./Alert.5c7a73ee.js";import"./hook.8985ff56.js";import"./createWithBsPrefix.a83dfdb4.js";import"./divWithClassName.2b7a9e20.js";import"./index.35ce73ec.js";import"./isArray.9c9c9c65.js";import"./getEndpoint.bb7ded34.js";import"./Link.4533b1ea.js";import"./Typography.754ee5d4.js";import"./Button.3c46c29a.js";import"./ButtonBase.7ff40024.js";import"./emotion-react.browser.esm.c3af8cc3.js";import"./sqlFunctions.be81fc47.js";import"./RegularExpressions.3cd69849.js";import"./QueryFilter.b62d2248.js";import"./useGetInfoFromIds.b374d08a.js";import"./use-deep-compare-effect.esm.d4fdc855.js";import"./uniq.4166e015.js";import"./_baseSlice.50189bc5.js";import"./toInteger.b20f9fa9.js";import"./isSymbol.18579460.js";import"./_cacheHas.9a7f07e6.js";import"./without.1a3a79a3.js";import"./uniqueId.0aa69bea.js";import"./_Set.fd0aa824.js";import"./_setToArray.a82100c8.js";import"./ColumnType.744125d2.js";import"./FacetNav.ef4231a4.js";import"./queryUtils.3ff51778.js";import"./useInfiniteQuery.800a5497.js";import"./queryKeys.e0d3085f.js";import"./cloneDeep.63504d31.js";import"./_baseClone.01d9004e.js";import"./_getTag.fbcd92ef.js";import"./NoSearchResults.1be5e0bb.js";import"./NoData.c4f1764e.js";import"./unCamelCase.07e38083.js";import"./useEntity.d2c714dc.js";import"./useMutation.60f0d665.js";import"./pick.962abfc3.js";import"./isEqual.bed5d254.js";import"./ElementWithTooltip.5cb18982.js";import"./SynapseTableConstants.07ecdebd.js";import"./IconSvg.f9657569.js";import"./Tooltip.f5ebbadc.js";import"./createSvgIcon.90f6b4eb.js";import"./InfoOutlined.2dc079e8.js";import"./Dropdown.b2b7957d.js";import"./usePrevious.92366a31.js";import"./contains.7d4be39e.js";import"./usePopperMarginModifiers.a98822d9.js";import"./hasClass.56fd144a.js";import"./isRequiredForA11y.20ed4857.js";import"./Checkbox.7810a3a9.js";import"./RadioGroup.c62491ea.js";import"./RangeSlider.9dc64f2c.js";import"./factory.8feb3a1e.js";import"./react-sizeme.eea81253.js";import"./Skeleton.5cb63a0f.js";import"./ColorGradient.16f0e0f2.js";import"./colorPalette.8145e2e2.js";import"./Modal.c698b2fc.js";import"./inheritsLoose.c118f853.js";import"./removeClass.27874bcb.js";import"./useWaitForDOMRef.053cb997.js";import"./SelectionCriteriaPill.56572b2d.js";import"./Close.925f78cd.js";import"./react-select.esm.9c102701.js";import"./Select-54ac8379.esm.8e533a13.js";import"./CustomSelectWidget.99a5d587.js";import"./index.browser.38d62754.js";import"./UserCard.07bf50f3.js";import"./IconCopy.952aa6c8.js";import"./SkeletonTable.1f898edc.js";import"./times.d13dc2b1.js";import"./ToastMessage.2604ce43.js";import"./FullWidthAlert.adc5f173.js";import"./Overlay.60675e59.js";import"./WarningModal.45183711.js";import"./react-intersection-observer.esm.c3cafa92.js";import"./DateFormatter.f3e72c7c.js";import"./utc.9490955d.js";import"./EntityIcon.2341fbe2.js";import"./core.esm.1308c590.js";import"./isEmpty.12e3e69f.js";import"./union.7c2f104c.js";import"./isString.737fff8b.js";import"./relativeTime.35d2831e.js";import"./useGetDownloadListStatistics.b06129ff.js";import"./QueryCount.a2409428.js";import"./useGetAccessRequirement.1983a1b6.js";import"./RestrictionInformation.edfbac5a.js";import"./ManagedACTAccessRequirementStatus.be369a71.js";import"./FileUpload.0a5e9b6d.js";import"./UserSearchBox.3a770103.js";import"./UserOrTeamBadge.6dd7e061.js";import"./EntityLink.35fcf10a.js";import"./SynapseVideo.56518c38.js";import"./IconList.1c1b0b76.js";import"./UserCardList.f4976604.js";const s=({tableEntityId:o})=>{const{accessToken:c}=w(),[i,f]=l.exports.useState(),[n,T]=l.exports.useState(3);let u=!0;if(l.exports.useEffect(()=>((()=>{if(u){if(i)return;const m={concreteType:"org.sagebionetworks.repo.model.table.QueryBundleRequest",query:{sql:`SELECT "categories", "date", "title", "mdDescription" FROM ${o} ORDER BY "date" desc`},entityId:o,partMask:D};E(m,c).then(r=>{var p;f((p=r.queryResult)==null?void 0:p.queryResults)})}})(),()=>{u=!1}),[o,c]),!i)return v;const a=i.headers,b=a.findIndex(t=>t.name==="categories"),S=a.findIndex(t=>t.name==="date"),F=a.findIndex(t=>t.name==="title"),g=a.findIndex(t=>t.name==="mdDescription");return C("div",{className:"Feed bootstrap-4-backport",children:[e("div",{className:"FeedItems",children:i.rows.map((t,m)=>{if(m>n-1)return;const r=t.values;r.some(d=>d===null)&&console.warn("Row has null value(s) when no nulls expected");const p=JSON.parse(r[b]),I=r[S],x=r[F],h=r[g];return e("div",{className:"FeedItem",children:C("div",{children:[p&&e("div",{className:"FeedItemCategories",children:p.map((d,_)=>e("div",{className:"FeedItemCategory",children:d},`row-${m},categoryIndex-${_}`))}),e("p",{className:"FeedItemDate",children:R(new Date(parseInt(I))).format("MMMM YYYY")}),e("p",{className:"FeedItemTitle",children:x}),e("div",{className:"FeedItemDescription",children:e(N,{markdown:h})})]})},`row-${m}`)})}),i.rows.length>n&&e("div",{className:"FeedViewAllNewsButtonContainer",children:e(M,{variant:"primary",size:"lg",className:"pill",onClick:()=>T(n+3),children:"VIEW MORE NEWS"})})]})},y=s;try{s.displayName="TableFeedCards",s.__docgenInfo={description:"",displayName:"TableFeedCards",props:{tableEntityId:{defaultValue:null,description:"",name:"tableEntityId",required:!0,type:{name:"string"}}}},typeof STORYBOOK_REACT_CLASSES<"u"&&(STORYBOOK_REACT_CLASSES["src/lib/containers/TableFeedCards.tsx#TableFeedCards"]={docgenInfo:s.__docgenInfo,name:"TableFeedCards",path:"src/lib/containers/TableFeedCards.tsx#TableFeedCards"})}catch{}const jt={parameters:{storySource:{source:`import React from 'react'
import { ComponentStory, ComponentMeta } from '@storybook/react'
import TableFeedCards from './TableFeedCards'

export default {
  title: 'Synapse/TableFeedCards',
  component: TableFeedCards,
} as ComponentMeta<typeof TableFeedCards>

const Template: ComponentStory<typeof TableFeedCards> = args => (
  <TableFeedCards {...args} />
)

export const Demo = Template.bind({})
Demo.args = {
  tableEntityId: 'syn23520190',
}
`,locationsMap:{demo:{startLoc:{col:56,line:10},endLoc:{col:1,line:12},startBody:{col:56,line:10},endBody:{col:1,line:12}}}}},title:"Synapse/TableFeedCards",component:y},O=o=>e(y,{...o}),B=O.bind({});B.args={tableEntityId:"syn23520190"};const Qt=["Demo"];export{B as Demo,Qt as __namedExportsOrder,jt as default};
