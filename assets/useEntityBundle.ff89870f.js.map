{"version":3,"file":"useEntityBundle.ff89870f.js","sources":["../../src/lib/utils/hooks/SynapseAPI/entity/useEntityBundle.ts"],"sourcesContent":["import { useQuery, UseQueryOptions } from 'react-query'\nimport { SynapseClient } from '../../..'\nimport { SynapseClientError } from '../../../SynapseClientError'\nimport { useSynapseContext } from '../../../SynapseContext'\nimport { EntityBundle, EntityBundleRequest } from '../../../synapseTypes'\nimport { entityQueryKeys } from './queryKeys'\n\nconst ALL_FIELDS: EntityBundleRequest = {\n  includeEntity: true,\n  includeEntityPath: true,\n  includeAnnotations: true,\n  includePermissions: true,\n  includeHasChildren: true,\n  includeAccessControlList: true,\n  includeFileHandles: true,\n  includeTableBundle: true,\n  includeRootWikiId: true,\n  includeBenefactorACL: true,\n  includeDOIAssociation: true,\n  includeFileName: true,\n  includeThreadCount: true,\n  includeRestrictionInformation: true,\n}\n\nexport default function useGetEntityBundle(\n  entityId: string,\n  bundleRequest: EntityBundleRequest = ALL_FIELDS,\n  version?: number,\n  options?: UseQueryOptions<EntityBundle, SynapseClientError, EntityBundle>,\n) {\n  const { accessToken } = useSynapseContext()\n  return useQuery<EntityBundle, SynapseClientError>(\n    entityQueryKeys.bundle(entityId, version, bundleRequest),\n    () =>\n      SynapseClient.getEntityBundleV2(\n        entityId,\n        bundleRequest,\n        version,\n        accessToken,\n      ),\n    options,\n  )\n}\n"],"names":["SynapseClient.getEntityBundleV2"],"mappings":"8DAOA,KAAM,GAAkC,CACtC,cAAe,GACf,kBAAmB,GACnB,mBAAoB,GACpB,mBAAoB,GACpB,mBAAoB,GACpB,yBAA0B,GAC1B,mBAAoB,GACpB,mBAAoB,GACpB,kBAAmB,GACnB,qBAAsB,GACtB,sBAAuB,GACvB,gBAAiB,GACjB,mBAAoB,GACpB,8BAA+B,EACjC,EAEA,WACE,EACA,EAAqC,EACrC,EACA,EACA,CACM,KAAA,CAAE,eAAgB,IACxB,MAAO,GACL,EAAgB,OAAO,EAAU,EAAS,CAAa,EACvD,IACEA,EACE,EACA,EACA,EACA,CACF,EACF,CACF,CACF"}