import{h as w,am as E}from"./index.26ad4be5.js";import{r as l,a as C,j as e}from"./jsx-runtime.325e7137.js";import{h as R}from"./moment.a565bb48.js";import{a as N}from"./CardContainerLogic.981340ae.js";import{l as v}from"./LoadingScreen.96557e43.js";import{B as M}from"./Button.2661b6a1.js";import{i as D}from"./SynapseConstants.b6aa8bf5.js";import"./index.1c9fa93d.js";import"./iframe.d25110d4.js";import"./styled.8997d4d9.js";import"./utils.373161e6.js";import"./Alert.29e6a249.js";import"./createWithBsPrefix.2155bd3d.js";import"./index.35ce73ec.js";import"./isArray.ba495a61.js";import"./getEndpoint.bb7ded34.js";import"./SvgIcon.ac4cf4e1.js";import"./sqlFunctions.f22affb5.js";import"./RegularExpressions.3cd69849.js";import"./QueryFilter.590cf756.js";import"./useGetInfoFromIds.243ff3e5.js";import"./use-deep-compare-effect.esm.7f3b729f.js";import"./uniq.fe60be5f.js";import"./_baseSlice.50189bc5.js";import"./toInteger.ab08c53c.js";import"./isSymbol.2f09fe74.js";import"./_cacheHas.25c52fb1.js";import"./without.122c9dff.js";import"./uniqueId.69d847eb.js";import"./_Set.a3bc86a9.js";import"./_setToArray.a82100c8.js";import"./ColumnType.744125d2.js";import"./FacetNav.6a2d1b44.js";import"./queryUtils.80dabcf7.js";import"./useInfiniteQuery.afe5b6da.js";import"./queryKeys.e0d3085f.js";import"./cloneDeep.c276ab46.js";import"./_baseClone.d743d757.js";import"./_getTag.f336c79f.js";import"./NoSearchResults.87a6bf00.js";import"./NoData.7c6227e7.js";import"./unCamelCase.07e38083.js";import"./useEntity.83926ac9.js";import"./useMutation.f1179de1.js";import"./pick.a485f6d7.js";import"./isEqual.f9f51665.js";import"./ElementWithTooltip.54bff3a8.js";import"./SynapseTableConstants.07ecdebd.js";import"./IconSvg.a4adfbe0.js";import"./Tooltip.4e888661.js";import"./createSvgIcon.3ee89089.js";import"./InfoOutlined.191e0556.js";import"./Dropdown.3db05cd7.js";import"./usePrevious.b109b72f.js";import"./contains.26318f11.js";import"./usePopperMarginModifiers.f4fd333a.js";import"./hasClass.56fd144a.js";import"./isRequiredForA11y.20ed4857.js";import"./Checkbox.7370b8fc.js";import"./RadioGroup.1d2bcaaa.js";import"./RangeSlider.410d56a0.js";import"./factory.3c8144b9.js";import"./react-sizeme.0043ad26.js";import"./Skeleton.4f13b0c1.js";import"./emotion-react.browser.esm.f1e534da.js";import"./hoist-non-react-statics.cjs.a7086e34.js";import"./ColorGradient.16f0e0f2.js";import"./colorPalette.8145e2e2.js";import"./Modal.ffdd738d.js";import"./inheritsLoose.fe1a6d58.js";import"./removeClass.27874bcb.js";import"./useWaitForDOMRef.25f83f82.js";import"./SelectionCriteriaPill.180359c3.js";import"./Close.8a7ab13a.js";import"./react-select.esm.37f0bd31.js";import"./Select-54ac8379.esm.7d4435ca.js";import"./CustomSelectWidget.8aa014ba.js";import"./index.browser.d3f051c7.js";import"./Typography.46ba432f.js";import"./UserCard.c35f579d.js";import"./IconCopy.73ef776f.js";import"./SkeletonTable.a881218b.js";import"./times.a7f9fd68.js";import"./ToastMessage.356d6e1c.js";import"./FullWidthAlert.3575feb9.js";import"./Overlay.4ea04f69.js";import"./WarningModal.d2809462.js";import"./react-intersection-observer.esm.3d7339a4.js";import"./DateFormatter.5ab10a51.js";import"./EntityIcon.214316ad.js";import"./core.esm.4df43147.js";import"./isEmpty.222398e6.js";import"./union.16201132.js";import"./isString.ccf264c0.js";import"./useGetDownloadListStatistics.309757f4.js";import"./QueryCount.761f554c.js";import"./useGetAccessRequirement.2e163384.js";import"./ManagedACTAccessRequirementStatus.be369a71.js";import"./FileUpload.cbea3817.js";import"./UserSearchBox.642720d5.js";import"./UserOrTeamBadge.100cabc8.js";import"./EntityLink.1360d713.js";import"./ButtonBase.4ea13919.js";import"./SynapseVideo.85edd752.js";import"./IconList.1e564fd3.js";import"./UserCardList.0ea15755.js";const s=({tableEntityId:r})=>{const{accessToken:c}=w(),[i,y]=l.exports.useState(),[n,T]=l.exports.useState(3);let u=!0;if(l.exports.useEffect(()=>((()=>{if(u){if(i)return;const m={concreteType:"org.sagebionetworks.repo.model.table.QueryBundleRequest",query:{sql:`SELECT "categories", "date", "title", "mdDescription" FROM ${r} ORDER BY "date" desc`},entityId:r,partMask:D};E(m,c).then(o=>{var p;y((p=o.queryResult)==null?void 0:p.queryResults)})}})(),()=>{u=!1}),[r,c]),!i)return v;const a=i.headers,b=a.findIndex(t=>t.name==="categories"),S=a.findIndex(t=>t.name==="date"),F=a.findIndex(t=>t.name==="title"),g=a.findIndex(t=>t.name==="mdDescription");return C("div",{className:"Feed bootstrap-4-backport",children:[e("div",{className:"FeedItems",children:i.rows.map((t,m)=>{if(m>n-1)return;const o=t.values;o.some(d=>d===null)&&console.warn("Row has null value(s) when no nulls expected");const p=JSON.parse(o[b]),I=o[S],h=o[F],x=o[g];return e("div",{className:"FeedItem",children:C("div",{children:[p&&e("div",{className:"FeedItemCategories",children:p.map((d,_)=>e("div",{className:"FeedItemCategory",children:d},`row-${m},categoryIndex-${_}`))}),e("p",{className:"FeedItemDate",children:R(new Date(parseInt(I))).format("MMMM YYYY")}),e("p",{className:"FeedItemTitle",children:h}),e("div",{className:"FeedItemDescription",children:e(N,{markdown:x})})]})},`row-${m}`)})}),i.rows.length>n&&e("div",{className:"FeedViewAllNewsButtonContainer",children:e(M,{variant:"primary",size:"lg",className:"pill",onClick:()=>T(n+3),children:"VIEW MORE NEWS"})})]})},f=s;try{s.displayName="TableFeedCards",s.__docgenInfo={description:"",displayName:"TableFeedCards",props:{tableEntityId:{defaultValue:null,description:"",name:"tableEntityId",required:!0,type:{name:"string"}}}},typeof STORYBOOK_REACT_CLASSES<"u"&&(STORYBOOK_REACT_CLASSES["src/lib/containers/TableFeedCards.tsx#TableFeedCards"]={docgenInfo:s.__docgenInfo,name:"TableFeedCards",path:"src/lib/containers/TableFeedCards.tsx#TableFeedCards"})}catch{}const Ot={parameters:{storySource:{source:`import React from 'react'
import { ComponentStory, ComponentMeta } from '@storybook/react'
import TableFeedCards from './TableFeedCards'

export default {
  title: 'Synapse/TableFeedCards',
  component: TableFeedCards,
} as ComponentMeta<typeof TableFeedCards>

const Template: ComponentStory<typeof TableFeedCards> = args => (
  <TableFeedCards {...args} />
)

export const Demo = Template.bind({})
Demo.args = {
  tableEntityId: 'syn23520190',
}
`,locationsMap:{demo:{startLoc:{col:56,line:10},endLoc:{col:1,line:12},startBody:{col:56,line:10},endBody:{col:1,line:12}}}}},title:"Synapse/TableFeedCards",component:f},O=r=>e(f,{...r}),B=O.bind({});B.args={tableEntityId:"syn23520190"};const Bt=["Demo"];export{B as Demo,Bt as __namedExportsOrder,Ot as default};
