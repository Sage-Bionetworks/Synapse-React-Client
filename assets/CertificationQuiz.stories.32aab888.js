import{r as m,R as k,a as n,j as i,F as g}from"./jsx-runtime.6cb91464.js";import{h as E,A as N,bt as O,bu as B}from"./index.253aaada.js";import{d}from"./ToastMessage.5ece0449.js";import{M as L}from"./CardContainerLogic.8943b1aa.js";import{T as u}from"./Typography.c072ef4f.js";import{B as x}from"./Button.719dc857.js";import{H as _}from"./IconSvg.e72d865a.js";import"./iframe.77de7a8b.js";import"./index.13becb40.js";import"./SynapseConstants.b6aa8bf5.js";import"./styled.9d49d23e.js";import"./utils.11d89a6f.js";import"./Alert.f130f9d6.js";import"./createWithBsPrefix.c2eb45fa.js";import"./index.35ce73ec.js";import"./isArray.c85446b1.js";import"./getEndpoint.bb7ded34.js";import"./SvgIcon.7bbcd48d.js";import"./FullWidthAlert.771b5ce8.js";import"./Tooltip.9b073f35.js";import"./createSvgIcon.c493b6c9.js";import"./removeClass.27874bcb.js";import"./hasClass.56fd144a.js";import"./uniqueId.4f03145e.js";import"./isSymbol.116fae96.js";import"./sqlFunctions.1830f92f.js";import"./RegularExpressions.3cd69849.js";import"./QueryFilter.3c469190.js";import"./useGetInfoFromIds.1e4ac22b.js";import"./use-deep-compare-effect.esm.7ae859ab.js";import"./uniq.1102b3bc.js";import"./_baseSlice.50189bc5.js";import"./toInteger.70d616ab.js";import"./_cacheHas.9d7b6529.js";import"./without.095365fb.js";import"./_Set.f07c2c40.js";import"./_setToArray.a82100c8.js";import"./ColumnType.744125d2.js";import"./FacetNav.7c91c12d.js";import"./queryUtils.9424e4b1.js";import"./useInfiniteQuery.62a8c625.js";import"./queryKeys.e0d3085f.js";import"./cloneDeep.f408eeac.js";import"./_baseClone.21067d4e.js";import"./_getTag.23171a9a.js";import"./NoSearchResults.b263a0fc.js";import"./NoData.1a51e057.js";import"./unCamelCase.07e38083.js";import"./useEntity.eab415d6.js";import"./useMutation.3ad2be87.js";import"./pick.7b3b1cb8.js";import"./isEqual.3875cd1f.js";import"./ElementWithTooltip.a2bf3b61.js";import"./SynapseTableConstants.07ecdebd.js";import"./Dropdown.a7c1bd76.js";import"./usePrevious.05e36544.js";import"./contains.6a52d65a.js";import"./usePopperMarginModifiers.8332b5d5.js";import"./isRequiredForA11y.20ed4857.js";import"./Checkbox.7069d805.js";import"./RadioGroup.dba2ae1a.js";import"./moment.a565bb48.js";import"./RangeSlider.9e136d78.js";import"./factory.4a76326a.js";import"./react-sizeme.87853ccd.js";import"./Skeleton.2376d7a3.js";import"./emotion-react.browser.esm.63b80b77.js";import"./hoist-non-react-statics.cjs.a7086e34.js";import"./ColorGradient.16f0e0f2.js";import"./colorPalette.8145e2e2.js";import"./LoadingScreen.5bb8c5fe.js";import"./Modal.79aadbe2.js";import"./inheritsLoose.1e598ca9.js";import"./useWaitForDOMRef.8c62de15.js";import"./InfoOutlined.04f2d1df.js";import"./SelectionCriteriaPill.bf7e136e.js";import"./Close.e45ac9a4.js";import"./react-select.esm.4209b07f.js";import"./Select-54ac8379.esm.e3131d5c.js";import"./CustomSelectWidget.3cfd30a9.js";import"./index.browser.e6c4f87b.js";import"./UserCard.e4c786fd.js";import"./IconCopy.af1c96f6.js";import"./SkeletonTable.ab3ce48c.js";import"./times.231664f9.js";import"./Overlay.b1b8d860.js";import"./WarningModal.d990b25d.js";import"./react-intersection-observer.esm.2bfa2c2a.js";import"./DateFormatter.6c0f3d6c.js";import"./EntityIcon.973857d5.js";import"./core.esm.a0032c0a.js";import"./isEmpty.2b3beab2.js";import"./union.d74c3967.js";import"./isString.729987f0.js";import"./useGetDownloadListStatistics.82077613.js";import"./QueryCount.47ab349c.js";import"./useGetAccessRequirement.30b0033c.js";import"./ManagedACTAccessRequirementStatus.b5318817.js";import"./FileUpload.1c9d038a.js";import"./UserSearchBox.91caec0d.js";import"./UserOrTeamBadge.7ea7b8dc.js";import"./EntityLink.fc84c7f7.js";import"./SynapseVideo.323e4355.js";import"./IconList.f8668156.js";import"./UserCardList.a366786c.js";const M="org.sagebionetworks.repo.model.quiz.MultichoiceResponse",c=()=>{const{accessToken:a}=E(),z=N(),[o,T]=m.exports.useState(),[l,f]=m.exports.useState([]),[e,h]=m.exports.useState(),C=k.useRef(null),S="https://help.synapse.org/docs/Getting-Started.2055471150.html",y=async()=>{try{T(await O(a))}catch(t){z(t)}};m.exports.useEffect(()=>{y()},[a]);const w=(t,p)=>{const s=[...l.filter(r=>r.questionIndex!==t),{questionIndex:t,answerIndex:[p],concreteType:M}];f(s)},v=()=>{var t;(t=C.current)==null||t.reset(),f([]),h(void 0),y()},R=async()=>{try{if(o&&o.questions.length===l.length){const t={quizId:o.id,questionResponses:l},p=await B(a,t);h(p),window.scrollTo(0,0)}else d("Please answer all of the questions and try again.","warning")}catch(t){d(t.reason,"danger")}},b=t=>t?{content:i(g,{children:"More info"}),closePopoverOnClick:!0,onClick:()=>window.open(t,"_blank"),variant:"primary"}:void 0;return n("div",{className:"bootstrap-4-backport CertificationQuiz",children:[e&&i("div",{children:n(g,{children:[!e.passed&&i("div",{className:"failBanner",children:"Quiz Failed"}),n(u,{variant:"hintText",children:["Score: ",e.score," / ",o==null?void 0:o.questions.length]}),e.passed?d(`You passed the Synapse Certification Quiz on ${e.passedOn}`,"success"):n(u,{variant:"body1",children:["Please review the items shown in red below, and"," ",i("a",{href:"#",onClick:t=>{t.preventDefault(),v()},children:"try again"}),"."]})]})}),n("div",{className:"CertificationQuiz__container",children:[n(x,{onClick:()=>window.open(S,"_blank"),className:"help-button",variant:"light-secondary",children:[i(_,{className:"HelpButton",style:{marginRight:"4px"}}),"Help"]}),o?i("div",{dangerouslySetInnerHTML:{__html:o.header}}):"",i("form",{ref:C,onSubmit:t=>t.preventDefault(),children:i("ol",{children:o==null?void 0:o.questions.map(t=>{var p,s;return n("li",{role:t.exclusive?"radiogroup":void 0,children:[i("div",{dangerouslySetInnerHTML:{__html:t.prompt},className:e&&((s=(p=e.corrections)==null?void 0:p.find(r=>r.question.questionIndex===t.questionIndex))!=null&&s.isCorrect?"":"incorrectQuestion")}),t.answers.map(r=>n("div",{children:[i("input",{id:`${t.questionIndex}-${r.answerIndex}`,name:`${t.questionIndex}`,type:t.exclusive?"radio":"checkbox",value:r.answerIndex,onClick:I=>w(t.questionIndex,Number(I.currentTarget.value)),disabled:!!e}),i("label",{style:{fontWeight:400},htmlFor:`${t.questionIndex}-${r.answerIndex}`,children:r.prompt})]},`${t.questionIndex}-${r.answerIndex}`)),i(L,{contentProps:{markdown:t.helpText},placement:"right",actionButton:b(t.docLink),showCloseButton:!0,children:n(u,{variant:"hintText",color:"primary",children:[i(_,{className:"HelpButton",style:{marginRight:"4px"}}),"Need help answering this question?"]})})]},t.questionIndex)})})}),!e&&i(x,{className:"help-button",variant:"primary",onClick:()=>R(),children:"Submit"})]})]})},Q=c;try{c.displayName="CertificationQuiz",c.__docgenInfo={description:"",displayName:"CertificationQuiz",props:{}},typeof STORYBOOK_REACT_CLASSES<"u"&&(STORYBOOK_REACT_CLASSES["src/lib/containers/CertificationQuiz.tsx#CertificationQuiz"]={docgenInfo:c.__docgenInfo,name:"CertificationQuiz",path:"src/lib/containers/CertificationQuiz.tsx#CertificationQuiz"})}catch{}const Mi={parameters:{storySource:{source:`import React from 'react'
import { ComponentStory, ComponentMeta } from '@storybook/react'

import CertificationQuiz from './CertificationQuiz'

export default {
  title: 'Synapse/CertificationQuiz',
  component: CertificationQuiz,
  argTypes: {},
} as ComponentMeta<typeof CertificationQuiz>

const Template: ComponentStory<typeof CertificationQuiz> = args => (
  <CertificationQuiz {...args} />
)

export const CertificationQuizDemo = Template.bind({})
CertificationQuizDemo.args = {}
`,locationsMap:{"certification-quiz-demo":{startLoc:{col:59,line:12},endLoc:{col:1,line:14},startBody:{col:59,line:12},endBody:{col:1,line:14}}}}},title:"Synapse/CertificationQuiz",component:Q,argTypes:{}},H=a=>i(Q,{...a}),$=H.bind({});$.args={};const Hi=["CertificationQuizDemo"];export{$ as CertificationQuizDemo,Hi as __namedExportsOrder,Mi as default};
