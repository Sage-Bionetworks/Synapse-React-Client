import{a4 as w,c7 as E}from"./index.5da0c2fe.js";import{r as l,a as C,j as e}from"./jsx-runtime.b9dbe3f2.js";import{d as R}from"./dayjs.min.299ad3a1.js";import{e as N}from"./AccessRequirementList.41da6f0a.js";import{l as v}from"./LoadingScreen.a4b87421.js";import{B as M}from"./Button.5e8fef04.js";import{i as D}from"./SynapseConstants.aef18750.js";import"./index.1d295946.js";import"./iframe.daa7e99b.js";import"./styled.b8523d56.js";import"./Tooltip.48a3285f.js";import"./SvgIcon.07fafc9f.js";import"./useTheme.0510b97a.js";import"./TransitionGroupContext.550f3593.js";import"./FullWidthAlert.4c795642.js";import"./hook.8a461b2d.js";import"./createWithBsPrefix.e49426e0.js";import"./divWithClassName.39a68f1e.js";import"./index.35ce73ec.js";import"./Typography.67fe2a50.js";import"./Fade.79c18b91.js";import"./isArray.cd664950.js";import"./getEndpoint.f1f195f5.js";import"./IconSvg.e161b9ac.js";import"./IconButton.92911f6e.js";import"./ButtonBase.a93e0872.js";import"./emotion-react.browser.esm.c079a2eb.js";import"./Link.da3e8d7d.js";import"./Button.7c5736c7.js";import"./useGetInfoFromIds.df5d54b4.js";import"./use-deep-compare-effect.esm.29b168ec.js";import"./uniq.cebce7b4.js";import"./_baseSlice.50189bc5.js";import"./toInteger.ac9e6667.js";import"./isSymbol.0dd8f9e4.js";import"./_cacheHas.59c4bb78.js";import"./without.42fc4fba.js";import"./toString.e4b44ed1.js";import"./_Set.469d2b08.js";import"./_setToArray.a82100c8.js";import"./queryKeys.f96c2872.js";import"./UserCard.4bb4c375.js";import"./IconCopy.e1e77b1a.js";import"./SkeletonTable.4e7a5f80.js";import"./times.0d4bfec0.js";import"./Skeleton.e124e8e4.js";import"./ToastMessage.3861395a.js";import"./removeClass.27874bcb.js";import"./hasClass.56fd144a.js";import"./uniqueId.dbc9074b.js";import"./Overlay.b50e2181.js";import"./contains.c92a1cab.js";import"./usePopperMarginModifiers.df9835fb.js";import"./useWaitForDOMRef.a0e6e40c.js";import"./RegularExpressions.3cd69849.js";import"./react-intersection-observer.esm.a3a9e472.js";import"./useInfiniteQuery.d3f40dc1.js";import"./DateFormatter.d642ffb3.js";import"./utc.fbb5bd49.js";import"./EntityIcon.2ca31f4b.js";import"./core.esm.e765a482.js";import"./pick.c984aa8c.js";import"./_baseClone.ef57de12.js";import"./isEmpty.d81e9f95.js";import"./isEqual.e5ecbe9a.js";import"./index.browser.877b1983.js";import"./union.70e21edc.js";import"./CustomSelectWidget.428424ed.js";import"./Select-54ac8379.esm.708df6a0.js";import"./isString.7debb151.js";import"./factory.6a31a56b.js";import"./sqlFunctions.32cb4e2b.js";import"./QueryFilter.89fbadd0.js";import"./useEntity.bc266fa3.js";import"./useMutation.17976629.js";import"./SynapseTableConstants.07ecdebd.js";import"./FacetNav.3a80d784.js";import"./queryUtils.5d78ee18.js";import"./cloneDeep.18f0269c.js";import"./NoSearchResults.cf2c2af3.js";import"./NoData.f256ee32.js";import"./unCamelCase.07e38083.js";import"./ColumnType.0fc7f115.js";import"./useGetQueryResultBundle.c6cba393.js";import"./ElementWithTooltip.974896e1.js";import"./Dropdown.d53923ab.js";import"./usePrevious.3e9a9e11.js";import"./isRequiredForA11y.20ed4857.js";import"./Checkbox.b6409fc8.js";import"./RadioGroup.798ea8f4.js";import"./RangeSlider.7b6de83e.js";import"./react-sizeme.61f4b5d1.js";import"./ColorGradient.16f0e0f2.js";import"./colorPalette.8145e2e2.js";import"./Modal.d5b47340.js";import"./inheritsLoose.68af5c28.js";import"./SelectionCriteriaPill.8cea27a1.js";import"./Close.51c782db.js";import"./relativeTime.a1b54a10.js";import"./useDownloadList.bf5786ba.js";import"./QueryCount.e531dd90.js";import"./react-select.esm.a57c6cc0.js";import"./IconList.cb121091.js";import"./UserCardList.a1e65843.js";import"./useAccessRequirements.04427f1b.js";import"./RestrictionInformation.edfbac5a.js";import"./ManagedACTAccessRequirementStatus.be369a71.js";import"./FileUpload.5c37e200.js";import"./UserSearchBox.c2dd0710.js";import"./UserOrTeamBadge.b05f03b8.js";import"./EntityLink.c18672b0.js";import"./ErrorChip.b2a17b81.js";import"./SynapseVideo.9513cdaa.js";const s=({tableEntityId:o})=>{const{accessToken:c}=w(),[i,f]=l.exports.useState(),[n,T]=l.exports.useState(3);let u=!0;if(l.exports.useEffect(()=>((()=>{if(u){if(i)return;const m={concreteType:"org.sagebionetworks.repo.model.table.QueryBundleRequest",query:{sql:`SELECT "categories", "date", "title", "mdDescription" FROM ${o} ORDER BY "date" desc`},entityId:o,partMask:D};E(m,c).then(r=>{var p;f((p=r.queryResult)==null?void 0:p.queryResults)})}})(),()=>{u=!1}),[o,c]),!i)return v;const a=i.headers,b=a.findIndex(t=>t.name==="categories"),S=a.findIndex(t=>t.name==="date"),F=a.findIndex(t=>t.name==="title"),g=a.findIndex(t=>t.name==="mdDescription");return C("div",{className:"Feed bootstrap-4-backport",children:[e("div",{className:"FeedItems",children:i.rows.map((t,m)=>{if(m>n-1)return;const r=t.values;r.some(d=>d===null)&&console.warn("Row has null value(s) when no nulls expected");const p=JSON.parse(r[b]),I=r[S],x=r[F],h=r[g];return e("div",{className:"FeedItem",children:C("div",{children:[p&&e("div",{className:"FeedItemCategories",children:p.map((d,_)=>e("div",{className:"FeedItemCategory",children:d},`row-${m},categoryIndex-${_}`))}),e("p",{className:"FeedItemDate",children:R(new Date(parseInt(I))).format("MMMM YYYY")}),e("p",{className:"FeedItemTitle",children:x}),e("div",{className:"FeedItemDescription",children:e(N,{markdown:h})})]})},`row-${m}`)})}),i.rows.length>n&&e("div",{className:"FeedViewAllNewsButtonContainer",children:e(M,{variant:"primary",size:"lg",className:"pill",onClick:()=>T(n+3),children:"VIEW MORE NEWS"})})]})},y=s;try{s.displayName="TableFeedCards",s.__docgenInfo={description:"",displayName:"TableFeedCards",props:{tableEntityId:{defaultValue:null,description:"",name:"tableEntityId",required:!0,type:{name:"string"}}}},typeof STORYBOOK_REACT_CLASSES<"u"&&(STORYBOOK_REACT_CLASSES["src/lib/containers/TableFeedCards.tsx#TableFeedCards"]={docgenInfo:s.__docgenInfo,name:"TableFeedCards",path:"src/lib/containers/TableFeedCards.tsx#TableFeedCards"})}catch{}const Qt={parameters:{storySource:{source:`import React from 'react'
import { ComponentStory, ComponentMeta } from '@storybook/react'
import TableFeedCards from './TableFeedCards'

export default {
  title: 'Synapse/TableFeedCards',
  component: TableFeedCards,
} as ComponentMeta<typeof TableFeedCards>

const Template: ComponentStory<typeof TableFeedCards> = args => (
  <TableFeedCards {...args} />
)

export const Demo = Template.bind({})
Demo.args = {
  tableEntityId: 'syn23520190',
}
`,locationsMap:{demo:{startLoc:{col:56,line:10},endLoc:{col:1,line:12},startBody:{col:56,line:10},endBody:{col:1,line:12}}}}},title:"Synapse/TableFeedCards",component:y},O=o=>e(y,{...o}),B=O.bind({});B.args={tableEntityId:"syn23520190"};const $t=["Demo"];export{B as Demo,$t as __namedExportsOrder,Qt as default};
