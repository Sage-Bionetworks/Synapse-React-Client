{"version":3,"file":"QueryCount.7053bcbd.js","sources":["../../src/lib/containers/QueryCount.tsx"],"sourcesContent":["import React from 'react'\nimport { SynapseConstants } from '../utils/'\nimport { parseEntityIdFromSqlStatement } from '../utils/functions/sqlFunctions'\nimport useGetQueryResultBundle from '../utils/hooks/SynapseAPI/entity/useGetQueryResultBundle'\nimport {\n  FacetColumnValuesRequest,\n  QueryBundleRequest,\n} from '../utils/synapseTypes/'\n\nexport type QueryCountProps = {\n  sql: string\n  selectedFacets?: FacetColumnValuesRequest[]\n  parens?: boolean\n}\n\nconst QueryCount: React.FunctionComponent<QueryCountProps> = ({\n  sql,\n  selectedFacets,\n  parens,\n}) => {\n  const entityId = parseEntityIdFromSqlStatement(sql)\n\n  const request: QueryBundleRequest = {\n    concreteType: 'org.sagebionetworks.repo.model.table.QueryBundleRequest',\n    query: {\n      sql,\n      selectedFacets,\n    },\n    entityId,\n    partMask: SynapseConstants.BUNDLE_MASK_QUERY_COUNT,\n  }\n\n  const { data: queryResult } = useGetQueryResultBundle(request)\n\n  const localCount = queryResult?.queryCount?.toLocaleString()\n  /* https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/toLocaleString#Using_toLocaleString */\n  return (\n    <React.Fragment>\n      {localCount && (parens ? `(${localCount})` : localCount)}\n    </React.Fragment>\n  )\n}\nexport default QueryCount\n"],"names":["sql","selectedFacets","parens","entityId","BUNDLE_MASK_QUERY_COUNT","queryResult","_jsx","localCount"],"mappings":"6IAAA,KAAA,GAAA,OAAA,MAeA,EAAA,CAAA,CAA8D,MAC5DA,iBACAC,YACAC,OAEA,KAAA,GAAA,EAAA,CAAA,EAEA,EAAA,CAAoC,aAAA,0DACpB,MAAA,CACP,MACLF,gBACAC,EAFK,WAIPE,SAAAA,CAC2BC,EAG7B,CAAM,KAAA,GAAQC,EAAAA,CAAAA,EAEd,EAAA,oBAAA,aAAA,cAAA,iBAEA,MAAAC,GAAA,EAAA,SAAA,CACE,SAAA,GAAA,GAAA,IAAA,KAAA,EAC+CC,CAAAA,CAGlD"}