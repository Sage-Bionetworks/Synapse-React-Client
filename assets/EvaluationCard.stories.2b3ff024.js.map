{"version":3,"file":"EvaluationCard.stories.2b3ff024.js","sources":["../../src/lib/containers/evaluation_queues/EvaluationCard.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport {\n  deleteEvaluation,\n  getEvaluationPermissions,\n} from '../../utils/SynapseClient'\nimport { SynapseClientError } from '../../utils/SynapseClientError'\nimport { Evaluation } from '../../utils/synapseTypes'\nimport { Button, Card, Col, Dropdown, Row } from 'react-bootstrap'\nimport { ErrorBanner } from '../ErrorBanner'\nimport { CreatedOnByUserDiv } from './CreatedOnByUserDiv'\nimport { UserEvaluationPermissions } from '../../utils/synapseTypes/Evaluation/UserEvaluationPermissions'\nimport { RequiredProperties } from '../../utils'\nimport WarningModal from '../synapse_form_wrapper/WarningModal'\nimport { useSynapseContext } from '../../utils/SynapseContext'\nimport IconSvg from '../IconSvg'\n\nexport type ExistingEvaluation = RequiredProperties<\n  Evaluation,\n  'id' | 'etag' | 'createdOn' | 'contentSource' | 'ownerId'\n>\n\nexport type EvaluationCardProps = {\n  /** properties of the Evaluation to show*/\n  evaluation: ExistingEvaluation\n  /** Callback when the Edit option in the dropdown is clicked*/\n  onEdit: () => void\n  /** Callback when the Modify Access option in the dropdown is clicked*/\n  onModifyAccess: () => void\n  /** Callback when the Submit button is clicked*/\n  onSubmit: () => void\n  /** Callback when the Delete option is successful */\n  onDeleteSuccess: () => void\n}\n\n/**\n * This component is currently only intended to be used in Synapse.org.\n * For this reason, the dropdown menu items are unimplemented as no components\n * in this project implement their behavior. The dropdown options are also\n * not shown if the current user does not have permissions for the action\n *\n * All Evaluation metadata must be provided to this component; it will not\n * retrieve an Evaluation via a REST API call\n */\nexport const EvaluationCard: React.FunctionComponent<EvaluationCardProps> = ({\n  evaluation,\n  onEdit,\n  onModifyAccess,\n  onSubmit,\n  onDeleteSuccess,\n}: EvaluationCardProps) => {\n  const { accessToken } = useSynapseContext()\n  const [error, setError] = useState<SynapseClientError>()\n  const [permissions, setPermissions] = useState<UserEvaluationPermissions>()\n\n  useEffect(() => {\n    //clear error\n    setError(undefined)\n\n    getEvaluationPermissions(evaluation.id, accessToken)\n      .then(retrievedPermissions => {\n        setPermissions(retrievedPermissions)\n      })\n      .catch(error => setError(error))\n  }, [evaluation, accessToken])\n\n  const onDelete = () => {\n    setError(undefined)\n    deleteEvaluation(evaluation.id, accessToken)\n      .then(onDeleteSuccess)\n      .catch(setError)\n  }\n\n  return (\n    <div className=\"bootstrap-4-backport evaluation-card\">\n      <Card>\n        <Card.Body>\n          {error && <ErrorBanner error={error} />}\n\n          {permissions && (\n            <>\n              <Row>\n                <Col>\n                  <label>EVALUATION QUEUE</label>\n                </Col>\n                <Col>\n                  <EvaluationCardDropdown\n                    permissions={permissions}\n                    onDelete={onDelete}\n                    onEdit={onEdit}\n                    onModifyAccess={onModifyAccess}\n                  />\n                </Col>\n              </Row>\n\n              <h4>\n                {evaluation.name} ({evaluation.id})\n              </h4>\n\n              <label>Description</label>\n              <p>{evaluation.description}</p>\n              <label>Instructions</label>\n              <p>{evaluation.submissionInstructionsMessage}</p>\n              <CreatedOnByUserDiv\n                userId={evaluation.ownerId}\n                date={new Date(evaluation.createdOn)}\n              />\n              {permissions?.canSubmit && (\n                <Button\n                  className=\"submit-button\"\n                  type=\"primary\"\n                  onClick={onSubmit}\n                >\n                  Submit\n                </Button>\n              )}\n            </>\n          )}\n        </Card.Body>\n      </Card>\n    </div>\n  )\n}\n\ntype EvaluationCardDropdownProps = {\n  permissions: UserEvaluationPermissions\n  onEdit: () => void\n  onModifyAccess: () => void\n  onDelete: () => void\n}\n\nconst EvaluationCardDropdown: React.FunctionComponent<\n  EvaluationCardDropdownProps\n> = ({ permissions, onEdit, onModifyAccess, onDelete }) => {\n  const [deleteWarningShow, setDeleteWarningShow] = useState<boolean>(false)\n\n  if (\n    !(\n      permissions.canEdit ||\n      permissions.canChangePermissions ||\n      permissions.canDelete\n    )\n  ) {\n    return null\n  }\n  return (\n    <>\n      {permissions?.canDelete && (\n        <WarningModal\n          title=\"Delete Evaluation Queue\"\n          modalBody=\"Are you sure you want to delete the Evaluation Queue?\"\n          show={deleteWarningShow}\n          confirmButtonText=\"Delete\"\n          onConfirm={() => {\n            onDelete()\n            setDeleteWarningShow(false)\n          }}\n          onConfirmCallbackArgs={[]}\n          onCancel={() => {\n            setDeleteWarningShow(false)\n          }}\n          confirmButtonVariant=\"danger\"\n        />\n      )}\n      <Dropdown className=\"float-right\">\n        <Dropdown.Toggle variant=\"link\" className=\"dropdown-no-caret\">\n          <IconSvg options={{ icon: 'verticalEllipsis' }} />\n        </Dropdown.Toggle>\n        <Dropdown.Menu alignRight={true}>\n          {permissions.canEdit && (\n            <Dropdown.Item onClick={onEdit}>Edit</Dropdown.Item>\n          )}\n          {permissions.canChangePermissions && (\n            <Dropdown.Item onClick={onModifyAccess}>\n              Modify Access\n            </Dropdown.Item>\n          )}\n          {permissions.canDelete && (\n            <>\n              <Dropdown.Divider />\n              <Dropdown.Item onClick={() => setDeleteWarningShow(true)}>\n                Delete\n              </Dropdown.Item>{' '}\n            </>\n          )}\n        </Dropdown.Menu>\n      </Dropdown>\n    </>\n  )\n}\n"],"names":["evaluation","onEdit","onModifyAccess","onSubmit","onDeleteSuccess","accessToken","useEffect","setError","getEvaluationPermissions","setPermissions","deleteEvaluation","_jsx","Card","_jsxs","_Fragment","description","submissionInstructionsMessage","ownerId","permissions","onDelete","deleteWarningShow","setDeleteWarningShow"],"mappings":"yrDAAA,KAAA,GAAA,OAAA,MAAA,kCA2CO,EAAA,CAAA,CAAsE,aAC3EA,SACAC,iBACAC,WACAC,qBACAC,CAEA,KAAA,CAAM,eAAEC,EAAAA,EACR,CAAA,EAAA,GAAA,EAAA,EACA,CAAA,EAAA,GAAA,EAAA,EAEAC,EAAAA,IAAAA,CAEEC,EAAAA,MAAAA,EAEAC,EAAAA,EAAAA,GAAAA,CAAAA,EAAAA,KAAAA,AAAAA,GAAAA,CAEIC,EAAAA,CAAAA,CAAc,CAAA,EAAA,MAAA,AAAA,GAAA,EAAA,CAAA,CAAA,CAFlB,EAAA,CAAA,EAAA,CAAA,CAAA,EAOF,KAAA,GAAA,IAAA,CACEF,EAAAA,MAAAA,EACAG,EAAAA,EAAAA,GAAAA,CAAAA,EAAAA,KAAAA,CAAAA,EAAAA,MAAAA,CAAAA,CAAA,EAKF,MAAAC,GAAA,MAAA,CACE,UAAA,uCAAe,SAAAA,EAAAC,EAAA,CACb,SAAAC,EAAAD,EAAA,KAAA,CACE,SAAA,CAAA,GAAAD,EAAA,EAAA,CACY,OAAa,CAAA,EAAA,GAAAE,EAAAC,EAAA,CAGrB,SAAA,CAAAD,EAAA,EAAA,CACE,SAAA,CAAAF,EAAA,EAAA,CACE,SAAAA,EAAA,QAAA,CACE,SAAA,kBAAA,CAAA,CAAA,CAAA,EAAAA,EAAA,EAAA,CAEF,SAAAA,EAAA,EAAA,CACE,cACE,WACA,SACA,gBACA,CAAA,CAJF,CAAA,CAAA,CALJ,CAAA,EAAAE,EAAA,KAAA,CAcA,SAAA,CAAA,EAAA,KAAA,KAAA,EAAA,GAAA,GAAA,CAAA,CAAA,EAAAF,EAAA,QAAA,CAIA,SAAA,aAAA,CAAA,EAAAA,EAAA,IAAA,CACA,SAAA,EAAA,WAAeI,CAAAA,EAAAA,EAAAA,QAAAA,CACf,SAAA,cAAA,CAAA,EAAAJ,EAAA,IAAA,CACA,SAAA,EAAA,6BAAeK,CAAAA,EAAAA,EAAAA,EAAAA,CACf,OAAA,EAAA,QACqBC,KAAAA,GAAAA,MAAAA,EAAAA,SAAAA,CACb,CAAA,EAAA,kBAAA,YAAAN,EAAA,EAAA,CAGN,UAAA,gBACY,KAAA,UACL,QAAA,EACIR,SAAAA,QAHX,CAAA,CAAA,CA5BJ,CAAA,CAAA,CAJJ,CAAA,CAAA,CAAA,CADF,CAAA,CA+CL,EASD,EAAA,CAAA,CAEK,cAAEe,SAAajB,iBAAQC,cAAgBiB,CAC1C,KAAA,CAAA,EAAA,GAAA,EAAA,EAAA,EAEA,MAAA,GAAA,SAAA,EAAA,sBAAA,EAAA,UASAN,EAAAC,EAAA,CACE,SAAA,CAAA,kBAAA,YAAAH,EAAA,EAAA,CAEI,MAAA,0BACQ,UAAA,wDACI,KAAA,EACJS,kBAAAA,SACY,UAAA,IAAA,CAEhBD,IACAE,EAAAA,EAAAA,CAAoB,EACrB,sBAAA,CAAA,EARH,SAAA,IAAA,CAWIA,EAAAA,EAAAA,CAAoB,EACrB,qBAAA,QACoB,CAAA,EAAAR,EAAA,EAAA,CAGzB,UAAA,cAAoB,SAAA,CAAAF,EAAA,EAAA,OAAA,CAClB,QAAA,OAAyB,UAAA,oBAAiB,SAAAA,EAAA,EAAA,CACxC,QAAA,CAAkB,KAAA,kBAAQ,CAAR,CAAA,CAAlB,CAAA,EAAAE,EAAA,EAAA,KAAA,CAEF,WAAA,GAA2B,SAAA,CAAA,EAAA,SAAAF,EAAA,EAAA,KAAA,CAEvB,QAAA,EAAwBV,SAAAA,MAAxB,CAAA,EAAA,EAAA,sBAAAU,EAAA,EAAA,KAAA,CAGA,QAAA,EAAwBT,SAAAA,eAAxB,CAAA,EAAA,EAAA,WAAAW,EAAAC,EAAA,CAKA,SAAA,CAAAH,EAAA,EAAA,QAAA,CAAA,CAAA,EAAAA,EAAA,EAAA,KAAA,CAEE,QAAA,IAAA,EAAA,EAAA,EAAkD,SAAA,QAAlD,CAAA,EAAA,GAAA,CAFF,CAAA,CAAA,CAVJ,CAAA,CAAA,CAJF,CAAA,CAAA,CAlBF,CAAA,EAHA,IA8CH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}