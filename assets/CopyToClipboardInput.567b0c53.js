import{r as i,a as p,F as u,j as e}from"./jsx-runtime.1f7e2749.js";import{I as C}from"./IconCopy.f0404146.js";import{T as y}from"./ToastMessage.26e3c87f.js";import{b as m}from"./isArray.4b374ec1.js";import{B as h}from"./Button.2ee39cf1.js";const n=({value:o,inputWidth:s})=>{const[l,a]=i.exports.useState(!1),t=i.exports.createRef(),r=(f,d)=>c=>{c.preventDefault(),navigator.clipboard.writeText(d).then(()=>{a(!0),setTimeout(()=>{a(!1)},4e3)})};return p(u,{children:[e(y,{text:"Successfully copied to clipboard",show:l,autohide:!0}),p("div",{className:"SRC-copyToClipboardInputContainer SRC-marginBottomTop",ref:t,children:[e(m,{className:"SRC-copyToClipboardInput",type:"text",style:{width:s},value:o,readOnly:!0,onClick:r(t,o)}),e(h,{className:"SRC-copyToClipboardButton",onClick:r(t,o),children:e(C,{})})]})]})};try{n.displayName="CopyToClipboardInput",n.__docgenInfo={description:`Component that holds a large string in a readonly <input> to be copied to the user's clipboard when clicked.
This component should only be used when the value to copy is not very long AND the full length of the string
does not necessarily need to be seen by the user. This component was adapted from the email address copy to
clipboard functionality in UserCardMedium. For smaller/inline strings, look at UserCardMedium functionality
for displaying the value in a <p> tag instead of a readonly <input> tag.`,displayName:"CopyToClipboardInput",props:{value:{defaultValue:null,description:"",name:"value",required:!0,type:{name:"string"}},inputWidth:{defaultValue:null,description:"",name:"inputWidth",required:!0,type:{name:"string"}}}},typeof STORYBOOK_REACT_CLASSES<"u"&&(STORYBOOK_REACT_CLASSES["src/lib/containers/CopyToClipboardInput.tsx#CopyToClipboardInput"]={docgenInfo:n.__docgenInfo,name:"CopyToClipboardInput",path:"src/lib/containers/CopyToClipboardInput.tsx#CopyToClipboardInput"})}catch{}export{n as C};
