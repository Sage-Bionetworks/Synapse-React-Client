import{F as re,A as ne,B as ie,a as se,D as ae,b as de,c as le,C as me,M as ce,d as pe,P as ue,e as fe}from"./EntityFinder.54ab8160.js";import{S as he}from"./SkeletonTable.8245159d.js";import{r as F}from"./FullWidthAlert.50041932.js";import{o as Ie,dr as ye,ds as Se}from"./index.96d1ff89.js";import{E as Ee}from"./EntityTypeUtils.bdc1854e.js";import"./assert.bff40da6.js";import{T as K}from"./Typography.bfdf676e.js";import{E as Ce}from"./EntityFinderModal.5277cfd9.js";import{I as ge}from"./IconSvg.3d20df6f.js";import{B as De}from"./LoadingScreen.e3fe6e43.js";import{W as we}from"./WarningModal.c0522703.js";import{d as v}from"./ToastMessage.0defc330.js";import{C as be}from"./Checkbox.7f748159.js";import{a as h,j as r,F as H}from"./jsx-runtime.2e925369.js";import{i as ve}from"./isEqual.b68cdc22.js";import{S as Re}from"./Skeleton.8dd0668e.js";import{B as g}from"./Button.c582ea4c.js";import"./iframe.e10c02b8.js";import"./objectWithoutPropertiesLoose.090b3c10.js";import"./toConsumableArray.b3669986.js";import"./index.06f4a415.js";import"./withStyles.8be28b48.js";import"./react-sizeme.2a3b7528.js";import"./Arrow.c6e8b887.js";import"./sqlFunctions.b49ac766.js";import"./use-deep-compare-effect.esm.9d3fc03b.js";import"./useGetEntityChildren.06a14fce.js";import"./EntityChildren.50133102.js";import"./index.f252d424.js";import"./stateManager-845a3300.esm.2aae5abd.js";import"./classCallCheck.8304ed06.js";import"./inherits.98d6a15d.js";import"./HelpPopover.714237a2.js";import"./MarkdownPopover.11eac420.js";import"./usePopperMarginModifiers.7a874fe8.js";import"./useWaitForDOMRef.0721218f.js";import"./isObject.f3be1931.js";import"./Transition.d42a873e.js";import"./hasClass.56fd144a.js";import"./MarkdownSynapse.3edb40a6.js";import"./UserCard.49f9ed9f.js";import"./getEndpoint.0de7fccf.js";import"./IconCopy.b1eba79c.js";import"./Tooltip.6c95fe7b.js";import"./createSvgIcon.d78a924b.js";import"./SvgIcon.31249d58.js";import"./useTheme.8804f8cd.js";import"./makeStyles.9dfaa099.js";import"./Overlay.ac713ce0.js";import"./factory.d61d007f.js";import"./SynapseVideo.8f0f0d47.js";import"./react-intersection-observer.m.66de6abb.js";import"./DateFormatter.7460955a.js";import"./moment.53181859.js";import"./useEntityBundle.ff89870f.js";import"./EntityIcon.3c921c09.js";import"./SynapseTableConstants.07ecdebd.js";import"./SchemaDrivenAnnotationEditor.caf58e36.js";import"./isEmpty.e282ce74.js";import"./toString.f9b9a371.js";import"./useListState.7f5a3e64.js";import"./Collapse.fe074047.js";import"./groupBy.2fdd5f41.js";import"./_baseMap.c36a847d.js";import"./_baseIsEqual.eef422d4.js";import"./_cacheHas.d1425815.js";import"./_setToArray.a82100c8.js";import"./CalendarWithIconFormGroup.c0ed68a0.js";import"./index.5ef2ed87.js";import"./index.8cde812d.js";import"./Modal.ea36991f.js";import"./useWillUnmount.4a16e5cd.js";import"./removeClass.27874bcb.js";import"./EntityModal.084dc29d.js";import"./ExternalFileHandleInterface.5a3302aa.js";import"./LockTwoTone.32ff1570.js";import"./cloneDeep.2e1019c2.js";import"./Dropdown.83bddc70.js";import"./isRequiredForA11y.61bbc671.js";import"./Sort.ed7909a9.js";import"./EntityLink.45c35c62.js";import"./useFavorites.882366c5.js";import"./times.436e4282.js";import"./toInteger.1984412c.js";import"./toNumber.71be2bd9.js";import"./debounce.bb67b392.js";import"./TypeUtils.a2c41307.js";import"./InfoOutlined.22a371fd.js";import"./uniqueId.50daefd4.js";const Te=window.React.useState;function _e(m){const[c,p]=Te(new Set(m));function u(...I){const a=new Set(c);for(const _ of I)a.add(_);p(a)}function T(I){const a=new Set(c);a.delete(I),p(a)}function d(){p(new Set)}return{set:c,add:u,remove:T,clear:d}}const j=window.React.useEffect,D=window.React.useState,R="Add Files",ke="Remove Files",Ae="No files in this Dataset",Ne="Save the Dataset to continue.",Fe="Create a Version of this Dataset to freeze it in its current state",Be="Dataset Saved",$=42,Oe=350;function w(m){var V;const{entityId:c,onSave:p,onClose:u}=m,[T,d]=D(!1),[I,a]=D(!1),[_,B]=D(!1),[o,W]=D(),[y,q]=D(),b=e=>{B(!0),W(e)},{data:S,refetch:G}=Ie(c,void 0,{enabled:!o});j(()=>{!o&&S&&(S.items==null&&(S.items=[]),b(S),B(!1))},[S,o]);const{set:E,add:O,remove:U,clear:k}=_e(),x=!!(o&&o.items.length===E.size);j(()=>{if(y&&o&&!ve(y,o)){const e=Z();v(Ne,"info",{title:e,primaryButtonConfig:{text:"Save changes to Draft",onClick:()=>N.mutate(o)}})}q(o)},[o]);const{data:A}=ye(c),Y=(V=A==null?void 0:A.path[1])==null?void 0:V.id,N=Se({onSuccess:()=>{p?p():v(Fe,"success",{title:Be})},onError:e=>{e.status===412?v("Re-retrieve the dataset to get the latest changes. Your current changes will be lost.","warning",{title:"Dataset Updated since Last Fetched",primaryButtonConfig:{text:"Retrieve Dataset",onClick:()=>{G()}}}):v(e.reason,"danger",{title:"An Error Occurred"})}}),J=o==null?void 0:o.items.map(e=>({...e,isSelected:E.has(e.entityId),setSelected:t=>t?O(e.entityId):U(e.entityId)}));function L(e,t){let n=e.filter(l=>!t.find(s=>s.entityId===l.entityId));const i=[...n],{updatedItems:f,newItems:C}=t.reduce((l,s)=>{const z=e.find(oe=>oe.entityId===s.entityId);return z?s.versionNumber!==z.versionNumber?l.updatedItems.push(s):n.push(s):l.newItems.push(s),l},{updatedItems:[],newItems:[]});return{unchangedItems:n,updatedItems:f,newItems:C,deletedItems:i}}function Z(){const{updatedItems:e,newItems:t,deletedItems:n}=L(y==null?void 0:y.items,o==null?void 0:o.items);let i="";return n.length>0?i+=`${n.length} Item${n.length===1?"":"s"} removed`:(i+=`${t.length} Item${t.length===1?"":"s"} added`,e.length>0&&(i+=` and ${e.length} Item${e.length===1?"":"s"} updated`)),i}function Q(e){b(t=>{if(t){const n=e.map(s=>({entityId:s.targetId,versionNumber:s.targetVersionNumber})),{unchangedItems:i,updatedItems:f,newItems:C}=L(t.items,n),l=[...i,...f,...C];return{...t,items:l}}else return console.warn("Cannot add items to the Dataset because it is undefined. The Dataset may not have been fetched yet."),t}),k()}function X(){b(e=>({...e,items:e.items.filter(t=>!E.has(t.entityId))})),k()}function ee(e,t){b(n=>({...n,items:n.items.map(i=>i.entityId===e?{entityId:e,versionNumber:t}:i)}))}const M=[{key:"errorState",width:30,cellRenderer:se},{key:"isSelected",width:40,dataKey:"isSelected",headerRenderer:o?r(e=>{const{datasetToUpdate:t,clearSelectedIds:n,addSelectedId:i}=e,f=x;return t?r("div",{"data-testid":"Select All",style:{cursor:"pointer"},onClick:()=>{f?n():i(...t.items.map(C=>C.entityId))},children:r(be,{label:"",className:"SRC-pointer-events-none",checked:f,disabled:t.items.length===0,onChange:()=>{}})}):r(H,{})},{datasetToUpdate:o,selectedIds:E,clearSelectedIds:k,addSelectedId:O,allItemsAreSelected:x}):r(H,{}),cellRenderer:ae},{key:"name",width:350,dataKey:"entityId",title:"Name",resizable:!0,cellRenderer:de},{key:"status",width:80,dataKey:"entityId",resizable:!0,cellRenderer:le},{key:"id",width:140,title:"ID",dataKey:"entityId",resizable:!0},{key:"version",width:150,title:"Version",dataKey:"entityId",cellRenderer:e=>r(fe,{...e,toggleSelection:t=>{ee(t.entityId,t.versionNumber)}})},{key:"createdOn",width:200,title:"Created On",dataKey:"entityId",resizable:!0,cellRenderer:me},{key:"modifiedOn",width:200,title:"Modified On",dataKey:"entityId",resizable:!0,cellRenderer:ce},{key:"modifiedBy",width:250,title:"Modified By",dataKey:"entityId",resizable:!0,cellRenderer:pe},{key:"projectId",width:300,title:"Project",dataKey:"entityId",resizable:!0,cellRenderer:ue}],P=M.reduce((e,t)=>e+t.width,0);function te(){return h("div",{className:"NoItemsPlaceholder",children:[r(K,{variant:"headline3",children:Ae}),h(g,{className:"AddItemsButton",variant:"sds-primary",onClick:()=>d(!0),children:[r(ge,{options:{icon:"addCircleTwoTone"}}),r("span",{children:R})]})]})}return h("div",{className:"DatasetEditor bootstrap-4-backport",children:[r(Ce,{configuration:{projectId:Y,selectMultiple:!0,initialScope:re.ALL_PROJECTS,initialContainer:null,selectableTypes:[Ee.FILE],mustSelectVersionNumber:!0},titlePopoverProps:{markdownText:"Use the left pane to browse Projects and Folders to find Files to add to this Dataset. Files in a Dataset can be added from multiple folders. You can also use Search to find and select Files.",helpUrl:"https://help.synapse.org/docs/Datasets.2611281979.html"},promptCopy:"Find Files located across one or more Folders to add to the Dataset.",show:T,onClose:()=>{d(!1)},title:R+" to Dataset",confirmButtonCopy:R,onConfirm:e=>{Q(e),d(!1)},onCancel:()=>d(!1)}),r(we,{title:"Unsaved Changes",modalBody:"Any unsaved changes will be lost. Are you sure you want to close the editor?",confirmButtonText:"Close Editor",onConfirm:()=>{u&&(a(!1),u())},show:I,onConfirmCallbackArgs:[],onCancel:()=>a(!1)}),h("div",{className:"DatasetEditorTopBottomPanel",children:[r(De,{show:N.isLoading}),r("div",{className:"ItemCount",children:o?h(K,{variant:"headline3",children:[o.items.length===0?"No":o.items.length.toLocaleString()," ","File",o.items.length!==1&&"s"]}):r(Re,{variant:"rect",width:200})}),r(g,{variant:"sds-primary",disabled:o==null,onClick:()=>d(!0),children:R}),r(g,{disabled:E.size===0,variant:"outline",onClick:X,children:ke})]}),r("div",{className:"DatasetEditorTableContainer",children:o?o.items.length===0?r(te,{}):r(ne,{height:Oe,onResize:F,children:({height:e,width:t})=>r(ie,{classPrefix:"DatasetEditorTable",data:J,height:e,width:t>P?t:P,rowHeight:$,overscanRowCount:5,columns:M,rowClassName:"DatasetEditorRow",rowProps:({rowData:n})=>({"aria-selected":n.isSelected}),headerCellProps:{role:"columnheader"},onRowsRendered:F,onScroll:F})}):r(he,{className:"DatasetItemsEditorSkeleton",numRows:8,numCols:6,rowHeight:`${$}px`})}),h("div",{className:"DatasetEditorTopBottomPanel",children:[r(g,{variant:"outline",onClick:()=>{_?a(!0):u&&u()},children:"Cancel"}),r(g,{disabled:!o,variant:"sds-primary",onClick:()=>N.mutate(o),children:"Save"})]})]})}try{w.displayName="DatasetItemsEditor",w.__docgenInfo={description:"",displayName:"DatasetItemsEditor",props:{entityId:{defaultValue:null,description:"",name:"entityId",required:!0,type:{name:"string"}},onSave:{defaultValue:null,description:"",name:"onSave",required:!1,type:{name:"(() => void)"}},onClose:{defaultValue:null,description:"",name:"onClose",required:!1,type:{name:"(() => void)"}}}},typeof STORYBOOK_REACT_CLASSES!="undefined"&&(STORYBOOK_REACT_CLASSES["src/lib/containers/table/datasets/DatasetItemsEditor.tsx#DatasetItemsEditor"]={docgenInfo:w.__docgenInfo,name:"DatasetItemsEditor",path:"src/lib/containers/table/datasets/DatasetItemsEditor.tsx#DatasetItemsEditor"})}catch{}var Do={parameters:{storySource:{source:`import React from 'react'
import { ComponentStory, ComponentMeta } from '@storybook/react'
import { DatasetItemsEditor } from './DatasetItemsEditor'

export default {
  title: 'Synapse/DatasetItemsEditor',
  component: DatasetItemsEditor,
} as ComponentMeta<typeof DatasetItemsEditor>

const Template: ComponentStory<typeof DatasetItemsEditor> = args => (
  <DatasetItemsEditor {...args} />
)

export const Demo = Template.bind({})
Demo.args = {
  entityId: 'syn26302617',
}
`,locationsMap:{demo:{startLoc:{col:60,line:10},endLoc:{col:1,line:12},startBody:{col:60,line:10},endBody:{col:1,line:12}}}}},title:"Synapse/DatasetItemsEditor",component:w};const xe=m=>r(w,{...m}),Le=xe.bind({});Le.args={entityId:"syn26302617"};const wo=["Demo"];export{Le as Demo,wo as __namedExportsOrder,Do as default};
//# sourceMappingURL=DatasetItemsEditor.stories.003cdc39.js.map
