{"version":3,"file":"StyleGuidistComponentWrapper.58e81272.js","sources":["../../node_modules/react-query/devtools/index.js","../../src/lib/containers/StyleGuidistComponentWrapper.tsx"],"sourcesContent":["if (process.env.NODE_ENV !== 'development') {\n  module.exports = {\n    ReactQueryDevtools: function () {\n      return null\n    },\n    ReactQueryDevtoolsPanel: function () {\n      return null\n    },\n  }\n} else {\n  module.exports = require('./development')\n}\n","import React, { useEffect } from 'react'\nimport { MemoryRouter } from 'react-router-dom'\nimport { SynapseContextProvider } from '../utils/SynapseContext'\nimport { SynapseClient } from '../utils'\nimport { SynapseToastContainer } from './ToastMessage'\nimport { ReactQueryDevtools } from 'react-query/devtools'\nimport moment from 'moment'\nimport {\n  detectSSOCode,\n  getAccessTokenFromCookie,\n  getUserProfile,\n  getAuthenticatedOn,\n} from '../utils/SynapseClient'\n\nexport async function sessionChangeHandler() {\n  detectSSOCode()\n  const accessToken = await getAccessTokenFromCookie()\n  global.accessToken = accessToken\n  const profile = await getUserProfile(accessToken)\n  global.currentUserProfile = profile\n  if (accessToken) {\n    getAuthenticatedOn(accessToken).then(authenticatedOn => {\n      const date = moment(authenticatedOn.authenticatedOn).format('L LT')\n    })\n  }\n  return profile\n}\n\nexport const StyleGuidistComponentWrapper: React.FC = props => {\n  useEffect(() => {\n    sessionChangeHandler()\n  }, [])\n  return (\n    <SynapseContextProvider\n      synapseContext={{\n        accessToken: (global as any).accessToken,\n        isInExperimentalMode: SynapseClient.isInSynapseExperimentalMode(),\n        utcTime: SynapseClient.getUseUtcTimeFromCookie(),\n        withErrorBoundary: true,\n      }}\n    >\n      <MemoryRouter>\n        <ReactQueryDevtools />\n        <SynapseToastContainer />\n        <main>{props.children}</main>\n      </MemoryRouter>\n    </SynapseContextProvider>\n  )\n}\n\nexport default StyleGuidistComponentWrapper\n"],"names":["devtoolsModule","detectSSOCode","global","getAuthenticatedOn","moment","useEffect","sessionChangeHandler","_jsx","accessToken","SynapseClient.getUseUtcTimeFromCookie","_jsxs","ReactQueryDevtools","children"],"mappings":"4RACEA,UAAiB,CACf,mBAAoB,UAAY,CAC9B,MAAO,KACR,EACD,wBAAyB,UAAY,CACnC,MAAO,KACR,CACF,ECRH,KAAA,GAAA,OAAA,MAAA,UAcA,kBAAA,CACEC,IACA,KAAA,GAAA,KAAA,KACAC,OAAAA,YAAAA,EACA,KAAA,GAAA,KAAA,GAAA,CAAA,EACAA,cAAAA,mBAAAA,EACA,GACEC,EAAAA,CAAAA,EAAAA,KAAAA,AAAAA,GAAAA,CACEC,EAAA,EAAA,eAAA,EAAA,OAAA,MAAA,CAAa,CAAA,EAGjB,CACD,CAEM,KAAA,GAAA,AAAA,GACLC,GAAAA,IAAAA,CACEC,GAAoB,EAAA,CAAA,CAAA,EAEtBC,EAAA,EAAA,CACE,eAAA,CACkB,YAAA,OAAA,YACeC,qBAAAA,EAAAA,EADf,QAAAC,EAAA,EAAA,kBAAA,EAIK,EAJL,SAAAC,EAAA,EAAA,CAOhB,SAAA,CAAAH,EAAAI,EAAA,QAAA,mBAAA,EAAA,EAAAJ,EAAA,EAAA,CAAA,CAAA,EAAAA,EAAA,OAAA,CAGE,SAAA,EAAA,QAAaK,CAAAA,CAAAA,CAHf,CAAA,CAAA,CAAA"}