import{i as Q,p as c}from"./sqlFunctions.b49ac766.js";import{T as _,F as W,a as V,b as R,S as v,L as x}from"./LastUpdatedOn.df9436d0.js";import{w as D,p as O,l as I,f as U,h as A,k as M,B as F,n as N}from"./index.83cd4268.js";import{f as B,Q as k,a as P,l as K,T as Y}from"./TotalQueryResults.ad232ebe.js";import{k as z}from"./EntityTypeUtils.adab6f33.js";import{j as e,a as j,F as H}from"./jsx-runtime.00d70968.js";import{c as $}from"./cloneDeep.0741a428.js";import"./HelpPopover.41851349.js";import"./MarkdownPopover.efbe32fc.js";import"./usePopperMarginModifiers.1c4b2def.js";import"./withStyles.d6b2de44.js";import"./objectWithoutProperties.a0dea5ce.js";import"./objectWithoutPropertiesLoose.5e7699d1.js";import"./toConsumableArray.8f496188.js";import"./createClass.67a84016.js";import"./useWaitForDOMRef.d07b3a07.js";import"./FullWidthAlert.a73af62a.js";import"./Typography.9748340b.js";import"./index.57d09176.js";import"./makeStyles.2422b359.js";import"./Tooltip.02f85a09.js";import"./SvgIcon.5d5878ed.js";import"./slicedToArray.e9a7fa03.js";import"./Button.fda23eee.js";import"./index.35ce73ec.js";import"./ToastMessage.0ffd35ff.js";import"./MarkdownSynapse.11143e6e.js";import"./UserCard.c7556a91.js";import"./getEndpoint.bb7ded34.js";import"./IconCopy.095bf867.js";import"./SkeletonTable.a5be41ff.js";import"./times.49810acf.js";import"./toInteger.0eadce58.js";import"./Skeleton.88496afb.js";import"./IconSvg.45071707.js";import"./InfoOutlined.303a7ed9.js";import"./Overlay.3297046e.js";import"./assert.fe14baa7.js";import"./iframe.809c86e7.js";import"./factory.d6a1d2a5.js";import"./SynapseVideo.f2101abf.js";import"./react-intersection-observer.esm.e445ee86.js";import"./DateFormatter.a1d6819d.js";import"./moment.a565bb48.js";import"./Collapse.c0581257.js";import"./unCamelCase.d070537b.js";import"./ColumnType.744125d2.js";import"./ElementWithTooltip.a6bc1f8d.js";import"./SynapseTableConstants.07ecdebd.js";import"./index.e0bb55d6.js";import"./index.8ed07549.js";import"./Dropdown.2144a55d.js";import"./Modal.8f4b0da5.js";import"./useWillUnmount.4a16e5cd.js";import"./isRequiredForA11y.20ed4857.js";import"./use-deep-compare-effect.esm.76673280.js";import"./ProgrammaticInstructionsModal.60ef4738.js";import"./QueryCount.78a10697.js";import"./NoData.22383cce.js";import"./InteractiveCopyIdsIcon.02cb1826.js";import"./ExternalFileHandleInterface.c113fa19.js";import"./HasAccessV2.adada2ef.js";import"./useGetAccessRequirement.f1fbfd9f.js";import"./useEntityBundle.24138ca1.js";import"./FileEntity.69b7bd86.js";import"./TypeUtils.a2c41307.js";import"./AccessRequirementList.37914e85.js";import"./useGetInfoFromIds.e6244fed.js";import"./uniq.2ae8f67a.js";import"./_cacheHas.218a5665.js";import"./_baseDifference.7997c27f.js";import"./_setToArray.a82100c8.js";import"./without.915a74e2.js";import"./LockTwoTone.24dc8c80.js";import"./AccessApproval.493867d3.js";import"./ManagedACTAccessRequirementStatus.be369a71.js";import"./FileUpload.aeb6876c.js";import"./UserSearchBox.87a94ba5.js";import"./index.582f6d03.js";import"./UserOrTeamBadge.a5ce626c.js";import"./RadioGroup.d48d0161.js";import"./sortBy.1797a760.js";import"./_baseMap.96c3880f.js";import"./_baseIsEqual.90988753.js";import"./LoadingScreen.dc53f4e3.js";import"./core.esm.225355ea.js";import"./isEmpty.868ebd54.js";import"./ajv.75556aee.js";import"./sortBy.d7eaeca6.js";import"./_copyArray.29c4db1e.js";import"./union.1334329b.js";import"./EntityLink.b7e25a2f.js";import"./EntityIcon.f4f9349c.js";import"./GenericCard.b0e2c18e.js";import"./IconList.cd761fab.js";import"./FileHandleLink.cd444545.js";import"./Checkbox.3346a87d.js";import"./SearchResultsNotFound.e35d4db9.js";import"./NoSearchResults.a01d676d.js";import"./ButtonBase.74c0f661.js";import"./queryUtils.a4c83f1e.js";import"./IconMinus.3805e4f5.js";import"./RangeSlider.6285b13c.js";import"./classCallCheck.8304ed06.js";import"./inherits.0fdbf119.js";const G=t=>$({partMask:I|U|A|M|F|N,entityId:c(t),concreteType:"org.sagebionetworks.repo.model.table.QueryBundleRequest",query:{sql:t,limit:25,offset:0}}),r=t=>{const{title:h,searchParams:m,sqlOperator:f,showAccessColumn:C,sql:u,hideDownload:S,hideQueryCount:T,name:L,showTopLevelControls:d=!1,searchConfiguration:o,unitDescription:E="Results",rgbIndex:w,showLastUpdatedOn:q,...n}=t,a=G(u);m&&(a.query.sql=Q(a.query.sql,m,f));const b=D(),g=c(u),{data:l}=O(g);return e(B,{...n,initQueryRequest:a,children:e(k,{rgbIndex:w,unitDescription:E,showLastUpdatedOn:q,...n,children:e(P,{children:i=>{if(i===void 0)throw new Error("No queryContext found when calling QueryContextConsumer");return e(K,{children:s=>{if(s===void 0)throw new Error("No queryVisualizationContext found when calling QueryVisualizationContextConsumer");return j(H,{children:[d&&e(_,{showColumnSelection:!0,name:L,hideDownload:S,hideQueryCount:T,hideFacetFilterControl:!0,hideVisualizationsControl:!0}),l&&z(l)&&l.isSearchEnabled?e(W,{helpUrl:o==null?void 0:o.fullTextSearchHelpURL}):e(V,{...o,queryContext:i,queryVisualizationContext:s}),e(R,{}),d&&e(Y,{frontText:""}),e(v,{synapseContext:b,queryContext:i,queryVisualizationContext:s,showAccessColumn:C,title:h,"data-testid":"SynapseTable",...n}),e(x,{})]})}})}})})})},y=r;try{r.displayName="StandaloneQueryWrapper",r.__docgenInfo={description:`This component was initially implemented on the portal side. It renders a SynapseTable if a title is provided.
If showTopLevelControls is set to true, then the SynapseTable will also include the TopLevelControls (search, export table, column selection).`,displayName:"StandaloneQueryWrapper",props:{title:{defaultValue:null,description:"",name:"title",required:!1,type:{name:"string"}},hideDownload:{defaultValue:null,description:"",name:"hideDownload",required:!1,type:{name:"boolean"}},showAccessColumn:{defaultValue:null,description:"",name:"showAccessColumn",required:!1,type:{name:"boolean"}},showDownloadColumn:{defaultValue:null,description:"",name:"showDownloadColumn",required:!1,type:{name:"boolean"}},columnLinks:{defaultValue:null,description:"",name:"columnLinks",required:!1,type:{name:"LabelLinkConfig"}},isRowSelectionVisible:{defaultValue:null,description:"",name:"isRowSelectionVisible",required:!1,type:{name:"boolean"}},linkCountToDisaggregatedQuery:{defaultValue:null,description:`If true, columns created by the COUNT function will render with a link to Synapse that opens the disaggregated query results filtered by the conditions of that row.
Note that this is very brittle and only supports one column at a time. See SWC-6075 for more information. Default false.`,name:"linkCountToDisaggregatedQuery",required:!1,type:{name:"boolean"}},showNoContentAvailableWhenEmpty:{defaultValue:null,description:"",name:"showNoContentAvailableWhenEmpty",required:!1,type:{name:"boolean"}},searchParams:{defaultValue:null,description:"",name:"searchParams",required:!1,type:{name:"{ facetValue: string; }"}},sqlOperator:{defaultValue:null,description:"",name:"sqlOperator",required:!1,type:{name:"enum",value:[{value:'"LIKE"'},{value:'"="'},{value:'"HAS"'}]}},sql:{defaultValue:null,description:"",name:"sql",required:!0,type:{name:"string"}},rgbIndex:{defaultValue:null,description:"",name:"rgbIndex",required:!1,type:{name:"number"}},unitDescription:{defaultValue:null,description:"",name:"unitDescription",required:!1,type:{name:"string"}},facetAliases:{defaultValue:null,description:"",name:"facetAliases",required:!1,type:{name:"Record<string, string>"}},showTopLevelControls:{defaultValue:null,description:"",name:"showTopLevelControls",required:!1,type:{name:"boolean"}},searchConfiguration:{defaultValue:null,description:"",name:"searchConfiguration",required:!1,type:{name:'Omit<SearchV2Props, "queryContext" | "queryVisualizationContext">'}},showLastUpdatedOn:{defaultValue:null,description:"",name:"showLastUpdatedOn",required:!1,type:{name:"boolean"}},name:{defaultValue:null,description:"",name:"name",required:!1,type:{name:"string"}},hideVisualizationsControl:{defaultValue:null,description:"",name:"hideVisualizationsControl",required:!1,type:{name:"boolean"}},hideFacetFilterControl:{defaultValue:null,description:"",name:"hideFacetFilterControl",required:!1,type:{name:"boolean"}},hideQueryCount:{defaultValue:null,description:"",name:"hideQueryCount",required:!1,type:{name:"boolean"}},hideSqlEditorControl:{defaultValue:null,description:"",name:"hideSqlEditorControl",required:!1,type:{name:"boolean"}},showColumnSelection:{defaultValue:null,description:"",name:"showColumnSelection",required:!1,type:{name:"boolean"}},customControls:{defaultValue:null,description:"",name:"customControls",required:!1,type:{name:"CustomControl[]"}}}},typeof STORYBOOK_REACT_CLASSES<"u"&&(STORYBOOK_REACT_CLASSES["src/lib/containers/table/StandaloneQueryWrapper.tsx#StandaloneQueryWrapper"]={docgenInfo:r.__docgenInfo,name:"StandaloneQueryWrapper",path:"src/lib/containers/table/StandaloneQueryWrapper.tsx#StandaloneQueryWrapper"})}catch{}const Jt={parameters:{storySource:{source:`import React from 'react'
import { ComponentStory, ComponentMeta } from '@storybook/react'
import StandaloneQueryWrapper from './StandaloneQueryWrapper'

export default {
  title: 'Explore/StandaloneQueryWrapper',
  component: StandaloneQueryWrapper,
} as ComponentMeta<typeof StandaloneQueryWrapper>

const Template: ComponentStory<typeof StandaloneQueryWrapper> = args => (
  <StandaloneQueryWrapper {...args} />
)

export const WithoutTopLevelControls = Template.bind({})
WithoutTopLevelControls.args = {
  title: 'Data Files',
  sql: \`SELECT * FROM syn21994970.5 where dhPortalIndex = 'TRUE' LIMIT 10\`,
  columnLinks: [
    {
      matchColumnName: 'studyOrProject',
      isMarkdown: true,
    },
  ],
}

export const WithColumnAlias = Template.bind({})
WithColumnAlias.args = {
  title: 'With column alias',
  sql: \`SELECT count(ownerID) as Sagers FROM syn23564971 WHERE institution has ('Sage Bionetworks')\`,
}

export const TopLevelControls = Template.bind({})
TopLevelControls.args = {
  title: 'Data Files',
  name: 'Top Level Controls demo',
  hideDownload: false,
  sql: \`SELECT * FROM syn21994970.5 where dhPortalIndex = 'TRUE' LIMIT 10\`,
  showTopLevelControls: true,
}
`,locationsMap:{"without-top-level-controls":{startLoc:{col:64,line:10},endLoc:{col:1,line:12},startBody:{col:64,line:10},endBody:{col:1,line:12}},"with-column-alias":{startLoc:{col:64,line:10},endLoc:{col:1,line:12},startBody:{col:64,line:10},endBody:{col:1,line:12}},"top-level-controls":{startLoc:{col:64,line:10},endLoc:{col:1,line:12},startBody:{col:64,line:10},endBody:{col:1,line:12}}}}},title:"Explore/StandaloneQueryWrapper",component:y},p=t=>e(y,{...t}),J=p.bind({});J.args={title:"Data Files",sql:"SELECT * FROM syn21994970.5 where dhPortalIndex = 'TRUE' LIMIT 10",columnLinks:[{matchColumnName:"studyOrProject",isMarkdown:!0}]};const X=p.bind({});X.args={title:"With column alias",sql:"SELECT count(ownerID) as Sagers FROM syn23564971 WHERE institution has ('Sage Bionetworks')"};const Z=p.bind({});Z.args={title:"Data Files",name:"Top Level Controls demo",hideDownload:!1,sql:"SELECT * FROM syn21994970.5 where dhPortalIndex = 'TRUE' LIMIT 10",showTopLevelControls:!0};const Xt=["WithoutTopLevelControls","WithColumnAlias","TopLevelControls"];export{Z as TopLevelControls,X as WithColumnAlias,J as WithoutTopLevelControls,Xt as __namedExportsOrder,Jt as default};
