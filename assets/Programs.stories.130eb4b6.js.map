{"version":3,"file":"Programs.stories.130eb4b6.js","sources":["../../src/lib/containers/home_page/programs/Programs.Mobile.tsx","../../src/lib/containers/home_page/programs/Programs.Desktop.tsx","../../src/lib/containers/home_page/programs/Programs.tsx"],"sourcesContent":["import React from 'react'\nimport { ProgramsDataProps } from './Programs'\nimport ExpandableContent from '../ExpandableContent'\nimport { Button } from 'react-bootstrap'\nimport { ImageFileHandle } from '../../widgets/ImageFileHandle'\n\nexport default function ProgramsMobile({\n  link,\n  summary,\n  title,\n  color,\n  fileHandleAssociation,\n  exploreLink,\n}: ProgramsDataProps) {\n  const titleElement = (\n    <div className=\"Programs__Mobile__Header\">\n      <span className=\"Programs__Card__header__icon\">\n        {fileHandleAssociation && (\n          <ImageFileHandle fileHandleAssociation={fileHandleAssociation} />\n        )}\n      </span>\n      <span className=\"Programs__Mobile__Header__Title\"> {title} </span>\n    </div>\n  )\n  const content = (\n    <div className=\"Programs__Mobile__Content\">\n      {link && (\n        <p className=\"Programs__Card__header__info__link\">\n          <a\n            className=\"highlight-link\"\n            href={link}\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            Visit website\n          </a>\n        </p>\n      )}\n      <p>{summary}</p>\n      <Button variant=\"secondary\" size=\"lg\" href={exploreLink} className=\"pill\">\n        EXPLORE\n      </Button>\n    </div>\n  )\n  return <ExpandableContent title={titleElement} content={content} />\n}\n","import React from 'react'\nimport { ProgramsDataProps } from './Programs'\nimport { Button } from 'react-bootstrap'\nimport { ImageFileHandle } from '../../widgets/ImageFileHandle'\n\nexport default function ProgramsDesktop({\n  link,\n  summary,\n  title,\n  color,\n  fileHandleAssociation,\n  exploreLink,\n}: ProgramsDataProps) {\n  return (\n    <div className=\"Programs__Card\">\n      <div\n        className=\"Programs__Card__header\"\n        style={{ backgroundColor: color.replace(')', ',.05)') }}\n      >\n        <div className=\"Programs__Card__header__icon\">\n          {fileHandleAssociation && (\n            <ImageFileHandle fileHandleAssociation={fileHandleAssociation} />\n          )}\n        </div>\n        <div className=\"Programs__Card__header__info\">\n          <span className=\"Programs__Card__header__info__title\"> {title} </span>\n          {link && (\n            <p className=\"Programs__Card__header__info__link\">\n              <a\n                className=\"highlight-link\"\n                href={link}\n                target=\"_blank\"\n                rel=\"noreferrer\"\n              >\n                Visit website\n              </a>\n            </p>\n          )}\n        </div>\n      </div>\n      <div className=\"Programs__Card__summary\">\n        <p> {summary} </p>\n        <Button\n          variant=\"secondary\"\n          size=\"lg\"\n          href={exploreLink}\n          className=\"pill\"\n        >\n          EXPLORE\n        </Button>\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport {\n  FileHandleAssociation,\n  QueryBundleRequest,\n} from '../../../utils/synapseTypes'\nimport { SynapseConstants } from '../../../utils'\n\nimport useGetQueryResultBundle from '../../../utils/hooks/SynapseAPI/entity/useGetQueryResultBundle'\nimport useShowDesktop from '../../../utils/hooks/useShowDesktop'\nimport ProgramsMobile from './Programs.Mobile'\nimport ProgramsDesktop from './Programs.Desktop'\nimport { getColorPalette } from '../../../containers/ColorGradient'\nimport { CardLink } from '../../../containers/CardContainerLogic'\nimport { getFieldIndex } from '../../../utils/functions/queryUtils'\nimport { useGetEntity } from '../../../utils/hooks/SynapseAPI/entity/useEntity'\nimport { getFileHandleAssociation } from '../../GenericCard'\n\nexport type ProgramsProps = {\n  entityId: string\n  rgbIndex: number\n  titleColumnName: string\n  linkColumnName: string\n  summaryColumnName: string\n  imageFileHandleColumnName: string\n  linkConfig: CardLink\n}\n\nexport type ProgramsDataProps = {\n  title: string\n  summary: string\n  link: string\n  exploreLink: string\n  color: string\n  fileHandleAssociation?: FileHandleAssociation\n}\n\nexport const Programs: React.FC<ProgramsProps> = (props: ProgramsProps) => {\n  const {\n    entityId,\n    titleColumnName,\n    linkColumnName,\n    summaryColumnName,\n    imageFileHandleColumnName,\n    linkConfig,\n    rgbIndex,\n  } = props\n  const showDesktop = useShowDesktop()\n  const entity = useGetEntity(entityId)\n  const color: string = getColorPalette(rgbIndex ?? 0, 2).colorPalette[0]\n  const queryBundleRequest: QueryBundleRequest = {\n    concreteType: 'org.sagebionetworks.repo.model.table.QueryBundleRequest',\n    entityId,\n    partMask:\n      SynapseConstants.BUNDLE_MASK_QUERY_SELECT_COLUMNS |\n      SynapseConstants.BUNDLE_MASK_QUERY_RESULTS,\n    query: {\n      sql: `select * from ${entityId}`,\n    },\n  }\n  const { data: queryResultBundle } =\n    useGetQueryResultBundle(queryBundleRequest)\n\n  const titleColumnIndex = getFieldIndex(titleColumnName, queryResultBundle)\n  const summaryColumnIndex = getFieldIndex(summaryColumnName, queryResultBundle)\n  const linkColumnIndex = getFieldIndex(linkColumnName, queryResultBundle)\n  const iconColumnIndex = getFieldIndex(\n    imageFileHandleColumnName,\n    queryResultBundle,\n  )\n  const matchColIndex = getFieldIndex(\n    linkConfig.matchColumnName,\n    queryResultBundle,\n  )\n  const baseExploreUrl = `/${linkConfig.baseURL}?${linkConfig.URLColumnName}=`\n  return (\n    <div\n      className={`bootstrap-4-backport Programs${\n        showDesktop ? '__Desktop' : ''\n      }`}\n    >\n      {queryResultBundle?.queryResult!.queryResults.rows.map((el, index) => {\n        const values = el.values\n        const title = values[titleColumnIndex]\n        const summary = values[summaryColumnIndex]\n        const link = values[linkColumnIndex]\n        const iconFileHandleIdValue = values[iconColumnIndex]\n        const matchValue = values[matchColIndex]\n\n        const fileHandleAssociation = getFileHandleAssociation(\n          entity.data,\n          iconFileHandleIdValue,\n          `syn${el.rowId}`,\n        )\n        const ProgramsDataProps: ProgramsDataProps = {\n          title,\n          summary,\n          link,\n          color,\n          exploreLink: `${baseExploreUrl}${matchValue}`,\n          fileHandleAssociation,\n        }\n        return showDesktop ? (\n          <ProgramsDesktop {...ProgramsDataProps} />\n        ) : (\n          <ProgramsMobile {...ProgramsDataProps} />\n        )\n      })}\n    </div>\n  )\n}\n\nexport default Programs\n"],"names":["link","summary","title","color","fileHandleAssociation","exploreLink","_jsx","_jsxs","titleElement","entityId","titleColumnName","linkColumnName","summaryColumnName","imageFileHandleColumnName","linkConfig","rgbIndex","BUNDLE_MASK_QUERY_RESULTS","queryResultBundle","matchValue","ProgramsDataProps"],"mappings":"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"}