import{r as m,R as k,a as n,j as i,F as g}from"./jsx-runtime.076c7567.js";import{V as E,a9 as N,bP as O,bQ as B}from"./index.53b0413e.js";import{d}from"./ToastMessage.f480df01.js";import{M as L}from"./CardContainerLogic.80e28a7a.js";import{T as u}from"./Typography.18dd9738.js";import{L as M}from"./Link.fd8fbf97.js";import{B as x}from"./Button.855954d3.js";import{H as Q}from"./IconSvg.94aeb20a.js";import"./iframe.dc9e500a.js";import"./index.3dd8c113.js";import"./SynapseConstants.290eab74.js";import"./Button.a0002af7.js";import"./styled.65df53fb.js";import"./Tooltip.b4ed2e26.js";import"./TransitionGroupContext.9598a495.js";import"./useTheme.6d85215f.js";import"./Alert.052d6dda.js";import"./hook.fb6ae99a.js";import"./createWithBsPrefix.125a71ed.js";import"./divWithClassName.d855987b.js";import"./index.35ce73ec.js";import"./Fade.476b0ff7.js";import"./isArray.b8ce881a.js";import"./getEndpoint.bb7ded34.js";import"./IconButton.81618d29.js";import"./ButtonBase.49fff140.js";import"./emotion-react.browser.esm.74b64aae.js";import"./FullWidthAlert.c3c066c4.js";import"./removeClass.27874bcb.js";import"./hasClass.56fd144a.js";import"./uniqueId.0acb56b3.js";import"./isSymbol.353ed4c3.js";import"./sqlFunctions.6aa94ea0.js";import"./RegularExpressions.3cd69849.js";import"./QueryFilter.391fb5d9.js";import"./useGetInfoFromIds.1688b736.js";import"./use-deep-compare-effect.esm.2f8a811e.js";import"./uniq.5f9327c6.js";import"./_baseSlice.50189bc5.js";import"./toInteger.92753527.js";import"./_cacheHas.59262266.js";import"./without.87978f51.js";import"./_Set.650372d5.js";import"./_setToArray.a82100c8.js";import"./ColumnType.744125d2.js";import"./FacetNav.40bc2638.js";import"./queryUtils.9c901ffd.js";import"./useInfiniteQuery.0a9647d8.js";import"./queryKeys.e0d3085f.js";import"./cloneDeep.dd48b18e.js";import"./_baseClone.81813b93.js";import"./_getTag.14e0b047.js";import"./NoSearchResults.aff925db.js";import"./NoData.b071b2e4.js";import"./unCamelCase.07e38083.js";import"./useEntity.06da6e35.js";import"./useMutation.7eb34ba2.js";import"./pick.e04e17ce.js";import"./isEqual.2f7c36d1.js";import"./ElementWithTooltip.d02c84fa.js";import"./SynapseTableConstants.07ecdebd.js";import"./Dropdown.909fc8e8.js";import"./usePrevious.7f44450b.js";import"./contains.3362c067.js";import"./usePopperMarginModifiers.a23c4ed0.js";import"./isRequiredForA11y.20ed4857.js";import"./Checkbox.0bdec9b4.js";import"./RadioGroup.ac30b43c.js";import"./dayjs.min.20a3de16.js";import"./RangeSlider.f1ddbf5e.js";import"./factory.d6f460bc.js";import"./react-sizeme.7456e7a4.js";import"./Skeleton.83217f13.js";import"./ColorGradient.16f0e0f2.js";import"./colorPalette.8145e2e2.js";import"./LoadingScreen.693ddaa7.js";import"./Modal.6a4db761.js";import"./inheritsLoose.9e861b2b.js";import"./useWaitForDOMRef.dbc78690.js";import"./SelectionCriteriaPill.81441fbe.js";import"./Close.9952fafd.js";import"./react-select.esm.e1b9a3ee.js";import"./Select-54ac8379.esm.96245f62.js";import"./CustomSelectWidget.466b5f45.js";import"./index.browser.19d490ee.js";import"./UserCard.51dc49e5.js";import"./IconCopy.1b045a7b.js";import"./SkeletonTable.3dd63b5b.js";import"./times.2784b383.js";import"./Overlay.07d52eac.js";import"./WarningModal.fe9b8157.js";import"./react-intersection-observer.esm.e649c397.js";import"./DateFormatter.1f96b822.js";import"./utc.b83b7030.js";import"./EntityIcon.f7bcc06a.js";import"./core.esm.2116ac3e.js";import"./isEmpty.cb1c6f75.js";import"./union.b6ea78a3.js";import"./isString.53dbadb5.js";import"./relativeTime.c2bdff91.js";import"./useGetDownloadListStatistics.e285079b.js";import"./QueryCount.ea9a5992.js";import"./useGetAccessRequirement.08a1ff59.js";import"./RestrictionInformation.edfbac5a.js";import"./ManagedACTAccessRequirementStatus.be369a71.js";import"./FileUpload.8127d6f3.js";import"./UserSearchBox.782f64fa.js";import"./UserOrTeamBadge.48c906a7.js";import"./EntityLink.5eeecbce.js";import"./SynapseVideo.a31f0d5c.js";import"./IconList.1dbbdfac.js";import"./UserCardList.305661b8.js";const H="org.sagebionetworks.repo.model.quiz.MultichoiceResponse",c=()=>{const{accessToken:a}=E(),z=N(),[o,T]=m.exports.useState(),[l,f]=m.exports.useState([]),[r,h]=m.exports.useState(),C=k.useRef(null),S="https://help.synapse.org/docs/Getting-Started.2055471150.html",y=async()=>{try{T(await O(a))}catch(t){z(t)}};m.exports.useEffect(()=>{y()},[a]);const w=(t,p)=>{const s=[...l.filter(e=>e.questionIndex!==t),{questionIndex:t,answerIndex:[p],concreteType:H}];f(s)},v=()=>{var t;(t=C.current)==null||t.reset(),f([]),h(void 0),y()},R=async()=>{try{if(o&&o.questions.length===l.length){const t={quizId:o.id,questionResponses:l},p=await B(a,t);h(p),window.scrollTo(0,0)}else d("Please answer all of the questions and try again.","warning")}catch(t){d(t.reason,"danger")}},b=t=>t?{content:i(g,{children:"More info"}),closePopoverOnClick:!0,onClick:()=>window.open(t,"_blank"),variant:"primary"}:void 0;return n("div",{className:"bootstrap-4-backport CertificationQuiz",children:[r&&i("div",{children:n(g,{children:[!r.passed&&i("div",{className:"failBanner",children:"Quiz Failed"}),n(u,{variant:"hintText",children:["Score: ",r.score," / ",o==null?void 0:o.questions.length]}),r.passed?d(`You passed the Synapse Certification Quiz on ${r.passedOn}`,"success"):n(u,{variant:"body1",children:["Please review the items shown in red below, and"," ",i(M,{href:"#",onClick:t=>{t.preventDefault(),v()},children:"try again"}),"."]})]})}),n("div",{className:"CertificationQuiz__container",children:[n(x,{onClick:()=>window.open(S,"_blank"),className:"help-button",color:"secondary",variant:"contained",children:[i(Q,{className:"HelpButton",style:{marginRight:"4px"}}),"Help"]}),o?i("div",{dangerouslySetInnerHTML:{__html:o.header}}):"",i("form",{ref:C,onSubmit:t=>t.preventDefault(),children:i("ol",{children:o==null?void 0:o.questions.map(t=>{var p,s;return n("li",{role:t.exclusive?"radiogroup":void 0,children:[i("div",{dangerouslySetInnerHTML:{__html:t.prompt},className:r&&((s=(p=r.corrections)==null?void 0:p.find(e=>e.question.questionIndex===t.questionIndex))!=null&&s.isCorrect?"":"incorrectQuestion")}),t.answers.map(e=>n("div",{children:[i("input",{id:`${t.questionIndex}-${e.answerIndex}`,name:`${t.questionIndex}`,type:t.exclusive?"radio":"checkbox",value:e.answerIndex,onClick:I=>w(t.questionIndex,Number(I.currentTarget.value)),disabled:!!r}),i("label",{style:{fontWeight:400},htmlFor:`${t.questionIndex}-${e.answerIndex}`,children:e.prompt})]},`${t.questionIndex}-${e.answerIndex}`)),i(L,{contentProps:{markdown:t.helpText},placement:"right",actionButton:b(t.docLink),showCloseButton:!0,children:n(u,{variant:"hintText",color:"primary",children:[i(Q,{className:"HelpButton",style:{marginRight:"4px"}}),"Need help answering this question?"]})})]},t.questionIndex)})})}),!r&&i(x,{className:"help-button",color:"primary",variant:"contained",size:"large",onClick:()=>R(),children:"Submit"})]})]})},_=c;try{c.displayName="CertificationQuiz",c.__docgenInfo={description:"",displayName:"CertificationQuiz",props:{}},typeof STORYBOOK_REACT_CLASSES<"u"&&(STORYBOOK_REACT_CLASSES["src/lib/containers/CertificationQuiz.tsx#CertificationQuiz"]={docgenInfo:c.__docgenInfo,name:"CertificationQuiz",path:"src/lib/containers/CertificationQuiz.tsx#CertificationQuiz"})}catch{}const Ui={parameters:{storySource:{source:`import React from 'react'
import { ComponentStory, ComponentMeta } from '@storybook/react'

import CertificationQuiz from './CertificationQuiz'

export default {
  title: 'Synapse/CertificationQuiz',
  component: CertificationQuiz,
  argTypes: {},
} as ComponentMeta<typeof CertificationQuiz>

const Template: ComponentStory<typeof CertificationQuiz> = args => (
  <CertificationQuiz {...args} />
)

export const CertificationQuizDemo = Template.bind({})
CertificationQuizDemo.args = {}
`,locationsMap:{"certification-quiz-demo":{startLoc:{col:59,line:12},endLoc:{col:1,line:14},startBody:{col:59,line:12},endBody:{col:1,line:14}}}}},title:"Synapse/CertificationQuiz",component:_,argTypes:{}},P=a=>i(_,{...a}),$=P.bind({});$.args={};const Yi=["CertificationQuizDemo"];export{$ as CertificationQuizDemo,Yi as __namedExportsOrder,Ui as default};
