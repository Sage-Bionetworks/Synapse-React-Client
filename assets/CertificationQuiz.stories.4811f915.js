import{r as m,R as k,a as n,j as i,F as g}from"./jsx-runtime.02a28547.js";import{j as E,B as N,bv as B,bw as O}from"./index.4fdef5f4.js";import{d}from"./ToastMessage.a8e621dc.js";import{M as L}from"./CardContainerLogic.97af0146.js";import{T as u}from"./Typography.67a640f4.js";import{L as M}from"./Link.4b81c1ee.js";import{B as x}from"./Button.1972b2d6.js";import{H as _}from"./IconSvg.19fd41bf.js";import"./iframe.0b294b31.js";import"./index.a309e2be.js";import"./SynapseConstants.b6aa8bf5.js";import"./Button.47e26dba.js";import"./styled.2f449268.js";import"./utils.34aadcdd.js";import"./TransitionGroupContext.70688128.js";import"./Alert.3df3eb36.js";import"./createWithBsPrefix.c66fa874.js";import"./index.35ce73ec.js";import"./isArray.46d1af5d.js";import"./getEndpoint.bb7ded34.js";import"./FullWidthAlert.4f5282fe.js";import"./Tooltip.edd9e9f0.js";import"./createSvgIcon.d569702c.js";import"./removeClass.27874bcb.js";import"./hasClass.56fd144a.js";import"./uniqueId.77032a6a.js";import"./isSymbol.f23d6818.js";import"./sqlFunctions.ead23534.js";import"./RegularExpressions.3cd69849.js";import"./QueryFilter.d8464a8f.js";import"./useGetInfoFromIds.258331ba.js";import"./use-deep-compare-effect.esm.7ded1864.js";import"./uniq.69f3520c.js";import"./_baseSlice.50189bc5.js";import"./toInteger.d773cbc0.js";import"./_cacheHas.2b87484d.js";import"./without.a4daf102.js";import"./_Set.323c8e8c.js";import"./_setToArray.a82100c8.js";import"./ColumnType.744125d2.js";import"./FacetNav.bff1bb1e.js";import"./queryUtils.7f349eb5.js";import"./useInfiniteQuery.47c688b2.js";import"./queryKeys.e0d3085f.js";import"./cloneDeep.ab339cb4.js";import"./_baseClone.be7945a8.js";import"./_getTag.eceaa81f.js";import"./NoSearchResults.3298bc25.js";import"./NoData.aba686a4.js";import"./unCamelCase.07e38083.js";import"./useEntity.518b6229.js";import"./useMutation.76b94172.js";import"./pick.ae4dc1a6.js";import"./isEqual.a8d1bf93.js";import"./ElementWithTooltip.a41fbda5.js";import"./SynapseTableConstants.07ecdebd.js";import"./Dropdown.c4adefef.js";import"./usePrevious.769406c5.js";import"./contains.81250605.js";import"./usePopperMarginModifiers.129c8d3b.js";import"./isRequiredForA11y.20ed4857.js";import"./Checkbox.cf382583.js";import"./RadioGroup.b47f6073.js";import"./moment.a565bb48.js";import"./RangeSlider.4e835942.js";import"./factory.6b033540.js";import"./react-sizeme.b9df939a.js";import"./Skeleton.441b86fc.js";import"./ButtonBase.9cc6b40c.js";import"./ColorGradient.16f0e0f2.js";import"./colorPalette.8145e2e2.js";import"./LoadingScreen.5743cf69.js";import"./Modal.a86dbf9d.js";import"./inheritsLoose.d59fe2ec.js";import"./useWaitForDOMRef.030a4d07.js";import"./InfoOutlined.88356fd8.js";import"./SelectionCriteriaPill.e9c5356b.js";import"./Close.18e94b90.js";import"./react-select.esm.79446879.js";import"./Select-54ac8379.esm.0973ae43.js";import"./CustomSelectWidget.d7e54740.js";import"./index.browser.f5189fc5.js";import"./UserCard.8e05b9f1.js";import"./IconCopy.4f34e504.js";import"./SkeletonTable.71120aff.js";import"./times.0912663f.js";import"./Overlay.f4a71f57.js";import"./WarningModal.e3204aa1.js";import"./react-intersection-observer.esm.15c9b8c9.js";import"./DateFormatter.aa2aa69b.js";import"./EntityIcon.2959aa7e.js";import"./core.esm.181bea6f.js";import"./isEmpty.796beee9.js";import"./union.b8f595c3.js";import"./isString.12e1a271.js";import"./useGetDownloadListStatistics.5a7566b6.js";import"./QueryCount.5c6cac7e.js";import"./useGetAccessRequirement.98d533d9.js";import"./ManagedACTAccessRequirementStatus.be369a71.js";import"./FileUpload.b1fb6521.js";import"./UserSearchBox.d6476648.js";import"./UserOrTeamBadge.dfa3bce5.js";import"./EntityLink.763851bf.js";import"./SynapseVideo.7ac2064d.js";import"./IconList.8e64c16b.js";import"./UserCardList.352af1af.js";const H="org.sagebionetworks.repo.model.quiz.MultichoiceResponse",c=()=>{const{accessToken:a}=E(),Q=N(),[o,T]=m.exports.useState(),[l,f]=m.exports.useState([]),[e,h]=m.exports.useState(),C=k.useRef(null),S="https://help.synapse.org/docs/Getting-Started.2055471150.html",y=async()=>{try{T(await B(a))}catch(t){Q(t)}};m.exports.useEffect(()=>{y()},[a]);const w=(t,p)=>{const s=[...l.filter(r=>r.questionIndex!==t),{questionIndex:t,answerIndex:[p],concreteType:H}];f(s)},v=()=>{var t;(t=C.current)==null||t.reset(),f([]),h(void 0),y()},R=async()=>{try{if(o&&o.questions.length===l.length){const t={quizId:o.id,questionResponses:l},p=await O(a,t);h(p),window.scrollTo(0,0)}else d("Please answer all of the questions and try again.","warning")}catch(t){d(t.reason,"danger")}},b=t=>t?{content:i(g,{children:"More info"}),closePopoverOnClick:!0,onClick:()=>window.open(t,"_blank"),variant:"primary"}:void 0;return n("div",{className:"bootstrap-4-backport CertificationQuiz",children:[e&&i("div",{children:n(g,{children:[!e.passed&&i("div",{className:"failBanner",children:"Quiz Failed"}),n(u,{variant:"hintText",children:["Score: ",e.score," / ",o==null?void 0:o.questions.length]}),e.passed?d(`You passed the Synapse Certification Quiz on ${e.passedOn}`,"success"):n(u,{variant:"body1",children:["Please review the items shown in red below, and"," ",i(M,{href:"#",onClick:t=>{t.preventDefault(),v()},children:"try again"}),"."]})]})}),n("div",{className:"CertificationQuiz__container",children:[n(x,{onClick:()=>window.open(S,"_blank"),className:"help-button",color:"secondary",variant:"contained",children:[i(_,{className:"HelpButton",style:{marginRight:"4px"}}),"Help"]}),o?i("div",{dangerouslySetInnerHTML:{__html:o.header}}):"",i("form",{ref:C,onSubmit:t=>t.preventDefault(),children:i("ol",{children:o==null?void 0:o.questions.map(t=>{var p,s;return n("li",{role:t.exclusive?"radiogroup":void 0,children:[i("div",{dangerouslySetInnerHTML:{__html:t.prompt},className:e&&((s=(p=e.corrections)==null?void 0:p.find(r=>r.question.questionIndex===t.questionIndex))!=null&&s.isCorrect?"":"incorrectQuestion")}),t.answers.map(r=>n("div",{children:[i("input",{id:`${t.questionIndex}-${r.answerIndex}`,name:`${t.questionIndex}`,type:t.exclusive?"radio":"checkbox",value:r.answerIndex,onClick:I=>w(t.questionIndex,Number(I.currentTarget.value)),disabled:!!e}),i("label",{style:{fontWeight:400},htmlFor:`${t.questionIndex}-${r.answerIndex}`,children:r.prompt})]},`${t.questionIndex}-${r.answerIndex}`)),i(L,{contentProps:{markdown:t.helpText},placement:"right",actionButton:b(t.docLink),showCloseButton:!0,children:n(u,{variant:"hintText",color:"primary",children:[i(_,{className:"HelpButton",style:{marginRight:"4px"}}),"Need help answering this question?"]})})]},t.questionIndex)})})}),!e&&i(x,{className:"help-button",color:"primary",variant:"contained",size:"large",onClick:()=>R(),children:"Submit"})]})]})},z=c;try{c.displayName="CertificationQuiz",c.__docgenInfo={description:"",displayName:"CertificationQuiz",props:{}},typeof STORYBOOK_REACT_CLASSES<"u"&&(STORYBOOK_REACT_CLASSES["src/lib/containers/CertificationQuiz.tsx#CertificationQuiz"]={docgenInfo:c.__docgenInfo,name:"CertificationQuiz",path:"src/lib/containers/CertificationQuiz.tsx#CertificationQuiz"})}catch{}const $i={parameters:{storySource:{source:`import React from 'react'
import { ComponentStory, ComponentMeta } from '@storybook/react'

import CertificationQuiz from './CertificationQuiz'

export default {
  title: 'Synapse/CertificationQuiz',
  component: CertificationQuiz,
  argTypes: {},
} as ComponentMeta<typeof CertificationQuiz>

const Template: ComponentStory<typeof CertificationQuiz> = args => (
  <CertificationQuiz {...args} />
)

export const CertificationQuizDemo = Template.bind({})
CertificationQuizDemo.args = {}
`,locationsMap:{"certification-quiz-demo":{startLoc:{col:59,line:12},endLoc:{col:1,line:14},startBody:{col:59,line:12},endBody:{col:1,line:14}}}}},title:"Synapse/CertificationQuiz",component:z,argTypes:{}},$=a=>i(z,{...a}),P=$.bind({});P.args={};const Pi=["CertificationQuizDemo"];export{P as CertificationQuizDemo,Pi as __namedExportsOrder,$i as default};
