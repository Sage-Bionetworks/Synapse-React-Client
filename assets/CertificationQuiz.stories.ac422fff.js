import{r as m,R as k,a as n,j as i,F as g}from"./jsx-runtime.41b63a18.js";import{h as E,A as N,bu as O,bv as B}from"./index.95357afa.js";import{d}from"./ToastMessage.3d8ba4da.js";import{M as L}from"./CardContainerLogic.4ac1f764.js";import{T as u}from"./Typography.dc699c3a.js";import{B as x}from"./Button.d66b1296.js";import{H as _}from"./IconSvg.83d367d8.js";import"./iframe.1b6f62a5.js";import"./index.fb0baffa.js";import"./SynapseConstants.b6aa8bf5.js";import"./withStyles.bf9f4c29.js";import"./utils.8566b4fb.js";import"./Alert.2d23c399.js";import"./index.57d09176.js";import"./createWithBsPrefix.4703bb5e.js";import"./index.35ce73ec.js";import"./isArray.9516ce6b.js";import"./getEndpoint.bb7ded34.js";import"./SvgIcon.d8df91d8.js";import"./FullWidthAlert.5cb2b687.js";import"./Tooltip.50b065de.js";import"./createSvgIcon.3e6e5789.js";import"./makeStyles.3de8ae0d.js";import"./removeClass.27874bcb.js";import"./hasClass.56fd144a.js";import"./uniqueId.7743d6ef.js";import"./isSymbol.fc7173a4.js";import"./sqlFunctions.be6fa141.js";import"./RegularExpressions.3cd69849.js";import"./QueryFilter.425a36f4.js";import"./useGetInfoFromIds.440675b0.js";import"./use-deep-compare-effect.esm.89e0b2bf.js";import"./uniq.d1401db4.js";import"./_baseSlice.50189bc5.js";import"./toInteger.d13e0983.js";import"./_cacheHas.fa44402d.js";import"./without.b74e3938.js";import"./_Set.cf46f4c7.js";import"./_setToArray.a82100c8.js";import"./ColumnType.744125d2.js";import"./FacetNav.93a63650.js";import"./queryUtils.d3ddbdc4.js";import"./useInfiniteQuery.afb80f09.js";import"./queryKeys.e0d3085f.js";import"./cloneDeep.972a710a.js";import"./_baseClone.80c04804.js";import"./_getTag.5b9f1be5.js";import"./NoSearchResults.f5a12ecf.js";import"./NoData.33ecea8a.js";import"./unCamelCase.07e38083.js";import"./useEntity.f187f17a.js";import"./useMutation.75197862.js";import"./pick.d71ecd11.js";import"./isEqual.c98a7e38.js";import"./ElementWithTooltip.a20fbba5.js";import"./SynapseTableConstants.07ecdebd.js";import"./Dropdown.1ea1e7ae.js";import"./usePrevious.b2a56b43.js";import"./contains.35f158bd.js";import"./usePopperMarginModifiers.3543b56f.js";import"./isRequiredForA11y.20ed4857.js";import"./Checkbox.f849d68d.js";import"./RadioGroup.42f82ea0.js";import"./moment.a565bb48.js";import"./RangeSlider.a2b8db98.js";import"./factory.4d558efc.js";import"./react-sizeme.6754aec4.js";import"./Skeleton.2b632001.js";import"./ColorGradient.16f0e0f2.js";import"./colorPalette.8145e2e2.js";import"./LoadingScreen.8b1b27b2.js";import"./Modal.493b8aac.js";import"./inheritsLoose.f9ee6081.js";import"./useWaitForDOMRef.054fdf82.js";import"./InfoOutlined.62b2381c.js";import"./SelectionCriteriaPill.5fe230c2.js";import"./Close.a124524c.js";import"./react-select.esm.d77ac0dd.js";import"./Select-54ac8379.esm.a8e92046.js";import"./CustomSelectWidget.95995941.js";import"./index.browser.d13d238d.js";import"./UserCard.7b85d80c.js";import"./IconCopy.6ff102ac.js";import"./SkeletonTable.5fcf404b.js";import"./times.d1737d14.js";import"./Overlay.b83155ef.js";import"./WarningModal.460ec494.js";import"./react-intersection-observer.esm.51a65a7f.js";import"./DateFormatter.ae20191a.js";import"./EntityIcon.d51583e3.js";import"./core.esm.4412e42d.js";import"./isEmpty.7f33a473.js";import"./union.b1c15149.js";import"./isString.eb351700.js";import"./useGetDownloadListStatistics.d1d39b56.js";import"./QueryCount.d74d4572.js";import"./useGetAccessRequirement.0e54bbee.js";import"./ManagedACTAccessRequirementStatus.e6c92b93.js";import"./FileUpload.e43615b9.js";import"./UserSearchBox.084d038d.js";import"./index.582f6d03.js";import"./UserOrTeamBadge.b8080351.js";import"./EntityLink.e671807d.js";import"./SynapseVideo.1efe460d.js";import"./IconList.f6f41d07.js";import"./UserCardList.43b2352c.js";const M="org.sagebionetworks.repo.model.quiz.MultichoiceResponse",c=()=>{const{accessToken:a}=E(),z=N(),[o,T]=m.exports.useState(),[l,f]=m.exports.useState([]),[e,h]=m.exports.useState(),C=k.useRef(null),S="https://help.synapse.org/docs/Getting-Started.2055471150.html",y=async()=>{try{T(await O(a))}catch(t){z(t)}};m.exports.useEffect(()=>{y()},[a]);const w=(t,p)=>{const s=[...l.filter(r=>r.questionIndex!==t),{questionIndex:t,answerIndex:[p],concreteType:M}];f(s)},v=()=>{var t;(t=C.current)==null||t.reset(),f([]),h(void 0),y()},R=async()=>{try{if(o&&o.questions.length===l.length){const t={quizId:o.id,questionResponses:l},p=await B(a,t);h(p),window.scrollTo(0,0)}else d("Please answer all of the questions and try again.","warning")}catch(t){d(t.reason,"danger")}},b=t=>t?{content:i(g,{children:"More info"}),closePopoverOnClick:!0,onClick:()=>window.open(t,"_blank"),variant:"primary"}:void 0;return n("div",{className:"bootstrap-4-backport CertificationQuiz",children:[e&&i("div",{children:n(g,{children:[!e.passed&&i("div",{className:"failBanner",children:"Quiz Failed"}),n(u,{variant:"hintText",children:["Score: ",e.score," / ",o==null?void 0:o.questions.length]}),e.passed?d(`You passed the Synapse Certification Quiz on ${e.passedOn}`,"success"):n(u,{variant:"body1",children:["Please review the items shown in red below, and"," ",i("a",{href:"#",onClick:t=>{t.preventDefault(),v()},children:"try again"}),"."]})]})}),n("div",{className:"CertificationQuiz__container",children:[n(x,{onClick:()=>window.open(S,"_blank"),className:"help-button",variant:"light-secondary",children:[i(_,{className:"HelpButton",style:{marginRight:"4px"}}),"Help"]}),o?i("div",{dangerouslySetInnerHTML:{__html:o.header}}):"",i("form",{ref:C,onSubmit:t=>t.preventDefault(),children:i("ol",{children:o==null?void 0:o.questions.map(t=>{var p,s;return n("li",{role:t.exclusive?"radiogroup":void 0,children:[i("div",{dangerouslySetInnerHTML:{__html:t.prompt},className:e&&((s=(p=e.corrections)==null?void 0:p.find(r=>r.question.questionIndex===t.questionIndex))!=null&&s.isCorrect?"":"incorrectQuestion")}),t.answers.map(r=>n("div",{children:[i("input",{id:`${t.questionIndex}-${r.answerIndex}`,name:`${t.questionIndex}`,type:t.exclusive?"radio":"checkbox",value:r.answerIndex,onClick:I=>w(t.questionIndex,Number(I.currentTarget.value)),disabled:!!e}),i("label",{style:{fontWeight:400},htmlFor:`${t.questionIndex}-${r.answerIndex}`,children:r.prompt})]},`${t.questionIndex}-${r.answerIndex}`)),i(L,{contentProps:{markdown:t.helpText},placement:"right",actionButton:b(t.docLink),showCloseButton:!0,children:n(u,{variant:"hintText",color:"primary",children:[i(_,{className:"HelpButton",style:{marginRight:"4px"}}),"Need help answering this question?"]})})]},t.questionIndex)})})}),!e&&i(x,{className:"help-button",variant:"primary",onClick:()=>R(),children:"Submit"})]})]})},Q=c;try{c.displayName="CertificationQuiz",c.__docgenInfo={description:"",displayName:"CertificationQuiz",props:{}},typeof STORYBOOK_REACT_CLASSES<"u"&&(STORYBOOK_REACT_CLASSES["src/lib/containers/CertificationQuiz.tsx#CertificationQuiz"]={docgenInfo:c.__docgenInfo,name:"CertificationQuiz",path:"src/lib/containers/CertificationQuiz.tsx#CertificationQuiz"})}catch{}const Hi={parameters:{storySource:{source:`import React from 'react'
import { ComponentStory, ComponentMeta } from '@storybook/react'

import CertificationQuiz from './CertificationQuiz'

export default {
  title: 'Synapse/CertificationQuiz',
  component: CertificationQuiz,
  argTypes: {},
} as ComponentMeta<typeof CertificationQuiz>

const Template: ComponentStory<typeof CertificationQuiz> = args => (
  <CertificationQuiz {...args} />
)

export const CertificationQuizDemo = Template.bind({})
CertificationQuizDemo.args = {}
`,locationsMap:{"certification-quiz-demo":{startLoc:{col:59,line:12},endLoc:{col:1,line:14},startBody:{col:59,line:12},endBody:{col:1,line:14}}}}},title:"Synapse/CertificationQuiz",component:Q,argTypes:{}},H=a=>i(Q,{...a}),$=H.bind({});$.args={};const $i=["CertificationQuizDemo"];export{$ as CertificationQuizDemo,$i as __namedExportsOrder,Hi as default};
