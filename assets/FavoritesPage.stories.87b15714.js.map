{"version":3,"file":"FavoritesPage.stories.87b15714.js","sources":["../../src/lib/containers/FavoritesPage.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport * as ReactBootstrap from 'react-bootstrap'\nimport { SynapseClient } from '../utils'\nimport SortIcon from '../assets/icons/Sort'\nimport { Direction, EntityHeader } from '../utils/synapseTypes'\nimport { useSynapseContext } from '../utils/SynapseContext'\nimport { SynapseSpinner } from './LoadingScreen'\nimport { useGetFavorites } from '../utils/hooks/SynapseAPI/useFavorites'\nimport IconSvg from './IconSvg'\nimport {\n  convertToEntityType,\n  entityTypeToFriendlyName,\n} from '../utils/functions/EntityTypeUtils'\nimport ReactTooltip from 'react-tooltip'\nimport { PRODUCTION_ENDPOINT_CONFIG } from '../utils/functions/getEndpoint'\nimport { EntityTypeIcon } from './EntityIcon'\nimport { Form } from 'react-bootstrap'\nimport { ErrorBanner } from './ErrorBanner'\n\n// Local types used for client-side sorting\nexport type SortField = 'name' | 'type'\nexport type SortDirection = 'ASC' | 'DESC'\nexport type Sort = {\n  field: SortField\n  direction: SortDirection\n}\n\nexport default function FavoritesPage() {\n  const { accessToken } = useSynapseContext()\n  const [sort, setSort] = useState<Sort | undefined>(undefined)\n  const [searchText, setSearchText] = useState<string>('')\n  const [sortedData, setSortedData] = useState<EntityHeader[] | undefined>(\n    undefined,\n  )\n  const [error, setError] = useState<Error>()\n  const {\n    data,\n    isFetching,\n    isError,\n    error: newError,\n    refetch,\n  } = useGetFavorites()\n\n  useEffect(() => {\n    if (isError && newError) {\n      setError(newError)\n    }\n  }, [isError, newError])\n\n  useEffect(() => {\n    if (!accessToken) {\n      setError(new Error('Please sign in to access your favorites.'))\n    }\n  }, [accessToken])\n\n  const filterEntityHeaders = (searchTerm: string, array: EntityHeader[]) => {\n    const searchTermLowercase = searchTerm.toLowerCase()\n    return array.filter(\n      item => item.name.toLowerCase().indexOf(searchTermLowercase) >= 0,\n    )\n  }\n\n  useEffect(() => {\n    if (data) {\n      let newData = [...data.results]\n      if (sort) {\n        newData.sort((a, b) => {\n          if (sort.direction == 'DESC') {\n            return a[sort.field].toLowerCase() > b[sort.field].toLowerCase()\n              ? 1\n              : -1\n          } else {\n            return a[sort.field].toLowerCase() < b[sort.field].toLowerCase()\n              ? 1\n              : -1\n          }\n        })\n      }\n      if (searchText) {\n        newData = filterEntityHeaders(searchText, newData)\n      }\n      setSortedData(newData)\n    }\n  }, [data, searchText, sort])\n\n  const removeFavorite = async (item: EntityHeader) => {\n    try {\n      await SynapseClient.removeUserFavorite(item.id, accessToken)\n      refetch()\n    } catch (err) {\n      console.error(err)\n    }\n  }\n\n  const showInteractiveSortIcon = (columnSortBy: SortField) => {\n    return (\n      setSort && (\n        <SortIcon\n          role=\"button\"\n          style={{ height: '20px' }}\n          active={sort?.field === columnSortBy}\n          direction={\n            sort?.field === columnSortBy\n              ? sort.direction === 'DESC'\n                ? Direction.DESC\n                : Direction.ASC\n              : Direction.DESC\n          }\n          onClick={() => {\n            const direction =\n              columnSortBy === sort?.field\n                ? sort.direction === 'ASC'\n                  ? 'DESC'\n                  : 'ASC'\n                : 'DESC'\n            setSort({\n              field: columnSortBy,\n              direction,\n            })\n          }}\n        />\n      )\n    )\n  }\n\n  if (error) {\n    return <ErrorBanner error={error} />\n  }\n\n  return (\n    <div className=\"FavoritesPage\">\n      <div className=\"searchInputWithIcon\">\n        <IconSvg options={{ icon: 'searchOutlined' }} />\n        <Form.Control\n          type=\"search\"\n          placeholder=\"Favorite Name\"\n          value={searchText}\n          onChange={event => {\n            setSearchText(event.target.value)\n          }}\n        />\n      </div>\n\n      {sortedData && sortedData.length > 0 && (\n        <div className=\"bootstrap-4-backport\">\n          <ReactBootstrap.Table\n            striped={true}\n            responsive={true}\n            className=\"FavoritesTable\"\n          >\n            <thead>\n              <tr>\n                {/* first column for the favorite icon */}\n                <th />\n                <th>\n                  Name\n                  <span>{showInteractiveSortIcon('name')}</span>\n                </th>\n                <th>\n                  Type\n                  <span>{showInteractiveSortIcon('type')}</span>\n                </th>\n              </tr>\n            </thead>\n            <tbody>\n              {sortedData.map((item: EntityHeader) => {\n                if (item) {\n                  const entityType = convertToEntityType(item.type)\n                  return (\n                    <tr key={item.id}>\n                      <td>\n                        <a\n                          data-tip=\"Click the star to remove this item from your favorites\"\n                          data-for={`${item.id}-Tooltip`}\n                          onClick={() => {\n                            removeFavorite(item)\n                          }}\n                          className=\"ignoreLink\"\n                        >\n                          <ReactTooltip\n                            delayShow={300}\n                            place=\"right\"\n                            type=\"dark\"\n                            effect=\"solid\"\n                            id={`${item.id}-Tooltip`}\n                          />\n                          <IconSvg\n                            options={{ icon: 'fav', color: '#EDC766' }}\n                          />\n                        </a>\n                      </td>\n                      <td>\n                        <a\n                          rel=\"noopener noreferrer\"\n                          href={`${PRODUCTION_ENDPOINT_CONFIG.PORTAL}#!Synapse:${item.id}`}\n                        >\n                          {item.name}\n                        </a>\n                      </td>\n                      <td>\n                        <EntityTypeIcon\n                          type={entityType}\n                          style={{ marginRight: '5px' }}\n                        />\n                        {entityTypeToFriendlyName(entityType)}\n                      </td>\n                    </tr>\n                  )\n                } else return false\n              })}\n            </tbody>\n          </ReactBootstrap.Table>\n        </div>\n      )}\n      {isFetching && (\n        <div className=\"placeholder\">\n          <SynapseSpinner size={30} />\n        </div>\n      )}\n    </div>\n  )\n}\n"],"names":["accessToken","useSynapseContext","sort","setSort","useState","undefined","searchText","setSearchText","sortedData","setSortedData","error","setError","data","isFetching","isError","newError","refetch","useGetFavorites","useEffect","Error","filterEntityHeaders","searchTerm","array","searchTermLowercase","toLowerCase","filter","item","name","indexOf","newData","results","a","b","direction","field","removeFavorite","SynapseClient","id","err","console","showInteractiveSortIcon","columnSortBy","height","Direction","DESC","ASC","_jsxs","_jsx","icon","event","target","value","length","ReactBootstrap.Table","map","entityType","convertToEntityType","type","color","PRODUCTION_ENDPOINT_CONFIG","PORTAL","marginRight","entityTypeToFriendlyName"],"mappings":"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"}