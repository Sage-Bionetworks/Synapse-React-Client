{"version":3,"file":"StyleGuidistComponentWrapper.8a2433ac.js","sources":["../../node_modules/react-query/devtools/index.js","../../src/lib/containers/StyleGuidistComponentWrapper.tsx"],"sourcesContent":["if (process.env.NODE_ENV !== 'development') {\n  module.exports = {\n    ReactQueryDevtools: function () {\n      return null\n    },\n    ReactQueryDevtoolsPanel: function () {\n      return null\n    },\n  }\n} else {\n  module.exports = require('./development')\n}\n","import React, { useEffect } from 'react'\nimport { MemoryRouter } from 'react-router-dom'\nimport { SynapseContextProvider } from '../utils/SynapseContext'\nimport { SynapseClient } from '../utils'\nimport { SynapseToastContainer } from './ToastMessage'\nimport { ReactQueryDevtools } from 'react-query/devtools'\nimport moment from 'moment'\nimport {\n  detectSSOCode,\n  getAccessTokenFromCookie,\n  getUserProfile,\n  getAuthenticatedOn,\n} from '../utils/SynapseClient'\n\nexport async function sessionChangeHandler() {\n  detectSSOCode()\n  const accessToken = await getAccessTokenFromCookie()\n  const profile = await getUserProfile(accessToken)\n  let date\n  if (accessToken) {\n    getAuthenticatedOn(accessToken).then(authenticatedOn => {\n      date = moment(authenticatedOn.authenticatedOn).format('L LT')\n    })\n  }\n  return { accessToken, profile, authenticatedOn: date }\n}\n\nexport const StyleGuidistComponentWrapper: React.FC = props => {\n  const [accessToken, setAccessToken] = React.useState(undefined)\n  useEffect(() => {\n    sessionChangeHandler().then(data => {\n      setAccessToken(data.accessToken)\n    })\n  })\n  return (\n    <SynapseContextProvider\n      synapseContext={{\n        accessToken: accessToken,\n        isInExperimentalMode: SynapseClient.isInSynapseExperimentalMode(),\n        utcTime: SynapseClient.getUseUtcTimeFromCookie(),\n        withErrorBoundary: true,\n      }}\n    >\n      <MemoryRouter>\n        <ReactQueryDevtools />\n        <SynapseToastContainer />\n        <main>{props.children}</main>\n      </MemoryRouter>\n    </SynapseContextProvider>\n  )\n}\n\nexport default StyleGuidistComponentWrapper\n"],"names":["devtoolsModule","detectSSOCode","getAuthenticatedOn","date","accessToken","profile","useEffect","sessionChangeHandler","setAccessToken","_jsx","SynapseClient.getUseUtcTimeFromCookie","_jsxs","ReactQueryDevtools","children"],"mappings":"uRACEA,UAAiB,CACf,mBAAoB,UAAY,CAC9B,MAAO,KACR,EACD,wBAAyB,UAAY,CACnC,MAAO,KACR,CACF,ECRH,KAAA,GAAA,OAAA,+BAcA,kBAAA,CACEC,IACA,KAAA,GAAA,KAAA,KACA,EAAA,KAAA,GAAA,CAAA,EACA,GAAA,GACA,MAAA,IACEC,EAAAA,CAAAA,EAAAA,KAAAA,AAAAA,GAAAA,CACEC,EAAAA,EAAAA,EAAAA,eAAAA,EAAAA,OAAAA,MAAAA,CAAO,CAAA,EAGX,CAAO,cAAEC,UAAaC,gBAAAA,CAA0BF,CACjD,CAEM,KAAA,GAAA,AAAA,GAAA,CACL,KAAA,CAAA,EAAA,GAAA,EAAA,SAAA,MAAA,EACAG,SAAAA,IAAAA,CACEC,EAAAA,EAAAA,KAAAA,AAAAA,GAAAA,CACEC,EAAAA,EAAAA,WAAAA,CAAc,CAAA,CADhB,CAAA,EAIFC,EAAA,EAAA,CACE,eAAA,CACkB,cACdL,qBAAAA,EAAAA,EADc,QAAAM,EAAA,EAAA,kBAAA,EAIK,EAJL,SAAAC,EAAA,EAAA,CAOhB,SAAA,CAAAF,EAAAG,EAAA,QAAA,mBAAA,EAAA,EAAAH,EAAA,EAAA,CAAA,CAAA,EAAAA,EAAA,OAAA,CAGE,SAAA,EAAA,QAAaI,CAAAA,CAAAA,CAHf,CAAA,CAAA,CAAA,CAOL"}