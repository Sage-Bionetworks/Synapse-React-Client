import{w as k,aV as E,aW as N,aX as O}from"./index.f541c7c2.js";import{k as d}from"./ToastMessage.0ffd35ff.js";import{M as B}from"./MarkdownPopover.79d2267d.js";import{T as m}from"./Typography.9748340b.js";import{a as r,j as t,F as g}from"./jsx-runtime.00d70968.js";import{B as w}from"./Button.fda23eee.js";import{H as Q}from"./IconSvg.45071707.js";import"./withStyles.d6b2de44.js";import"./objectWithoutProperties.a0dea5ce.js";import"./objectWithoutPropertiesLoose.5e7699d1.js";import"./toConsumableArray.8f496188.js";import"./createClass.67a84016.js";import"./FullWidthAlert.a73af62a.js";import"./Tooltip.02f85a09.js";import"./SvgIcon.5d5878ed.js";import"./slicedToArray.e9a7fa03.js";import"./makeStyles.2422b359.js";import"./index.57d09176.js";import"./index.35ce73ec.js";import"./assert.a0977670.js";import"./iframe.66e5fae0.js";import"./getEndpoint.bb7ded34.js";import"./usePopperMarginModifiers.1c4b2def.js";import"./useWaitForDOMRef.d07b3a07.js";import"./MarkdownSynapse.3a3b4255.js";import"./UserCard.49ff3395.js";import"./IconCopy.095bf867.js";import"./SkeletonTable.52fb58fe.js";import"./times.396ab5b7.js";import"./toInteger.80c96920.js";import"./Skeleton.88496afb.js";import"./Overlay.3297046e.js";import"./factory.b4f5cce1.js";import"./sqlFunctions.b49ac766.js";import"./SynapseVideo.0322011a.js";import"./react-intersection-observer.esm.e445ee86.js";import"./DateFormatter.4eea88a2.js";import"./moment.a565bb48.js";import"./InfoOutlined.303a7ed9.js";const L="org.sagebionetworks.repo.model.quiz.MultichoiceResponse",M=window.React,H=window.React.useEffect,u=window.React.useState,p=()=>{const{accessToken:a}=k(),T=E(),[i,_]=u(),[l,f]=u([]),[o,h]=u(),C=M.useRef(null),x="https://help.synapse.org/docs/Getting-Started.2055471150.html",y=async()=>{try{_(await N(a))}catch(e){T(e)}};H(()=>{y()},[a]);const S=(e,s)=>{const c=[...l.filter(n=>n.questionIndex!==e),{questionIndex:e,answerIndex:[s],concreteType:L}];f(c)},R=()=>{var e;(e=C.current)==null||e.reset(),f([]),h(void 0),y()},v=async()=>{try{if(i&&i.questions.length===l.length){const e={quizId:i.id,questionResponses:l},s=await O(a,e);h(s),window.scrollTo(0,0)}else d("Please answer all of the questions and try again.","warning")}catch(e){d(e.reason,"danger")}},I=e=>e?{content:t(g,{children:"More info"}),closePopoverOnClick:!0,onClick:()=>window.open(e,"_blank"),variant:"primary"}:void 0;return r("div",{className:"bootstrap-4-backport CertificationQuiz",children:[o&&t("div",{children:r(g,{children:[!o.passed&&t("div",{className:"failBanner",children:"Quiz Failed"}),r(m,{variant:"hintText",children:["Score: ",o.score," / ",i==null?void 0:i.questions.length]}),o.passed?d(`You passed the Synapse Certification Quiz on ${o.passedOn}`,"success"):r(m,{variant:"body1",children:["Please review the items shown in red below, and"," ",t("a",{href:"#",onClick:e=>{e.preventDefault(),R()},children:"try again"}),"."]})]})}),r("div",{className:"CertificationQuiz__container",children:[r(w,{onClick:()=>window.open(x,"_blank"),className:"help-button",variant:"light-secondary",children:[t(Q,{className:"HelpButton",style:{marginRight:"4px"}}),"Help"]}),i?t("div",{dangerouslySetInnerHTML:{__html:i.header}}):"",t("form",{ref:C,onSubmit:e=>e.preventDefault(),children:t("ol",{children:i==null?void 0:i.questions.map(e=>{var s,c;return r("li",{role:e.exclusive?"radiogroup":void 0,children:[t("div",{dangerouslySetInnerHTML:{__html:e.prompt},className:o&&((c=(s=o.corrections)==null?void 0:s.find(n=>n.question.questionIndex===e.questionIndex))!=null&&c.isCorrect?"":"incorrectQuestion")}),e.answers.map(n=>r("div",{children:[t("input",{id:`${e.questionIndex}-${n.answerIndex}`,name:`${e.questionIndex}`,type:e.exclusive?"radio":"checkbox",value:n.answerIndex,onClick:b=>S(e.questionIndex,Number(b.currentTarget.value)),disabled:!!o}),t("label",{style:{fontWeight:400},htmlFor:`${e.questionIndex}-${n.answerIndex}`,children:n.prompt})]},`${e.questionIndex}-${n.answerIndex}`)),t(B,{contentProps:{markdown:e.helpText},placement:"right",actionButton:I(e.docLink),showCloseButton:!0,children:r(m,{variant:"hintText",color:"primary",children:[t(Q,{className:"HelpButton",style:{marginRight:"4px"}}),"Need help answering this question?"]})})]},e.questionIndex)})})}),!o&&t(w,{className:"help-button",variant:"primary",onClick:()=>v(),children:"Submit"})]})]})},z=p;try{p.displayName="CertificationQuiz",p.__docgenInfo={description:"",displayName:"CertificationQuiz",props:{}},typeof STORYBOOK_REACT_CLASSES<"u"&&(STORYBOOK_REACT_CLASSES["src/lib/containers/CertificationQuiz.tsx#CertificationQuiz"]={docgenInfo:p.__docgenInfo,name:"CertificationQuiz",path:"src/lib/containers/CertificationQuiz.tsx#CertificationQuiz"})}catch{}const Se={parameters:{storySource:{source:`import React from 'react'
import { ComponentStory, ComponentMeta } from '@storybook/react'

import CertificationQuiz from './CertificationQuiz'

export default {
  title: 'Synapse/CertificationQuiz',
  component: CertificationQuiz,
  argTypes: {},
} as ComponentMeta<typeof CertificationQuiz>

const Template: ComponentStory<typeof CertificationQuiz> = args => (
  <CertificationQuiz {...args} />
)

export const CertificationQuizDemo = Template.bind({})
CertificationQuizDemo.args = {}
`,locationsMap:{"certification-quiz-demo":{startLoc:{col:59,line:12},endLoc:{col:1,line:14},startBody:{col:59,line:12},endBody:{col:1,line:14}}}}},title:"Synapse/CertificationQuiz",component:z,argTypes:{}},$=a=>t(z,{...a}),P=$.bind({});P.args={};const Re=["CertificationQuizDemo"];export{P as CertificationQuizDemo,Re as __namedExportsOrder,Se as default};
