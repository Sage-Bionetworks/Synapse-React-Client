{"version":3,"file":"ColorGradient.16f0e0f2.js","sources":["../../src/lib/containers/ColorGradient.tsx"],"sourcesContent":["import {\n  COLOR_PALETTE_EVEN,\n  COLOR_PALETTE_ODD,\n} from '../utils/functions/colorPalette'\n\nexport function rgba2rgb(background: number[], color: number[]) {\n  const alpha = color[3]\n  return [\n    Math.floor((1 - alpha) * background[0] + alpha * color[0] + 0.5),\n    Math.floor((1 - alpha) * background[1] + alpha * color[1] + 0.5),\n    Math.floor((1 - alpha) * background[2] + alpha * color[2] + 0.5),\n  ]\n}\n\nexport function getColorPalette(\n  start: number,\n  end: number,\n): { colorPalette: string[]; textColors: string[] } {\n  let colorPaletteSelection = []\n  const textColors = []\n  let offset = -1\n\n  if (start % 2 === 0) {\n    colorPaletteSelection = COLOR_PALETTE_EVEN\n    offset = start * 5\n  } else {\n    colorPaletteSelection = COLOR_PALETTE_ODD\n    offset = (start - 1) * 5\n  }\n\n  const colorPalette: string[] = []\n\n  for (let i = 0; i < end; i += 1) {\n    const textColor: string = i % 10 < 2 || i % 10 > 7 ? 'white' : 'black'\n    const color: string = `${\n      colorPaletteSelection[(offset + i) % colorPaletteSelection.length]\n    }`\n    colorPalette.push(color)\n    textColors.push(textColor)\n  }\n  return { colorPalette, textColors }\n}\n\nexport default getColorPalette\n"],"names":["start","end","colorPaletteSelection","textColors","offset","COLOR_PALETTE_EVEN","COLOR_PALETTE_ODD","colorPalette","i","textColor","color","length","push"],"mappings":"sDAcO,WACLA,EACAC,EACkD,CAClD,GAAIC,GAAwB,CAAA,EAC5B,KAAMC,GAAa,CAAA,EACnB,GAAIC,GAAS,GAETJ,AAAAA,EAAQ,IAAM,EACQK,GAAAA,EACxBD,EAASJ,EAAQ,GAEOM,GAAAA,EACxBF,KAAkB,GAAK,GAGzB,KAAMG,GAAyB,CAAA,EAE/B,OAASC,GAAI,EAAGA,EAAIP,EAAKO,GAAK,EAAG,CAC/B,KAAMC,GAAoBD,EAAI,GAAK,GAAKA,EAAI,GAAK,EAAI,QAAU,QACzDE,EAAiB,GACrBR,EAAuBE,GAASI,GAAKN,EAAsBS,UAE7DJ,EAAaK,KAAKF,CAAlB,EACAP,EAAWS,KAAKH,CAAhB,CACD,CACM,MAAA,CAAEF,eAAcJ,YAAAA,CACxB"}