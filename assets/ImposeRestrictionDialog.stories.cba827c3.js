import{R as h,a as i,j as o}from"./jsx-runtime.43a8fcf9.js";import{R as I}from"./RadioGroup.ca2b8842.js";import{F as D}from"./FullWidthAlert.f72a4ef7.js";import{I as R}from"./IconSvg.710ae2ef.js";import"./index.05d3527e.js";import{a as C}from"./useAccessRequirements.6431b8c3.js";import{d as a}from"./ToastMessage.0277286d.js";import{a as S}from"./HasAccessV2.977703e6.js";import{M as _,D as b,a as T}from"./DialogContent.9e5ac9cc.js";import{D as x,S as v}from"./Stack.229a2ffc.js";import{B as A}from"./Box.2b787467.js";import{I as k}from"./IconButton.f195eccf.js";import{F as w,a as B}from"./FormLabel.d1d0a0db.js";import{B as l}from"./Button.c355b500.js";import{T as O}from"./Typography.1c91c940.js";import"./iframe.f725ca92.js";import"./uniqueId.5ab1be4f.js";import"./isArray.ef4abd22.js";import"./Button.1bf4e27e.js";import"./index.35ce73ec.js";import"./isSymbol.9cf935a3.js";import"./Alert.52cd8abc.js";import"./hook.21b06627.js";import"./createWithBsPrefix.5369d369.js";import"./divWithClassName.ce1df20c.js";import"./index.91cff701.js";import"./Tooltip.9e1c2716.js";import"./styled.76b26431.js";import"./SvgIcon.6442358d.js";import"./useTheme.af9f301b.js";import"./TransitionGroupContext.b91ad5da.js";import"./SynapseConstants.4792b5b5.js";import"./Fade.b7951dc7.js";import"./getEndpoint.f1f195f5.js";import"./Link.fae97ed4.js";import"./useMutation.ee241b25.js";import"./useInfiniteQuery.059ba1ba.js";import"./queryKeys.e0d3085f.js";import"./removeClass.27874bcb.js";import"./hasClass.56fd144a.js";import"./RestrictionInformation.edfbac5a.js";import"./useGetInfoFromIds.d5b3f724.js";import"./use-deep-compare-effect.esm.73b4fb0f.js";import"./uniq.bdc6ab7c.js";import"./_baseSlice.50189bc5.js";import"./toInteger.6147b6bf.js";import"./_cacheHas.61ea5ffc.js";import"./without.ba75708a.js";import"./_Set.cd3f97a4.js";import"./_setToArray.a82100c8.js";import"./LoadingScreen.c7fc0bfd.js";import"./Modal.b5f77acd.js";import"./contains.96fd987b.js";import"./inheritsLoose.5ef7e794.js";import"./usePrevious.d85389cd.js";import"./useWaitForDOMRef.14fc8eae.js";import"./emotion-react.browser.esm.4fa41df1.js";import"./UserCard.85d537d7.js";import"./IconCopy.eda85edd.js";import"./SkeletonTable.2f3518f6.js";import"./times.0141f5ac.js";import"./Skeleton.2b718cf1.js";import"./Overlay.e96f98b3.js";import"./usePopperMarginModifiers.498ed7f0.js";import"./WarningModal.242f7174.js";import"./RegularExpressions.3cd69849.js";import"./react-intersection-observer.esm.847c594c.js";import"./DateFormatter.76a82bfb.js";import"./dayjs.min.0cc1d975.js";import"./utc.662b37b0.js";import"./EntityIcon.f1b03715.js";import"./core.esm.01c35439.js";import"./pick.78dd2924.js";import"./_baseClone.89a5046c.js";import"./isEmpty.7ae9700f.js";import"./isEqual.5749f0e5.js";import"./index.browser.a697beda.js";import"./union.2a91053b.js";import"./CustomSelectWidget.bf249796.js";import"./Select-54ac8379.esm.9614dc94.js";import"./isString.a2a21200.js";import"./factory.8aa29487.js";import"./sqlFunctions.c711a305.js";import"./QueryFilter.6069a860.js";import"./useEntity.f604a81d.js";import"./SynapseTableConstants.07ecdebd.js";import"./FacetNav.df1a8b11.js";import"./queryUtils.2c3057e1.js";import"./cloneDeep.f634b7fa.js";import"./NoSearchResults.e16db7b4.js";import"./NoData.97d35328.js";import"./unCamelCase.07e38083.js";import"./ColumnType.744125d2.js";import"./ElementWithTooltip.edcdce96.js";import"./Dropdown.e99303c5.js";import"./isRequiredForA11y.20ed4857.js";import"./Checkbox.ed906ef1.js";import"./RangeSlider.9dca656c.js";import"./react-sizeme.3edfc10c.js";import"./ColorGradient.16f0e0f2.js";import"./colorPalette.8145e2e2.js";import"./SelectionCriteriaPill.3f0a723b.js";import"./Close.55deeabb.js";import"./relativeTime.c0627467.js";import"./useDownloadList.2c1c6acf.js";import"./QueryCount.94ee5a3e.js";import"./react-select.esm.357e96fb.js";import"./IconList.655fe748.js";import"./UserCardList.83c657fc.js";import"./EntityLink.ad279d6b.js";import"./ButtonBase.48ba7e09.js";import"./UserOrTeamBadge.ab17001a.js";import"./SynapseVideo.51c7a15d.js";import"./ManagedACTAccessRequirementStatus.be369a71.js";import"./FileUpload.c74b6586.js";import"./UserSearchBox.483d6f64.js";import"./Modal.2fda51ae.js";import"./Paper.adbb31ec.js";import"./isMuiElement.ae63c9e2.js";function r(e){const c=i(O,{variant:"smallText1",children:["Sage Bionetworks does not typically impose conditions for use on non-human data unless there is a legal, ethical or regulatory reason to do so. If you want to add conditions for use to this content, please contact the Synapse Access and Compliance Team (ACT) to discuss at"," ",o("a",{href:"mailto:act@sagebase.org",children:"act@sagebase.org"}),"."]}),{entityId:m,open:d,onClose:t}=e,[n,u]=h.useState(void 0),{mutate:g,isLoading:p}=C({onSuccess:()=>{a("Successfully imposed restriction","success"),t()},onError:s=>{a(`Failed to impose restriction: ${s.reason}`,"danger")}});function f(){n?g(m):t()}function y(s){u(s)}return i(_,{open:d,onClose:t,maxWidth:"sm",fullWidth:!0,children:[o(x,{children:i(v,{direction:"row",alignItems:"center",gap:"5px",children:["Conditions for Use",o(S,{markdownText:"Conditions for use describes data use requirements that must be fulfilled before downloading.",helpUrl:"https://help.synapse.org/docs/Sharing-Settings,-Permissions,-and-Conditions-for-Use.2024276030.html#SharingSettings,Permissions,andConditionsforUse-ConditionsforUse"}),o(A,{sx:{flexGrow:1}}),o(k,{onClick:t,children:o(R,{icon:"close",wrap:!1,sx:{color:"grey.700"}})})]})}),o(b,{children:i(w,{sx:{width:"100%"},children:[o(B,{id:"demo-radio-buttons-group-label",children:"Is this sensitive human data that must be protected?"}),o(I,{id:`impose-restriction-${m}`,value:n,options:[{label:"Yes",value:!0},{label:"No",value:!1}],onChange:y}),n===!1&&o(D,{variant:"warning",isGlobal:!1,description:c})]})}),i(T,{children:[o(l,{variant:"outlined",disabled:p,onClick:t,children:"Cancel"}),o(l,{disabled:n==null||p,variant:"contained",onClick:f,children:"OK"})]})]})}try{r.displayName="ImposeRestrictionDialog",r.__docgenInfo={description:"",displayName:"ImposeRestrictionDialog",props:{entityId:{defaultValue:null,description:"",name:"entityId",required:!0,type:{name:"string"}},open:{defaultValue:null,description:"",name:"open",required:!0,type:{name:"boolean"}},onClose:{defaultValue:null,description:"",name:"onClose",required:!0,type:{name:"() => void"}}}},typeof STORYBOOK_REACT_CLASSES<"u"&&(STORYBOOK_REACT_CLASSES["src/lib/containers/access_requirements/ImposeRestrictionDialog.tsx#ImposeRestrictionDialog"]={docgenInfo:r.__docgenInfo,name:"ImposeRestrictionDialog",path:"src/lib/containers/access_requirements/ImposeRestrictionDialog.tsx#ImposeRestrictionDialog"})}catch{}const Yt={parameters:{storySource:{source:`import React from 'react'
import { ComponentStory, ComponentMeta } from '@storybook/react'
import ImposeRestrictionDialog from './ImposeRestrictionDialog'

// More on default export: https://storybook.js.org/docs/react/writing-stories/introduction#default-export
export default {
  title: 'Governance/ImposeRestrictionDialog',
  component: ImposeRestrictionDialog,
  // More on argTypes: https://storybook.js.org/docs/react/api/argtypes
  argTypes: {},
} as ComponentMeta<typeof ImposeRestrictionDialog>

const Template: ComponentStory<typeof ImposeRestrictionDialog> = args => (
  <ImposeRestrictionDialog {...args} />
)

export const Demo = Template.bind({})
Demo.args = {
  entityId: 'syn45328519',
  open: true,
}
`,locationsMap:{demo:{startLoc:{col:65,line:13},endLoc:{col:1,line:15},startBody:{col:65,line:13},endBody:{col:1,line:15}}}}},title:"Governance/ImposeRestrictionDialog",component:r,argTypes:{}},q=e=>o(r,{...e}),L=q.bind({});L.args={entityId:"syn45328519",open:!0};const $t=["Demo"];export{L as Demo,$t as __namedExportsOrder,Yt as default};
