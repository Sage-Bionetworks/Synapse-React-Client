{"version":3,"file":"Checkbox.85bb9cd4.js","sources":["../../src/lib/containers/widgets/Checkbox.tsx"],"sourcesContent":["import { uniqueId as _uniqueId } from 'lodash-es'\nimport React, { useEffect, useState } from 'react'\n\nexport type CheckboxProps = {\n  label: string\n  hideLabel?: boolean\n  checked?: boolean\n  className?: string\n  onChange: (newValue: boolean) => void\n  isSelectAll?: boolean\n  children?: React.ReactChild\n  onClick?: (event: React.SyntheticEvent<HTMLDivElement>) => void\n  disabled?: boolean\n  'data-testid'?: string\n}\n\nexport const Checkbox: React.FunctionComponent<CheckboxProps> = (\n  props: CheckboxProps,\n) => {\n  const {\n    checked: propsChecked = false,\n    hideLabel = false,\n    isSelectAll = false,\n    disabled = false,\n  } = props\n  const [checked, setChecked] = useState<boolean>(propsChecked)\n  const [uniqueId] = useState(_uniqueId('src-checkbox-'))\n\n  useEffect(() => {\n    setChecked(propsChecked)\n  }, [propsChecked])\n\n  const handleCheckboxChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    props.onChange(event.target.checked)\n    if (isSelectAll && event.target.checked === false) {\n      /* \n         You can click the all checkbox from off -> on\n         but clicking it off is a no-op\n      */\n      setChecked(true)\n    } else {\n      setChecked(event.target.checked)\n    }\n  }\n\n  let className = 'checkbox'\n  if (props.className) {\n    className += ` ${props.className}`\n  }\n\n  return (\n    <div className={className} onClick={props.onClick}>\n      <input\n        aria-label={props.label}\n        type=\"checkbox\"\n        checked={checked}\n        id={uniqueId}\n        onChange={handleCheckboxChange}\n        disabled={disabled}\n        data-testid={props['data-testid']}\n      />\n      {<label htmlFor={uniqueId}>{hideLabel ? <></> : props.label}</label>}\n      {props.children ?? <></>}\n    </div>\n  )\n}\n"],"names":["uniqueId","_uniqueId","useEffect","setChecked","props","className","_jsxs","onClick","label","handleCheckboxChange","_jsx"],"mappings":"uGACA,KAAA,GAAA,OAAA,MAAA,kCAeO,EAAA,AAAA,GAAA,OAGL,KAAA,CAAM,QAAA,EAAA,GACoB,YAAA,GACZ,cAAA,GACE,WAAA,IACH,EAEb,CAAA,EAAA,GAAA,EAAA,CAAA,EACA,CAAAA,GAAA,EAAAC,EAAA,eAAA,CAAA,EAEAC,EAAAA,IAAAA,CACEC,EAAAA,CAAAA,CAAU,EAAA,CAAA,CAAA,CAAA,EAGZ,KAAA,GAAA,AAAA,GAAA,CACEC,EAAAA,SAAAA,EAAAA,OAAAA,OAAAA,EACA,AAAA,GAAA,EAAA,OAAA,UAAA,GAKED,EAAAA,EAAAA,EAEAA,EAAAA,EAAAA,OAAAA,OAAAA,CACD,EAGH,GAAA,GAAA,WACA,MAAA,GAAA,WACEE,IAAAA,IAAAA,EAAAA,aAGFC,EAAA,MAAA,CACE,YAAK,QAAA,EAAA,QAAqCC,SAAAA,CAAAA,EAAAA,QAAAA,CACxC,aAAA,EAAA,MACoBC,KAAAA,WACb,UACL,GAAAR,EACIA,SAAAA,EACMS,WACV,cAAA,EAAA,cACmB,CAAA,EAAAC,EAAA,QAAA,CAEpB,QAAAV,EAAgBA,SAAAA,EAAAA,EAAAA,EAAAA,CAAAA,CAAAA,EAAAA,EAAAA,KAAqCQ,CAAAA,EAAAA,KAAAA,WAAAA,OAAAA,EAAAA,EAAAA,CAAAA,CAAAA,CAAAA,CAVxD,CAAA,CAcH"}