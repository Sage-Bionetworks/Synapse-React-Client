import{p as c,i as Q}from"./sqlFunctions.b49ac766.js";import{T as _,F as W,a as V,b as v,S as R,L as x}from"./LastUpdatedOn.2d921084.js";import{l as D,f as O,h as I,k as U,B as A,n as M,w as F,p as N}from"./index.b1bae600.js";import{f as B,Q as k,a as P,l as K,T as Y}from"./TotalQueryResults.b705f50d.js";import{i as z}from"./EntityTypeUtils.aaaa51a2.js";import{j as e,a as j,F as H}from"./jsx-runtime.2e925369.js";import{c as $}from"./cloneDeep.4fcc1814.js";import"./HelpPopover.3a9a93f4.js";import"./MarkdownPopover.a14379f8.js";import"./usePopperMarginModifiers.4ced5867.js";import"./objectWithoutPropertiesLoose.090b3c10.js";import"./useWaitForDOMRef.37941199.js";import"./Alert.5f67d407.js";import"./index.f252d424.js";import"./Button.c582ea4c.js";import"./Transition.8d049b2f.js";import"./withStyles.670aaa99.js";import"./objectWithoutProperties.07f8cd75.js";import"./toConsumableArray.8f496188.js";import"./createClass.67a84016.js";import"./index.06f4a415.js";import"./hasClass.56fd144a.js";import"./MarkdownSynapse.7ff24a62.js";import"./UserCard.62a92ab7.js";import"./getEndpoint.0de7fccf.js";import"./IconCopy.b1eba79c.js";import"./SkeletonTable.3fe7a952.js";import"./times.82d54e8c.js";import"./toInteger.17f7c8af.js";import"./toString.8ef640ae.js";import"./Skeleton.3847d4da.js";import"./Tooltip.8a506c05.js";import"./createSvgIcon.0bfcb8f8.js";import"./SvgIcon.2998c199.js";import"./slicedToArray.e9a7fa03.js";import"./useTheme.05af6e65.js";import"./makeStyles.72aedf90.js";import"./IconSvg.4a41f208.js";import"./InfoOutlined.d201fe9f.js";import"./ToastMessage.6439b7b0.js";import"./FullWidthAlert.279e31cc.js";import"./Typography.3a9e45b6.js";import"./removeClass.27874bcb.js";import"./uniqueId.fa0dadf5.js";import"./Overlay.bf042904.js";import"./assert.024abc98.js";import"./iframe.c68e29f3.js";import"./index.8cde812d.js";import"./factory.a4dafec8.js";import"./SynapseVideo.973609ac.js";import"./react-intersection-observer.m.66de6abb.js";import"./DateFormatter.477e6886.js";import"./moment.53181859.js";import"./HelpOutlineTwoTone.6ff08a10.js";import"./Collapse.8d0a3062.js";import"./unCamelCase.d070537b.js";import"./ColumnType.744125d2.js";import"./ElementWithTooltip.ee55d79e.js";import"./SynapseTableConstants.07ecdebd.js";import"./index.82ed59e1.js";import"./index.5ef2ed87.js";import"./Dropdown.b16d4176.js";import"./Modal.9056450d.js";import"./useWillUnmount.4a16e5cd.js";import"./isRequiredForA11y.61bbc671.js";import"./use-deep-compare-effect.esm.76673280.js";import"./ProgrammaticInstructionsModal.12be8875.js";import"./QueryCount.c3248564.js";import"./NoData.928742eb.js";import"./InteractiveCopyIdsIcon.1e99cbcf.js";import"./ExternalFileHandleInterface.8b253a14.js";import"./HasAccessV2.4ca42c4c.js";import"./useGetAccessRequirement.b2d95355.js";import"./useEntityBundle.e7a3e833.js";import"./FileEntity.4f8cb425.js";import"./TypeUtils.a2c41307.js";import"./AccessRequirementList.1d3d72c8.js";import"./useGetInfoFromIds.c4ab08f9.js";import"./uniq.dbc5099d.js";import"./_cacheHas.6e058e6d.js";import"./_baseDifference.d4e44352.js";import"./_setToArray.a82100c8.js";import"./without.57218429.js";import"./LockTwoTone.67127f07.js";import"./AccessApproval.493867d3.js";import"./ManagedACTAccessRequirementStatus.be369a71.js";import"./FileUpload.f8d44baf.js";import"./UserSearchBox.df5d6ea7.js";import"./UserOrTeamBadge.71737d8c.js";import"./RadioGroup.16868f96.js";import"./sortBy.80a01807.js";import"./_baseMap.9d22b959.js";import"./_baseIsEqual.ded4944b.js";import"./LoadingScreen.efad5b29.js";import"./EntityLink.ac7bde9d.js";import"./EntityIcon.aeff114f.js";import"./GenericCard.4b14c8d5.js";import"./IconList.6905b420.js";import"./FileHandleLink.6fc7c14c.js";import"./isEmpty.fab48103.js";import"./Checkbox.85bb9cd4.js";import"./SearchResultsNotFound.263a233e.js";import"./NoSearchResults.19ed4ed4.js";import"./ButtonBase.86e584b9.js";import"./queryUtils.557bd3ea.js";import"./IconMinus.f135ad99.js";import"./RangeSlider.19d66a3c.js";import"./classCallCheck.8304ed06.js";import"./inherits.0fdbf119.js";const G=t=>$({partMask:D|O|I|U|A|M,entityId:c(t),concreteType:"org.sagebionetworks.repo.model.table.QueryBundleRequest",query:{sql:t,limit:25,offset:0}}),r=t=>{const{title:h,searchParams:m,sqlOperator:f,showAccessColumn:C,sql:u,hideDownload:S,hideQueryCount:T,name:L,showTopLevelControls:d=!1,searchConfiguration:o,unitDescription:E="Results",rgbIndex:w,showLastUpdatedOn:q,...n}=t,a=G(u);m&&(a.query.sql=Q(a.query.sql,m,f));const b=F(),g=c(u),{data:i}=N(g);return e(B,{...n,initQueryRequest:a,children:e(k,{rgbIndex:w,unitDescription:E,showLastUpdatedOn:q,...n,children:e(P,{children:l=>{if(l===void 0)throw new Error("No queryContext found when calling QueryContextConsumer");return e(K,{children:s=>{if(s===void 0)throw new Error("No queryVisualizationContext found when calling QueryVisualizationContextConsumer");return j(H,{children:[d&&e(_,{showColumnSelection:!0,name:L,hideDownload:S,hideQueryCount:T,hideFacetFilterControl:!0,hideVisualizationsControl:!0}),i&&z(i)&&i.isSearchEnabled?e(W,{helpUrl:o==null?void 0:o.fullTextSearchHelpURL}):e(V,{...o,queryContext:l,queryVisualizationContext:s}),e(v,{}),d&&e(Y,{frontText:""}),e(R,{synapseContext:b,queryContext:l,queryVisualizationContext:s,showAccessColumn:C,title:h,"data-testid":"SynapseTable",...n}),e(x,{})]})}})}})})})};var y=r;try{r.displayName="StandaloneQueryWrapper",r.__docgenInfo={description:`This component was initially implemented on the portal side. It renders a SynapseTable if a title is provided.
If showTopLevelControls is set to true, then the SynapseTable will also include the TopLevelControls (search, export table, column selection).`,displayName:"StandaloneQueryWrapper",props:{title:{defaultValue:null,description:"",name:"title",required:!1,type:{name:"string"}},hideDownload:{defaultValue:null,description:"",name:"hideDownload",required:!1,type:{name:"boolean"}},showAccessColumn:{defaultValue:null,description:"",name:"showAccessColumn",required:!1,type:{name:"boolean"}},showDownloadColumn:{defaultValue:null,description:"",name:"showDownloadColumn",required:!1,type:{name:"boolean"}},columnLinks:{defaultValue:null,description:"",name:"columnLinks",required:!1,type:{name:"LabelLinkConfig"}},isRowSelectionVisible:{defaultValue:null,description:"",name:"isRowSelectionVisible",required:!1,type:{name:"boolean"}},linkCountToDisaggregatedQuery:{defaultValue:null,description:`If true, columns created by the COUNT function will render with a link to Synapse that opens the disaggregated query results filtered by the conditions of that row.
Note that this is very brittle and only supports one column at a time. See SWC-6075 for more information. Default false.`,name:"linkCountToDisaggregatedQuery",required:!1,type:{name:"boolean"}},showNoContentAvailableWhenEmpty:{defaultValue:null,description:"",name:"showNoContentAvailableWhenEmpty",required:!1,type:{name:"boolean"}},searchParams:{defaultValue:null,description:"",name:"searchParams",required:!1,type:{name:"{ facetValue: string; }"}},sqlOperator:{defaultValue:null,description:"",name:"sqlOperator",required:!1,type:{name:"enum",value:[{value:'"LIKE"'},{value:'"="'},{value:'"HAS"'}]}},sql:{defaultValue:null,description:"",name:"sql",required:!0,type:{name:"string"}},rgbIndex:{defaultValue:null,description:"",name:"rgbIndex",required:!1,type:{name:"number"}},unitDescription:{defaultValue:null,description:"",name:"unitDescription",required:!1,type:{name:"string"}},facetAliases:{defaultValue:null,description:"",name:"facetAliases",required:!1,type:{name:"Record<string, string>"}},showTopLevelControls:{defaultValue:null,description:"",name:"showTopLevelControls",required:!1,type:{name:"boolean"}},searchConfiguration:{defaultValue:null,description:"",name:"searchConfiguration",required:!1,type:{name:'Omit<SearchV2Props, "queryContext" | "queryVisualizationContext">'}},showLastUpdatedOn:{defaultValue:null,description:"",name:"showLastUpdatedOn",required:!1,type:{name:"boolean"}},name:{defaultValue:null,description:"",name:"name",required:!1,type:{name:"string"}},hideVisualizationsControl:{defaultValue:null,description:"",name:"hideVisualizationsControl",required:!1,type:{name:"boolean"}},hideFacetFilterControl:{defaultValue:null,description:"",name:"hideFacetFilterControl",required:!1,type:{name:"boolean"}},hideQueryCount:{defaultValue:null,description:"",name:"hideQueryCount",required:!1,type:{name:"boolean"}},hideSqlEditorControl:{defaultValue:null,description:"",name:"hideSqlEditorControl",required:!1,type:{name:"boolean"}},showColumnSelection:{defaultValue:null,description:"",name:"showColumnSelection",required:!1,type:{name:"boolean"}},customControls:{defaultValue:null,description:"",name:"customControls",required:!1,type:{name:"CustomControl[]"}}}},typeof STORYBOOK_REACT_CLASSES!="undefined"&&(STORYBOOK_REACT_CLASSES["src/lib/containers/table/StandaloneQueryWrapper.tsx#StandaloneQueryWrapper"]={docgenInfo:r.__docgenInfo,name:"StandaloneQueryWrapper",path:"src/lib/containers/table/StandaloneQueryWrapper.tsx#StandaloneQueryWrapper"})}catch{}var to={parameters:{storySource:{source:`import React from 'react'
import { ComponentStory, ComponentMeta } from '@storybook/react'
import StandaloneQueryWrapper from './StandaloneQueryWrapper'

export default {
  title: 'Explore/StandaloneQueryWrapper',
  component: StandaloneQueryWrapper,
} as ComponentMeta<typeof StandaloneQueryWrapper>

const Template: ComponentStory<typeof StandaloneQueryWrapper> = args => (
  <StandaloneQueryWrapper {...args} />
)

export const WithoutTopLevelControls = Template.bind({})
WithoutTopLevelControls.args = {
  title: 'Data Files',
  sql: \`SELECT * FROM syn21994970.5 where dhPortalIndex = 'TRUE' LIMIT 10\`,
  columnLinks: [
    {
      matchColumnName: 'studyOrProject',
      isMarkdown: true,
    },
  ],
}

export const WithColumnAlias = Template.bind({})
WithColumnAlias.args = {
  title: 'With column alias',
  sql: \`SELECT count(ownerID) as Sagers FROM syn23564971 WHERE institution has ('Sage Bionetworks')\`,
}

export const TopLevelControls = Template.bind({})
TopLevelControls.args = {
  title: 'Data Files',
  name: 'Top Level Controls demo',
  hideDownload: false,
  sql: \`SELECT * FROM syn21994970.5 where dhPortalIndex = 'TRUE' LIMIT 10\`,
  showTopLevelControls: true,
}
`,locationsMap:{"without-top-level-controls":{startLoc:{col:64,line:10},endLoc:{col:1,line:12},startBody:{col:64,line:10},endBody:{col:1,line:12}},"with-column-alias":{startLoc:{col:64,line:10},endLoc:{col:1,line:12},startBody:{col:64,line:10},endBody:{col:1,line:12}},"top-level-controls":{startLoc:{col:64,line:10},endLoc:{col:1,line:12},startBody:{col:64,line:10},endBody:{col:1,line:12}}}}},title:"Explore/StandaloneQueryWrapper",component:y};const p=t=>e(y,{...t}),J=p.bind({});J.args={title:"Data Files",sql:"SELECT * FROM syn21994970.5 where dhPortalIndex = 'TRUE' LIMIT 10",columnLinks:[{matchColumnName:"studyOrProject",isMarkdown:!0}]};const X=p.bind({});X.args={title:"With column alias",sql:"SELECT count(ownerID) as Sagers FROM syn23564971 WHERE institution has ('Sage Bionetworks')"};const Z=p.bind({});Z.args={title:"Data Files",name:"Top Level Controls demo",hideDownload:!1,sql:"SELECT * FROM syn21994970.5 where dhPortalIndex = 'TRUE' LIMIT 10",showTopLevelControls:!0};const oo=["WithoutTopLevelControls","WithColumnAlias","TopLevelControls"];export{Z as TopLevelControls,X as WithColumnAlias,J as WithoutTopLevelControls,oo as __namedExportsOrder,to as default};
//# sourceMappingURL=StandaloneQueryWrapper.stories.0d77fd27.js.map
