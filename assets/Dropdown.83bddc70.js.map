{"version":3,"file":"Dropdown.83bddc70.js","sources":["../../node_modules/react-bootstrap/esm/SelectableContext.js","../../node_modules/dom-helpers/esm/matches.js","../../node_modules/@restart/hooks/esm/useForceUpdate.js","../../node_modules/@restart/hooks/esm/useEventListener.js","../../node_modules/@restart/hooks/esm/useGlobalListener.js","../../node_modules/react-overlays/esm/DropdownContext.js","../../node_modules/react-overlays/esm/DropdownMenu.js","../../node_modules/react-overlays/esm/DropdownToggle.js","../../node_modules/react-overlays/esm/Dropdown.js","../../node_modules/react-bootstrap/esm/NavContext.js","../../node_modules/react-bootstrap/esm/DropdownItem.js","../../node_modules/react-bootstrap/esm/NavbarContext.js","../../node_modules/react-bootstrap/esm/useWrappedRefWithWarning.js","../../node_modules/react-bootstrap/esm/DropdownMenu.js","../../node_modules/react-bootstrap/esm/DropdownToggle.js","../../node_modules/react-bootstrap/esm/Dropdown.js"],"sourcesContent":["import React from 'react'; // TODO (apparently this is a bare \"onSelect\"?)\n\nvar SelectableContext = /*#__PURE__*/React.createContext(null);\nexport var makeEventKey = function makeEventKey(eventKey, href) {\n  if (href === void 0) {\n    href = null;\n  }\n\n  if (eventKey != null) return String(eventKey);\n  return href || null;\n};\nexport default SelectableContext;","var matchesImpl;\n/**\n * Checks if a given element matches a selector.\n * \n * @param node the element\n * @param selector the selector\n */\n\nexport default function matches(node, selector) {\n  if (!matchesImpl) {\n    var body = document.body;\n    var nativeMatch = body.matches || body.matchesSelector || body.webkitMatchesSelector || body.mozMatchesSelector || body.msMatchesSelector;\n\n    matchesImpl = function matchesImpl(n, s) {\n      return nativeMatch.call(n, s);\n    };\n  }\n\n  return matchesImpl(node, selector);\n}","import { useReducer } from 'react';\n/**\n * Returns a function that triggers a component update. the hook equivalent to\n * `this.forceUpdate()` in a class component. In most cases using a state value directly\n * is preferable but may be required in some advanced usages of refs for interop or\n * when direct DOM manipulation is required.\n *\n * ```ts\n * const forceUpdate = useForceUpdate();\n *\n * const updateOnClick = useCallback(() => {\n *  forceUpdate()\n * }, [forceUpdate])\n *\n * return <button type=\"button\" onClick={updateOnClick}>Hi there</button>\n * ```\n */\n\nexport default function useForceUpdate() {\n  // The toggling state value is designed to defeat React optimizations for skipping\n  // updates when they are stricting equal to the last state value\n  var _useReducer = useReducer(function (state) {\n    return !state;\n  }, false),\n      dispatch = _useReducer[1];\n\n  return dispatch;\n}","import { useEffect } from 'react';\nimport useEventCallback from './useEventCallback';\n\n/**\n * Attaches an event handler outside directly to specified DOM element\n * bypassing the react synthetic event system.\n *\n * @param element The target to listen for events on\n * @param event The DOM event name\n * @param handler An event handler\n * @param capture Whether or not to listen during the capture event phase\n */\nexport default function useEventListener(eventTarget, event, listener, capture) {\n  if (capture === void 0) {\n    capture = false;\n  }\n\n  var handler = useEventCallback(listener);\n  useEffect(function () {\n    var target = typeof eventTarget === 'function' ? eventTarget() : eventTarget;\n    target.addEventListener(event, handler, capture);\n    return function () {\n      return target.removeEventListener(event, handler, capture);\n    };\n  }, [eventTarget]);\n}","import useEventListener from './useEventListener';\nimport { useCallback } from 'react';\n\n/**\n * Attaches an event handler outside directly to the `document`,\n * bypassing the react synthetic event system.\n *\n * ```ts\n * useGlobalListener('keydown', (event) => {\n *  console.log(event.key)\n * })\n * ```\n *\n * @param event The DOM event name\n * @param handler An event handler\n * @param capture Whether or not to listen during the capture event phase\n */\nexport default function useGlobalListener(event, handler, capture) {\n  if (capture === void 0) {\n    capture = false;\n  }\n\n  var documentTarget = useCallback(function () {\n    return document;\n  }, []);\n  return useEventListener(documentTarget, event, handler, capture);\n}","import React from 'react';\nvar DropdownContext = /*#__PURE__*/React.createContext(null);\nexport default DropdownContext;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport PropTypes from 'prop-types';\nimport React, { useContext, useRef } from 'react';\nimport useCallbackRef from '@restart/hooks/useCallbackRef';\nimport DropdownContext from './DropdownContext';\nimport usePopper from './usePopper';\nimport useRootClose from './useRootClose';\nimport mergeOptionsWithPopperConfig from './mergeOptionsWithPopperConfig';\n\nvar noop = function noop() {};\n/**\n * @memberOf Dropdown\n * @param {object}  options\n * @param {boolean} options.flip Automatically adjust the menu `drop` position based on viewport edge detection\n * @param {[number, number]} options.offset Define an offset distance between the Menu and the Toggle\n * @param {boolean} options.show Display the menu manually, ignored in the context of a `Dropdown`\n * @param {boolean} options.usePopper opt in/out of using PopperJS to position menus. When disabled you must position it yourself.\n * @param {string}  options.rootCloseEvent The pointer event to listen for when determining \"clicks outside\" the menu for triggering a close.\n * @param {object}  options.popperConfig Options passed to the [`usePopper`](/api/usePopper) hook.\n */\n\n\nexport function useDropdownMenu(options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var context = useContext(DropdownContext);\n\n  var _useCallbackRef = useCallbackRef(),\n      arrowElement = _useCallbackRef[0],\n      attachArrowRef = _useCallbackRef[1];\n\n  var hasShownRef = useRef(false);\n  var _options = options,\n      flip = _options.flip,\n      offset = _options.offset,\n      rootCloseEvent = _options.rootCloseEvent,\n      _options$fixed = _options.fixed,\n      fixed = _options$fixed === void 0 ? false : _options$fixed,\n      _options$popperConfig = _options.popperConfig,\n      popperConfig = _options$popperConfig === void 0 ? {} : _options$popperConfig,\n      _options$usePopper = _options.usePopper,\n      shouldUsePopper = _options$usePopper === void 0 ? !!context : _options$usePopper;\n  var show = (context == null ? void 0 : context.show) == null ? !!options.show : context.show;\n  var alignEnd = (context == null ? void 0 : context.alignEnd) == null ? options.alignEnd : context.alignEnd;\n\n  if (show && !hasShownRef.current) {\n    hasShownRef.current = true;\n  }\n\n  var handleClose = function handleClose(e) {\n    context == null ? void 0 : context.toggle(false, e);\n  };\n\n  var _ref = context || {},\n      drop = _ref.drop,\n      setMenu = _ref.setMenu,\n      menuElement = _ref.menuElement,\n      toggleElement = _ref.toggleElement;\n\n  var placement = alignEnd ? 'bottom-end' : 'bottom-start';\n  if (drop === 'up') placement = alignEnd ? 'top-end' : 'top-start';else if (drop === 'right') placement = alignEnd ? 'right-end' : 'right-start';else if (drop === 'left') placement = alignEnd ? 'left-end' : 'left-start';\n  var popper = usePopper(toggleElement, menuElement, mergeOptionsWithPopperConfig({\n    placement: placement,\n    enabled: !!(shouldUsePopper && show),\n    enableEvents: show,\n    offset: offset,\n    flip: flip,\n    fixed: fixed,\n    arrowElement: arrowElement,\n    popperConfig: popperConfig\n  }));\n\n  var menuProps = _extends({\n    ref: setMenu || noop,\n    'aria-labelledby': toggleElement == null ? void 0 : toggleElement.id\n  }, popper.attributes.popper, {\n    style: popper.styles.popper\n  });\n\n  var metadata = {\n    show: show,\n    alignEnd: alignEnd,\n    hasShown: hasShownRef.current,\n    toggle: context == null ? void 0 : context.toggle,\n    popper: shouldUsePopper ? popper : null,\n    arrowProps: shouldUsePopper ? _extends({\n      ref: attachArrowRef\n    }, popper.attributes.arrow, {\n      style: popper.styles.arrow\n    }) : {}\n  };\n  useRootClose(menuElement, handleClose, {\n    clickTrigger: rootCloseEvent,\n    disabled: !show\n  });\n  return [menuProps, metadata];\n}\nvar propTypes = {\n  /**\n   * A render prop that returns a Menu element. The `props`\n   * argument should spread through to **a component that can accept a ref**.\n   *\n   * @type {Function ({\n   *   show: boolean,\n   *   alignEnd: boolean,\n   *   close: (?SyntheticEvent) => void,\n   *   placement: Placement,\n   *   update: () => void,\n   *   forceUpdate: () => void,\n   *   props: {\n   *     ref: (?HTMLElement) => void,\n   *     style: { [string]: string | number },\n   *     aria-labelledby: ?string\n   *   },\n   *   arrowProps: {\n   *     ref: (?HTMLElement) => void,\n   *     style: { [string]: string | number },\n   *   },\n   * }) => React.Element}\n   */\n  children: PropTypes.func.isRequired,\n\n  /**\n   * Controls the visible state of the menu, generally this is\n   * provided by the parent `Dropdown` component,\n   * but may also be specified as a prop directly.\n   */\n  show: PropTypes.bool,\n\n  /**\n   * Aligns the dropdown menu to the 'end' of it's placement position.\n   * Generally this is provided by the parent `Dropdown` component,\n   * but may also be specified as a prop directly.\n   */\n  alignEnd: PropTypes.bool,\n\n  /**\n   * Enables the Popper.js `flip` modifier, allowing the Dropdown to\n   * automatically adjust it's placement in case of overlap with the viewport or toggle.\n   * Refer to the [flip docs](https://popper.js.org/popper-documentation.html#modifiers..flip.enabled) for more info\n   */\n  flip: PropTypes.bool,\n  usePopper: PropTypes.oneOf([true, false]),\n\n  /**\n   * A set of popper options and props passed directly to react-popper's Popper component.\n   */\n  popperConfig: PropTypes.object,\n\n  /**\n   * Override the default event used by RootCloseWrapper.\n   */\n  rootCloseEvent: PropTypes.string\n};\nvar defaultProps = {\n  usePopper: true\n};\n\n/**\n * Also exported as `<Dropdown.Menu>` from `Dropdown`.\n *\n * @displayName DropdownMenu\n * @memberOf Dropdown\n */\nfunction DropdownMenu(_ref2) {\n  var children = _ref2.children,\n      options = _objectWithoutPropertiesLoose(_ref2, [\"children\"]);\n\n  var _useDropdownMenu = useDropdownMenu(options),\n      props = _useDropdownMenu[0],\n      meta = _useDropdownMenu[1];\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, meta.hasShown ? children(props, meta) : null);\n}\n\nDropdownMenu.displayName = 'ReactOverlaysDropdownMenu';\nDropdownMenu.propTypes = propTypes;\nDropdownMenu.defaultProps = defaultProps;\n/** @component */\n\nexport default DropdownMenu;","import PropTypes from 'prop-types';\nimport React, { useContext, useCallback } from 'react';\nimport DropdownContext from './DropdownContext';\n\nvar noop = function noop() {};\n/**\n * Wires up Dropdown toggle functionality, returning a set a props to attach\n * to the element that functions as the dropdown toggle (generally a button).\n *\n * @memberOf Dropdown\n */\n\n\nexport function useDropdownToggle() {\n  var _ref = useContext(DropdownContext) || {},\n      _ref$show = _ref.show,\n      show = _ref$show === void 0 ? false : _ref$show,\n      _ref$toggle = _ref.toggle,\n      toggle = _ref$toggle === void 0 ? noop : _ref$toggle,\n      setToggle = _ref.setToggle;\n\n  var handleClick = useCallback(function (e) {\n    toggle(!show, e);\n  }, [show, toggle]);\n  return [{\n    ref: setToggle || noop,\n    onClick: handleClick,\n    'aria-haspopup': true,\n    'aria-expanded': !!show\n  }, {\n    show: show,\n    toggle: toggle\n  }];\n}\nvar propTypes = {\n  /**\n   * A render prop that returns a Toggle element. The `props`\n   * argument should spread through to **a component that can accept a ref**. Use\n   * the `onToggle` argument to toggle the menu open or closed\n   *\n   * @type {Function ({\n   *   show: boolean,\n   *   toggle: (show: boolean) => void,\n   *   props: {\n   *     ref: (?HTMLElement) => void,\n   *     aria-haspopup: true\n   *     aria-expanded: boolean\n   *   },\n   * }) => React.Element}\n   */\n  children: PropTypes.func.isRequired\n};\n\n/**\n * Also exported as `<Dropdown.Toggle>` from `Dropdown`.\n *\n * @displayName DropdownToggle\n * @memberOf Dropdown\n */\nfunction DropdownToggle(_ref2) {\n  var children = _ref2.children;\n\n  var _useDropdownToggle = useDropdownToggle(),\n      props = _useDropdownToggle[0],\n      meta = _useDropdownToggle[1];\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, children(props, meta));\n}\n\nDropdownToggle.displayName = 'ReactOverlaysDropdownToggle';\nDropdownToggle.propTypes = propTypes;\n/** @component */\n\nexport default DropdownToggle;","import matches from 'dom-helpers/matches';\nimport qsa from 'dom-helpers/querySelectorAll';\nimport addEventListener from 'dom-helpers/addEventListener';\nimport React, { useCallback, useRef, useEffect, useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport { useUncontrolledProp } from 'uncontrollable';\nimport usePrevious from '@restart/hooks/usePrevious';\nimport useForceUpdate from '@restart/hooks/useForceUpdate';\nimport useGlobalListener from '@restart/hooks/useGlobalListener';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport DropdownContext from './DropdownContext';\nimport DropdownMenu from './DropdownMenu';\nimport DropdownToggle from './DropdownToggle';\nvar propTypes = {\n  /**\n   * A render prop that returns the root dropdown element. The `props`\n   * argument should spread through to an element containing _both_ the\n   * menu and toggle in order to handle keyboard events for focus management.\n   *\n   * @type {Function ({\n   *   props: {\n   *     onKeyDown: (SyntheticEvent) => void,\n   *   },\n   * }) => React.Element}\n   */\n  children: PropTypes.node,\n\n  /**\n   * Determines the direction and location of the Menu in relation to it's Toggle.\n   */\n  drop: PropTypes.oneOf(['up', 'left', 'right', 'down']),\n\n  /**\n   * Controls the focus behavior for when the Dropdown is opened. Set to\n   * `true` to always focus the first menu item, `keyboard` to focus only when\n   * navigating via the keyboard, or `false` to disable completely\n   *\n   * The Default behavior is `false` **unless** the Menu has a `role=\"menu\"`\n   * where it will default to `keyboard` to match the recommended [ARIA Authoring practices](https://www.w3.org/TR/wai-aria-practices-1.1/#menubutton).\n   */\n  focusFirstItemOnShow: PropTypes.oneOf([false, true, 'keyboard']),\n\n  /**\n   * A css slector string that will return __focusable__ menu items.\n   * Selectors should be relative to the menu component:\n   * e.g. ` > li:not('.disabled')`\n   */\n  itemSelector: PropTypes.string,\n\n  /**\n   * Align the menu to the 'end' side of the placement side of the Dropdown toggle. The default placement is `top-start` or `bottom-start`.\n   */\n  alignEnd: PropTypes.bool,\n\n  /**\n   * Whether or not the Dropdown is visible.\n   *\n   * @controllable onToggle\n   */\n  show: PropTypes.bool,\n\n  /**\n   * Sets the initial show position of the Dropdown.\n   */\n  defaultShow: PropTypes.bool,\n\n  /**\n   * A callback fired when the Dropdown wishes to change visibility. Called with the requested\n   * `show` value, the DOM event, and the source that fired it: `'click'`,`'keydown'`,`'rootClose'`, or `'select'`.\n   *\n   * ```ts static\n   * function(\n   *   isOpen: boolean,\n   *   event: SyntheticEvent,\n   * ): void\n   * ```\n   *\n   * @controllable show\n   */\n  onToggle: PropTypes.func\n};\n\nfunction useRefWithUpdate() {\n  var forceUpdate = useForceUpdate();\n  var ref = useRef(null);\n  var attachRef = useCallback(function (element) {\n    ref.current = element; // ensure that a menu set triggers an update for consumers\n\n    forceUpdate();\n  }, [forceUpdate]);\n  return [ref, attachRef];\n}\n/**\n * @displayName Dropdown\n * @public\n */\n\n\nfunction Dropdown(_ref) {\n  var drop = _ref.drop,\n      alignEnd = _ref.alignEnd,\n      defaultShow = _ref.defaultShow,\n      rawShow = _ref.show,\n      rawOnToggle = _ref.onToggle,\n      _ref$itemSelector = _ref.itemSelector,\n      itemSelector = _ref$itemSelector === void 0 ? '* > *' : _ref$itemSelector,\n      focusFirstItemOnShow = _ref.focusFirstItemOnShow,\n      children = _ref.children;\n\n  var _useUncontrolledProp = useUncontrolledProp(rawShow, defaultShow, rawOnToggle),\n      show = _useUncontrolledProp[0],\n      onToggle = _useUncontrolledProp[1]; // We use normal refs instead of useCallbackRef in order to populate the\n  // the value as quickly as possible, otherwise the effect to focus the element\n  // may run before the state value is set\n\n\n  var _useRefWithUpdate = useRefWithUpdate(),\n      menuRef = _useRefWithUpdate[0],\n      setMenu = _useRefWithUpdate[1];\n\n  var menuElement = menuRef.current;\n\n  var _useRefWithUpdate2 = useRefWithUpdate(),\n      toggleRef = _useRefWithUpdate2[0],\n      setToggle = _useRefWithUpdate2[1];\n\n  var toggleElement = toggleRef.current;\n  var lastShow = usePrevious(show);\n  var lastSourceEvent = useRef(null);\n  var focusInDropdown = useRef(false);\n  var toggle = useCallback(function (nextShow, event) {\n    onToggle(nextShow, event);\n  }, [onToggle]);\n  var context = useMemo(function () {\n    return {\n      toggle: toggle,\n      drop: drop,\n      show: show,\n      alignEnd: alignEnd,\n      menuElement: menuElement,\n      toggleElement: toggleElement,\n      setMenu: setMenu,\n      setToggle: setToggle\n    };\n  }, [toggle, drop, show, alignEnd, menuElement, toggleElement, setMenu, setToggle]);\n\n  if (menuElement && lastShow && !show) {\n    focusInDropdown.current = menuElement.contains(document.activeElement);\n  }\n\n  var focusToggle = useEventCallback(function () {\n    if (toggleElement && toggleElement.focus) {\n      toggleElement.focus();\n    }\n  });\n  var maybeFocusFirst = useEventCallback(function () {\n    var type = lastSourceEvent.current;\n    var focusType = focusFirstItemOnShow;\n\n    if (focusType == null) {\n      focusType = menuRef.current && matches(menuRef.current, '[role=menu]') ? 'keyboard' : false;\n    }\n\n    if (focusType === false || focusType === 'keyboard' && !/^key.+$/.test(type)) {\n      return;\n    }\n\n    var first = qsa(menuRef.current, itemSelector)[0];\n    if (first && first.focus) first.focus();\n  });\n  useEffect(function () {\n    if (show) maybeFocusFirst();else if (focusInDropdown.current) {\n      focusInDropdown.current = false;\n      focusToggle();\n    } // only `show` should be changing\n  }, [show, focusInDropdown, focusToggle, maybeFocusFirst]);\n  useEffect(function () {\n    lastSourceEvent.current = null;\n  });\n\n  var getNextFocusedChild = function getNextFocusedChild(current, offset) {\n    if (!menuRef.current) return null;\n    var items = qsa(menuRef.current, itemSelector);\n    var index = items.indexOf(current) + offset;\n    index = Math.max(0, Math.min(index, items.length));\n    return items[index];\n  };\n\n  useGlobalListener('keydown', function (event) {\n    var _menuRef$current, _toggleRef$current;\n\n    var key = event.key;\n    var target = event.target;\n    var fromMenu = (_menuRef$current = menuRef.current) == null ? void 0 : _menuRef$current.contains(target);\n    var fromToggle = (_toggleRef$current = toggleRef.current) == null ? void 0 : _toggleRef$current.contains(target); // Second only to https://github.com/twbs/bootstrap/blob/8cfbf6933b8a0146ac3fbc369f19e520bd1ebdac/js/src/dropdown.js#L400\n    // in inscrutability\n\n    var isInput = /input|textarea/i.test(target.tagName);\n\n    if (isInput && (key === ' ' || key !== 'Escape' && fromMenu)) {\n      return;\n    }\n\n    if (!fromMenu && !fromToggle) {\n      return;\n    }\n\n    if (!menuRef.current && key === 'Tab') {\n      return;\n    }\n\n    lastSourceEvent.current = event.type;\n\n    switch (key) {\n      case 'ArrowUp':\n        {\n          var next = getNextFocusedChild(target, -1);\n          if (next && next.focus) next.focus();\n          event.preventDefault();\n          return;\n        }\n\n      case 'ArrowDown':\n        event.preventDefault();\n\n        if (!show) {\n          onToggle(true, event);\n        } else {\n          var _next = getNextFocusedChild(target, 1);\n\n          if (_next && _next.focus) _next.focus();\n        }\n\n        return;\n\n      case 'Tab':\n        // on keydown the target is the element being tabbed FROM, we need that\n        // to know if this event is relevant to this dropdown (e.g. in this menu).\n        // On `keyup` the target is the element being tagged TO which we use to check\n        // if focus has left the menu\n        addEventListener(document, 'keyup', function (e) {\n          var _menuRef$current2;\n\n          if (e.key === 'Tab' && !e.target || !((_menuRef$current2 = menuRef.current) != null && _menuRef$current2.contains(e.target))) {\n            onToggle(false, event);\n          }\n        }, {\n          once: true\n        });\n        break;\n\n      case 'Escape':\n        event.preventDefault();\n        event.stopPropagation();\n        onToggle(false, event);\n        break;\n\n      default:\n    }\n  });\n  return /*#__PURE__*/React.createElement(DropdownContext.Provider, {\n    value: context\n  }, children);\n}\n\nDropdown.displayName = 'ReactOverlaysDropdown';\nDropdown.propTypes = propTypes;\nDropdown.Menu = DropdownMenu;\nDropdown.Toggle = DropdownToggle;\nexport default Dropdown;","import React from 'react'; // TODO: check this\n\nvar NavContext = /*#__PURE__*/React.createContext(null);\nNavContext.displayName = 'NavContext';\nexport default NavContext;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"bsPrefix\", \"className\", \"children\", \"eventKey\", \"disabled\", \"href\", \"onClick\", \"onSelect\", \"active\", \"as\"];\nimport classNames from 'classnames';\nimport React, { useContext } from 'react';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport SelectableContext, { makeEventKey } from './SelectableContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport NavContext from './NavContext';\nimport SafeAnchor from './SafeAnchor';\nvar defaultProps = {\n  as: SafeAnchor,\n  disabled: false\n};\nvar DropdownItem = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      children = _ref.children,\n      eventKey = _ref.eventKey,\n      disabled = _ref.disabled,\n      href = _ref.href,\n      onClick = _ref.onClick,\n      onSelect = _ref.onSelect,\n      propActive = _ref.active,\n      Component = _ref.as,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'dropdown-item');\n  var onSelectCtx = useContext(SelectableContext);\n  var navContext = useContext(NavContext);\n\n  var _ref2 = navContext || {},\n      activeKey = _ref2.activeKey;\n\n  var key = makeEventKey(eventKey, href);\n  var active = propActive == null && key != null ? makeEventKey(activeKey) === key : propActive;\n  var handleClick = useEventCallback(function (event) {\n    // SafeAnchor handles the disabled case, but we handle it here\n    // for other components\n    if (disabled) return;\n    if (onClick) onClick(event);\n    if (onSelectCtx) onSelectCtx(key, event);\n    if (onSelect) onSelect(key, event);\n  });\n  return (\n    /*#__PURE__*/\n    // \"TS2604: JSX element type 'Component' does not have any construct or call signatures.\"\n    // @ts-ignore\n    React.createElement(Component, _extends({}, props, {\n      ref: ref,\n      href: href,\n      disabled: disabled,\n      className: classNames(className, prefix, active && 'active', disabled && 'disabled'),\n      onClick: handleClick\n    }), children)\n  );\n});\nDropdownItem.displayName = 'DropdownItem';\nDropdownItem.defaultProps = defaultProps;\nexport default DropdownItem;","import React from 'react'; // TODO: check\n\nvar context = /*#__PURE__*/React.createContext(null);\ncontext.displayName = 'NavbarContext';\nexport default context;","import invariant from 'invariant';\nimport { useCallback } from 'react';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nexport default function useWrappedRefWithWarning(ref, componentName) {\n  // @ts-ignore\n  if (!(process.env.NODE_ENV !== \"production\")) return ref; // eslint-disable-next-line react-hooks/rules-of-hooks\n\n  var warningRef = useCallback(function (refValue) {\n    !(refValue == null || !refValue.isReactComponent) ? process.env.NODE_ENV !== \"production\" ? invariant(false, componentName + \" injected a ref to a provided `as` component that resolved to a component instance instead of a DOM element. \" + 'Use `React.forwardRef` to provide the injected ref to the class component as a prop in order to pass it directly to a DOM element') : invariant(false) : void 0;\n  }, [componentName]); // eslint-disable-next-line react-hooks/rules-of-hooks\n\n  return useMergedRefs(warningRef, ref);\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"bsPrefix\", \"className\", \"align\", \"alignRight\", \"rootCloseEvent\", \"flip\", \"show\", \"renderOnMount\", \"as\", \"popperConfig\"];\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React, { useContext } from 'react';\nimport { useDropdownMenu } from 'react-overlays/DropdownMenu';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nimport warning from 'warning';\nimport NavbarContext from './NavbarContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport useWrappedRefWithWarning from './useWrappedRefWithWarning';\nimport usePopperMarginModifiers from './usePopperMarginModifiers';\nvar alignDirection = PropTypes.oneOf(['left', 'right']);\nexport var alignPropType = PropTypes.oneOfType([alignDirection, PropTypes.shape({\n  sm: alignDirection\n}), PropTypes.shape({\n  md: alignDirection\n}), PropTypes.shape({\n  lg: alignDirection\n}), PropTypes.shape({\n  xl: alignDirection\n})]);\nvar defaultProps = {\n  align: 'left',\n  alignRight: false,\n  flip: true\n};\nvar DropdownMenu = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      align = _ref.align,\n      alignRight = _ref.alignRight,\n      rootCloseEvent = _ref.rootCloseEvent,\n      flip = _ref.flip,\n      showProps = _ref.show,\n      renderOnMount = _ref.renderOnMount,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      popperConfig = _ref.popperConfig,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  var isNavbar = useContext(NavbarContext);\n  var prefix = useBootstrapPrefix(bsPrefix, 'dropdown-menu');\n\n  var _usePopperMarginModif = usePopperMarginModifiers(),\n      popperRef = _usePopperMarginModif[0],\n      marginModifiers = _usePopperMarginModif[1];\n\n  var alignClasses = [];\n\n  if (align) {\n    if (typeof align === 'object') {\n      var keys = Object.keys(align);\n      process.env.NODE_ENV !== \"production\" ? warning(keys.length === 1, 'There should only be 1 breakpoint when passing an object to `align`') : void 0;\n\n      if (keys.length) {\n        var brkPoint = keys[0];\n        var direction = align[brkPoint]; // .dropdown-menu-right is required for responsively aligning\n        // left in addition to align left classes.\n        // Reuse alignRight to toggle the class below.\n\n        alignRight = direction === 'left';\n        alignClasses.push(prefix + \"-\" + brkPoint + \"-\" + direction);\n      }\n    } else if (align === 'right') {\n      alignRight = true;\n    }\n  }\n\n  var _useDropdownMenu = useDropdownMenu({\n    flip: flip,\n    rootCloseEvent: rootCloseEvent,\n    show: showProps,\n    alignEnd: alignRight,\n    usePopper: !isNavbar && alignClasses.length === 0,\n    popperConfig: _extends({}, popperConfig, {\n      modifiers: marginModifiers.concat((popperConfig == null ? void 0 : popperConfig.modifiers) || [])\n    })\n  }),\n      menuProps = _useDropdownMenu[0],\n      _useDropdownMenu$ = _useDropdownMenu[1],\n      hasShown = _useDropdownMenu$.hasShown,\n      popper = _useDropdownMenu$.popper,\n      show = _useDropdownMenu$.show,\n      alignEnd = _useDropdownMenu$.alignEnd,\n      toggle = _useDropdownMenu$.toggle;\n\n  menuProps.ref = useMergedRefs(popperRef, useMergedRefs(useWrappedRefWithWarning(ref, 'DropdownMenu'), menuProps.ref));\n  if (!hasShown && !renderOnMount) return null; // For custom components provide additional, non-DOM, props;\n\n  if (typeof Component !== 'string') {\n    menuProps.show = show;\n\n    menuProps.close = function () {\n      return toggle == null ? void 0 : toggle(false);\n    };\n\n    menuProps.alignRight = alignEnd;\n  }\n\n  var style = props.style;\n\n  if (popper != null && popper.placement) {\n    // we don't need the default popper style,\n    // menus are display: none when not shown.\n    style = _extends({}, props.style, menuProps.style);\n    props['x-placement'] = popper.placement;\n  }\n\n  return /*#__PURE__*/React.createElement(Component, _extends({}, props, menuProps, {\n    style: style,\n    className: classNames.apply(void 0, [className, prefix, show && 'show', alignEnd && prefix + \"-right\"].concat(alignClasses))\n  }));\n});\nDropdownMenu.displayName = 'DropdownMenu';\nDropdownMenu.defaultProps = defaultProps;\nexport default DropdownMenu;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"bsPrefix\", \"split\", \"className\", \"childBsPrefix\", \"as\"];\nimport classNames from 'classnames';\nimport isRequiredForA11y from 'prop-types-extra/lib/isRequiredForA11y';\nimport React from 'react';\nimport { useDropdownToggle } from 'react-overlays/DropdownToggle';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nimport Button from './Button';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport useWrappedRefWithWarning from './useWrappedRefWithWarning';\nvar DropdownToggle = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      split = _ref.split,\n      className = _ref.className,\n      childBsPrefix = _ref.childBsPrefix,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? Button : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'dropdown-toggle');\n\n  if (childBsPrefix !== undefined) {\n    props.bsPrefix = childBsPrefix;\n  }\n\n  var _useDropdownToggle = useDropdownToggle(),\n      toggleProps = _useDropdownToggle[0];\n\n  toggleProps.ref = useMergedRefs(toggleProps.ref, useWrappedRefWithWarning(ref, 'DropdownToggle')); // This intentionally forwards size and variant (if set) to the\n  // underlying component, to allow it to render size and style variants.\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: classNames(className, prefix, split && prefix + \"-split\")\n  }, toggleProps, props));\n});\nDropdownToggle.displayName = 'DropdownToggle';\nexport default DropdownToggle;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"bsPrefix\", \"drop\", \"show\", \"className\", \"alignRight\", \"onSelect\", \"onToggle\", \"focusFirstItemOnShow\", \"as\", \"navbar\"];\nimport classNames from 'classnames';\nimport React, { useContext } from 'react';\nimport BaseDropdown from 'react-overlays/Dropdown';\nimport { useUncontrolled } from 'uncontrollable';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport DropdownItem from './DropdownItem';\nimport DropdownMenu from './DropdownMenu';\nimport DropdownToggle from './DropdownToggle';\nimport SelectableContext from './SelectableContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport createWithBsPrefix from './createWithBsPrefix';\nvar DropdownHeader = createWithBsPrefix('dropdown-header', {\n  defaultProps: {\n    role: 'heading'\n  }\n});\nvar DropdownDivider = createWithBsPrefix('dropdown-divider', {\n  defaultProps: {\n    role: 'separator'\n  }\n});\nvar DropdownItemText = createWithBsPrefix('dropdown-item-text', {\n  Component: 'span'\n});\nvar defaultProps = {\n  navbar: false\n};\nvar Dropdown = /*#__PURE__*/React.forwardRef(function (pProps, ref) {\n  var _useUncontrolled = useUncontrolled(pProps, {\n    show: 'onToggle'\n  }),\n      bsPrefix = _useUncontrolled.bsPrefix,\n      drop = _useUncontrolled.drop,\n      show = _useUncontrolled.show,\n      className = _useUncontrolled.className,\n      alignRight = _useUncontrolled.alignRight,\n      onSelect = _useUncontrolled.onSelect,\n      onToggle = _useUncontrolled.onToggle,\n      focusFirstItemOnShow = _useUncontrolled.focusFirstItemOnShow,\n      _useUncontrolled$as = _useUncontrolled.as,\n      Component = _useUncontrolled$as === void 0 ? 'div' : _useUncontrolled$as,\n      _4 = _useUncontrolled.navbar,\n      props = _objectWithoutPropertiesLoose(_useUncontrolled, _excluded);\n\n  var onSelectCtx = useContext(SelectableContext);\n  var prefix = useBootstrapPrefix(bsPrefix, 'dropdown');\n  var handleToggle = useEventCallback(function (nextShow, event, source) {\n    if (source === void 0) {\n      source = event.type;\n    }\n\n    if (event.currentTarget === document && (source !== 'keydown' || event.key === 'Escape')) source = 'rootClose';\n\n    if (onToggle) {\n      onToggle(nextShow, event, {\n        source: source\n      });\n    }\n  });\n  var handleSelect = useEventCallback(function (key, event) {\n    if (onSelectCtx) onSelectCtx(key, event);\n    if (onSelect) onSelect(key, event);\n    handleToggle(false, event, 'select');\n  });\n  return /*#__PURE__*/React.createElement(SelectableContext.Provider, {\n    value: handleSelect\n  }, /*#__PURE__*/React.createElement(BaseDropdown, {\n    drop: drop,\n    show: show,\n    alignEnd: alignRight,\n    onToggle: handleToggle,\n    focusFirstItemOnShow: focusFirstItemOnShow,\n    itemSelector: \".\" + prefix + \"-item:not(.disabled):not(:disabled)\"\n  }, /*#__PURE__*/React.createElement(Component, _extends({}, props, {\n    ref: ref,\n    className: classNames(className, show && 'show', (!drop || drop === 'down') && prefix, drop === 'up' && 'dropup', drop === 'right' && 'dropright', drop === 'left' && 'dropleft')\n  }))));\n});\nDropdown.displayName = 'Dropdown';\nDropdown.defaultProps = defaultProps;\nDropdown.Divider = DropdownDivider;\nDropdown.Header = DropdownHeader;\nDropdown.Item = DropdownItem;\nDropdown.ItemText = DropdownItemText;\nDropdown.Menu = DropdownMenu;\nDropdown.Toggle = DropdownToggle;\nexport default Dropdown;"],"names":["React","useEffect","useCallback","noop","options","context","useContext","DropdownContext","_useCallbackRef","useCallbackRef","arrowElement","attachArrowRef","hasShownRef","useRef","_options","flip","offset","rootCloseEvent","_options$fixed","fixed","_options$popperConfig","popperConfig","_options$usePopper","usePopper","shouldUsePopper","show","alignEnd","current","handleClose","e","toggle","_ref","drop","setMenu","menuElement","toggleElement","placement","popper","mergeOptionsWithPopperConfig","enabled","enableEvents","menuProps","_extends","ref","id","attributes","style","styles","metadata","hasShown","arrowProps","arrow","useRootClose","clickTrigger","disabled","propTypes","children","PropTypes","func","isRequired","bool","oneOf","object","string","defaultProps","_ref2","_objectWithoutPropertiesLoose","_useDropdownMenu","useDropdownMenu","props","meta","_jsx","_Fragment","DropdownMenu","displayName","_ref$show","_ref$toggle","setToggle","handleClick","onClick","_useDropdownToggle","useDropdownToggle","DropdownToggle","node","focusFirstItemOnShow","itemSelector","defaultShow","onToggle","forceUpdate","useForceUpdate","attachRef","element","rawShow","rawOnToggle","_ref$itemSelector","_useUncontrolledProp","useUncontrolledProp","_useRefWithUpdate","useRefWithUpdate","menuRef","_useRefWithUpdate2","toggleRef","lastShow","usePrevious","lastSourceEvent","focusInDropdown","nextShow","event","useMemo","contains","document","activeElement","focusToggle","useEventCallback","focus","maybeFocusFirst","type","focusType","matches","test","first","qsa","getNextFocusedChild","items","index","indexOf","Math","max","min","length","useGlobalListener","_menuRef$current","_toggleRef$current","key","target","fromMenu","fromToggle","isInput","tagName","next","preventDefault","_next","addEventListener","_menuRef$current2","once","stopPropagation","Dropdown","Menu","Toggle","_excluded","as","SafeAnchor","DropdownItem","forwardRef","bsPrefix","className","eventKey","href","onSelect","propActive","active","Component","prefix","useBootstrapPrefix","onSelectCtx","SelectableContext","navContext","NavContext","activeKey","makeEventKey","classNames","alignDirection","oneOfType","shape","sm","md","lg","xl","align","alignRight","showProps","renderOnMount","_ref$as","isNavbar","NavbarContext","_usePopperMarginModif","usePopperMarginModifiers","popperRef","marginModifiers","alignClasses","keys","Object","brkPoint","direction","push","modifiers","concat","_useDropdownMenu$","useMergedRefs","useWrappedRefWithWarning","close","apply","DropdownHeader","createWithBsPrefix","role","DropdownDivider","DropdownItemText","navbar","pProps","_useUncontrolled","useUncontrolled","_useUncontrolled$as","handleToggle","source","currentTarget","handleSelect","BaseDropdown","Divider","Header","Item","ItemText"],"mappings":"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"}