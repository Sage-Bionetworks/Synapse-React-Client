import{M as a,T as r,aP as o,aQ as m,aR as f,aA as y,aS as A,aT as R,aU as k}from"./index.05d3527e.js";import{u as g}from"./useMutation.ee241b25.js";import{u as T}from"./useInfiniteQuery.059ba1ba.js";import{e as q}from"./queryKeys.e0d3085f.js";const c="accessRequirement";function C(e,t){const{accessToken:s}=a();return r([c,e],()=>f(s,e),t)}function E(e,t){const{accessToken:s}=a();return r([c,e,"wikiPageKey"],()=>y(s,e),t)}function K(e,t){const{accessToken:s}=a();return r([c,e,"acl"],()=>A(s,e),t)}function x(e,t){const{accessToken:s}=a();return T([c,"search",e],async n=>await k(s,{...e,nextPageToken:n.pageParam}),{...t,getNextPageParam:n=>n.nextPageToken})}function w(e,t){const{accessToken:s}=a();return r([c,"restrictionInformation",e],()=>R(e,s),t)}function G(e){const{accessToken:t}=a(),s=o();return g({...e,mutationFn:n=>m(n,t),mutationKey:["createLockAccessRequirement"],onSuccess:async(n,u,i)=>{if(await s.invalidateQueries([c]),await s.invalidateQueries(q.all),e!=null&&e.onSuccess)return e.onSuccess(n,u,i)}})}export{G as a,C as b,x as c,K as d,E as e,w as u};
