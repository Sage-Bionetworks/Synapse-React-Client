import{r as q,a as y,j as e,F as v}from"./jsx-runtime.aa766aaf.js";import{g as O,p as V}from"./sqlFunctions.9bdc2c6c.js";import{V as D,aT as F}from"./index.0a2c4939.js";import{C as p}from"./ColumnType.744125d2.js";import{a as L}from"./CardContainerLogic.fb6258f8.js";import{S as A}from"./SkeletonTable.e0c4ca45.js";import{a as j}from"./use-deep-compare-effect.esm.7ff43efb.js";import{T as B}from"./Typography.57d7ee2f.js";import{j as P}from"./SynapseConstants.290eab74.js";import"./iframe.bd885096.js";import"./RegularExpressions.3cd69849.js";import"./QueryFilter.aa422047.js";import"./index.2efb6d36.js";import"./Button.c2cc208f.js";import"./styled.2fe8edb9.js";import"./utils.b239c5dc.js";import"./TransitionGroupContext.4c6d8009.js";import"./Alert.f1eda723.js";import"./createWithBsPrefix.2cafb9ec.js";import"./index.35ce73ec.js";import"./isArray.24130e12.js";import"./getEndpoint.bb7ded34.js";import"./Link.d09d0f36.js";import"./Button.d4a39ac2.js";import"./ButtonBase.4c393dc9.js";import"./useGetInfoFromIds.4eb73be0.js";import"./uniq.54fc3048.js";import"./_baseSlice.50189bc5.js";import"./toInteger.36ff5a11.js";import"./isSymbol.36b96d1e.js";import"./_cacheHas.f9705cd4.js";import"./without.33def38b.js";import"./uniqueId.bdc3b93e.js";import"./_Set.f82bf539.js";import"./_setToArray.a82100c8.js";import"./FacetNav.ce0bb6d2.js";import"./queryUtils.4b8af5d0.js";import"./useInfiniteQuery.9a0fe06d.js";import"./queryKeys.e0d3085f.js";import"./cloneDeep.ad6bb155.js";import"./_baseClone.c6c5507c.js";import"./_getTag.416f77c8.js";import"./NoSearchResults.ed7d85d5.js";import"./NoData.4f4cb96e.js";import"./unCamelCase.07e38083.js";import"./useEntity.3fe82088.js";import"./useMutation.c00b8089.js";import"./pick.e97e604b.js";import"./isEqual.5b182270.js";import"./ElementWithTooltip.9e2e3ff2.js";import"./SynapseTableConstants.07ecdebd.js";import"./IconSvg.d73f159f.js";import"./Tooltip.e4334ac7.js";import"./createSvgIcon.d27817df.js";import"./InfoOutlined.548f9119.js";import"./Dropdown.346eb87c.js";import"./usePrevious.82adf379.js";import"./contains.91b3e071.js";import"./usePopperMarginModifiers.77eb36d9.js";import"./hasClass.56fd144a.js";import"./isRequiredForA11y.20ed4857.js";import"./Checkbox.7ee8aada.js";import"./RadioGroup.dbc26deb.js";import"./moment.a565bb48.js";import"./RangeSlider.3c4afffb.js";import"./factory.65c30f6f.js";import"./react-sizeme.738acc05.js";import"./Skeleton.b9cd2726.js";import"./ColorGradient.16f0e0f2.js";import"./colorPalette.8145e2e2.js";import"./LoadingScreen.c4224e86.js";import"./Modal.47c74737.js";import"./inheritsLoose.37c69c63.js";import"./removeClass.27874bcb.js";import"./useWaitForDOMRef.dcf70bcc.js";import"./SelectionCriteriaPill.2ce4cff8.js";import"./Close.da59ddfe.js";import"./react-select.esm.7c42975f.js";import"./Select-54ac8379.esm.d21451eb.js";import"./CustomSelectWidget.036d76f7.js";import"./index.browser.851f0bde.js";import"./UserCard.e95fdc99.js";import"./IconCopy.0f69ca31.js";import"./ToastMessage.167572b3.js";import"./FullWidthAlert.8371c9c1.js";import"./Overlay.70cfa399.js";import"./WarningModal.25805129.js";import"./react-intersection-observer.esm.0c7146a8.js";import"./DateFormatter.b979f188.js";import"./EntityIcon.6506c628.js";import"./core.esm.14729251.js";import"./isEmpty.963ee042.js";import"./union.85080a9c.js";import"./isString.5c25b498.js";import"./useGetDownloadListStatistics.e68dab14.js";import"./QueryCount.4ac97521.js";import"./useGetAccessRequirement.0c595617.js";import"./RestrictionInformation.edfbac5a.js";import"./ManagedACTAccessRequirementStatus.be369a71.js";import"./FileUpload.6c178d44.js";import"./UserSearchBox.61d2cf0f.js";import"./UserOrTeamBadge.bf49a816.js";import"./EntityLink.101d699f.js";import"./SynapseVideo.4652fc0e.js";import"./IconList.c1c0cda3.js";import"./UserCardList.f3efa500.js";import"./times.33cd8aa8.js";const Y=[p.BOOLEAN_LIST,p.DATE_LIST,p.ENTITYID_LIST,p.INTEGER_LIST,p.STRING_LIST],d=({sql:a,searchParams:b,sqlOperator:_,isMarkdown:f=!1,columnLink:s,friendlyValuesMap:w,columnNameIsSectionTitle:T=!1,limit:x})=>{const{accessToken:g}=D(),[m,M]=q.exports.useState(),[h,E]=q.exports.useState();let C=!0;j(()=>(async function(){var r;E(!0);const n=O(b,_),l=V(a),i=await F({partMask:P,concreteType:"org.sagebionetworks.repo.model.table.QueryBundleRequest",entityId:l,query:{sql:a,limit:x,additionalFilters:n}},g);E(!1);const t=(r=i==null?void 0:i.queryResult)==null?void 0:r.queryResults;t?C&&M(t):console.log("SubsectionRowRenderer: Error getting data")}(),()=>{C=!1}),[a,g,b,_]);const R=o=>{if(!w)return o;const n=w[o];return n||o};return y("div",{className:"SubsectionRowRenderer bootstrap-4-backport",children:[h&&e(A,{numRows:2,numCols:1}),!h&&m&&m.rows.length>0&&m.headers.map((o,n)=>s&&o.name==s.linkColumnName?e(v,{}):y("div",{className:"SubsectionRowRenderer__item",role:"table",children:[e(B,{variant:T?"sectionTitle":"subsectionHeader",role:"heading",children:o.name}),T&&e("hr",{}),e("div",{role:"rowgroup",children:m.rows.map((l,N)=>{const c=l.values[n];if(!c)return e(v,{});let i;if(Y.includes(o.columnType))i=JSON.parse(c).map((r,u)=>y("div",{className:"SubsectionRowRenderer__item__value",role:"row",children:[f&&e(L,{markdown:R(r)}),!f&&e("p",{children:R(r)})]},u));else{let t;const r=R(c);if(f)t=e(L,{markdown:r});else if(s&&s.matchColumnName==o.name){const u=m.headers.findIndex(S=>S.name==s.linkColumnName),I=l.values;I.some(S=>S===null)&&console.warn("Row has null value(s) when no nulls expected"),u>-1?t=e("a",{rel:"noopener noreferrer",target:"_blank",href:I[u],children:r}):t=e("p",{children:r})}else t=e("p",{children:r});i=e("div",{className:"SubsectionRowRenderer__item__value",role:"row",children:t},N)}return i})})]},`${n}`))]})},k=d;try{d.displayName="SubsectionRowRenderer",d.__docgenInfo={description:"",displayName:"SubsectionRowRenderer",props:{sql:{defaultValue:null,description:"",name:"sql",required:!0,type:{name:"string"}},isMarkdown:{defaultValue:{value:"false"},description:"",name:"isMarkdown",required:!1,type:{name:"boolean"}},sqlOperator:{defaultValue:null,description:"",name:"sqlOperator",required:!1,type:{name:"enum",value:[{value:'"LIKE"'},{value:'"="'},{value:'"HAS"'}]}},searchParams:{defaultValue:null,description:"",name:"searchParams",required:!1,type:{name:"Record<string, string>"}},columnLink:{defaultValue:null,description:"",name:"columnLink",required:!1,type:{name:"ColumnSpecifiedLink"}},friendlyValuesMap:{defaultValue:null,description:"",name:"friendlyValuesMap",required:!1,type:{name:"FriendlyValuesMap"}},columnNameIsSectionTitle:{defaultValue:{value:"false"},description:"",name:"columnNameIsSectionTitle",required:!1,type:{name:"boolean"}},limit:{defaultValue:null,description:"",name:"limit",required:!1,type:{name:"number"}}}},typeof STORYBOOK_REACT_CLASSES<"u"&&(STORYBOOK_REACT_CLASSES["src/lib/containers/SubsectionRowRenderer.tsx#SubsectionRowRenderer"]={docgenInfo:d.__docgenInfo,name:"SubsectionRowRenderer",path:"src/lib/containers/SubsectionRowRenderer.tsx#SubsectionRowRenderer"})}catch{}const Qr={parameters:{storySource:{source:`import React from 'react'
import { ComponentStory, ComponentMeta } from '@storybook/react'
import SubsectionRowRenderer from './SubsectionRowRenderer'

export default {
  title: 'Explore/SubsectionRowRenderer',
  component: SubsectionRowRenderer,
} as ComponentMeta<typeof SubsectionRowRenderer>

const Template: ComponentStory<typeof SubsectionRowRenderer> = args => (
  <SubsectionRowRenderer {...args} />
)

export const Demo = Template.bind({})
Demo.args = {
  sql: 'SELECT funderName as "Funding Agency" FROM syn26344829',
  searchParams: { Resource_id: '844b598c-0171-4972-91c3-27aa21b45d52' },
  isMarkdown: false,
}
`,locationsMap:{demo:{startLoc:{col:63,line:10},endLoc:{col:1,line:12},startBody:{col:63,line:10},endBody:{col:1,line:12}}}}},title:"Explore/SubsectionRowRenderer",component:k},K=a=>e(k,{...a}),Q=K.bind({});Q.args={sql:'SELECT funderName as "Funding Agency" FROM syn26344829',searchParams:{Resource_id:"844b598c-0171-4972-91c3-27aa21b45d52"},isMarkdown:!1};const Ur=["Demo"];export{Q as Demo,Ur as __namedExportsOrder,Qr as default};
