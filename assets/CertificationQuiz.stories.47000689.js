import{r as m,R as k,a as n,j as i,F as g}from"./jsx-runtime.f5d212d1.js";import{V as E,a9 as N,bO as O,bP as B}from"./index.a70ddfd8.js";import{d}from"./ToastMessage.276b1811.js";import{M as L}from"./CardContainerLogic.22dda770.js";import{T as u}from"./Typography.513a1f2d.js";import{L as M}from"./Link.3fccb4a8.js";import{B as x}from"./Button.25b7a851.js";import{H as _}from"./IconSvg.379fb95f.js";import"./iframe.89bb5feb.js";import"./index.9c9305ea.js";import"./SynapseConstants.290eab74.js";import"./Button.8170df20.js";import"./styled.f405056b.js";import"./utils.0b8153da.js";import"./TransitionGroupContext.7656eb12.js";import"./useTheme.e9ed9b1c.js";import"./Alert.257c6bb8.js";import"./hook.70591bc2.js";import"./createWithBsPrefix.91f140d5.js";import"./divWithClassName.5b1e6cb1.js";import"./index.35ce73ec.js";import"./isArray.b1617f44.js";import"./getEndpoint.bb7ded34.js";import"./FullWidthAlert.c92729a8.js";import"./Tooltip.b3e9245c.js";import"./createSvgIcon.2626c7dc.js";import"./removeClass.27874bcb.js";import"./hasClass.56fd144a.js";import"./uniqueId.7666cadc.js";import"./isSymbol.4571438c.js";import"./sqlFunctions.0d8a440a.js";import"./RegularExpressions.3cd69849.js";import"./QueryFilter.15395a8e.js";import"./useGetInfoFromIds.65649506.js";import"./use-deep-compare-effect.esm.01e563cf.js";import"./uniq.6211bca0.js";import"./_baseSlice.50189bc5.js";import"./toInteger.66a06a81.js";import"./_cacheHas.30de5535.js";import"./without.4bc104a5.js";import"./_Set.90191ba0.js";import"./_setToArray.a82100c8.js";import"./ColumnType.744125d2.js";import"./FacetNav.4ab26323.js";import"./queryUtils.0b669d66.js";import"./useInfiniteQuery.e08bd0cb.js";import"./queryKeys.e0d3085f.js";import"./cloneDeep.cdc6b63c.js";import"./_baseClone.f08117cf.js";import"./_getTag.3dcbc9d3.js";import"./NoSearchResults.ad7e4660.js";import"./NoData.ec1f63e9.js";import"./unCamelCase.07e38083.js";import"./useEntity.b34206e4.js";import"./useMutation.cf0389fb.js";import"./pick.42efd8de.js";import"./isEqual.4e266751.js";import"./ElementWithTooltip.4d688dc9.js";import"./SynapseTableConstants.07ecdebd.js";import"./Dropdown.913e2bbd.js";import"./usePrevious.1e019527.js";import"./contains.ea465217.js";import"./usePopperMarginModifiers.35995d93.js";import"./isRequiredForA11y.20ed4857.js";import"./Checkbox.aa087756.js";import"./RadioGroup.1044ef08.js";import"./dayjs.min.cec940d1.js";import"./RangeSlider.4626f0f7.js";import"./factory.89112c6a.js";import"./react-sizeme.198cf4ef.js";import"./Skeleton.f056e7cd.js";import"./emotion-react.browser.esm.6d1cbddb.js";import"./ColorGradient.16f0e0f2.js";import"./colorPalette.8145e2e2.js";import"./LoadingScreen.08b51276.js";import"./Modal.4d1b1cfd.js";import"./inheritsLoose.6f21ccd9.js";import"./useWaitForDOMRef.e98911da.js";import"./InfoOutlined.1ca50192.js";import"./SelectionCriteriaPill.fc8715f2.js";import"./Close.13308156.js";import"./react-select.esm.53fc7918.js";import"./Select-54ac8379.esm.b455933c.js";import"./CustomSelectWidget.794351ea.js";import"./index.browser.49922a6a.js";import"./UserCard.ecc0d7d9.js";import"./IconCopy.2e6c109a.js";import"./SkeletonTable.0d96f34c.js";import"./times.3c390ae7.js";import"./Overlay.9ab1c420.js";import"./WarningModal.c5980f0a.js";import"./react-intersection-observer.esm.4e900592.js";import"./DateFormatter.5d346bec.js";import"./utc.c9b2619e.js";import"./EntityIcon.55f24a87.js";import"./core.esm.5f2a8c9d.js";import"./isEmpty.b089c1ff.js";import"./union.c830eef2.js";import"./isString.a83352a5.js";import"./relativeTime.6d8f84b5.js";import"./useGetDownloadListStatistics.69dc0d50.js";import"./QueryCount.78565120.js";import"./useGetAccessRequirement.727ec4cc.js";import"./RestrictionInformation.edfbac5a.js";import"./ManagedACTAccessRequirementStatus.be369a71.js";import"./FileUpload.bb85c47f.js";import"./UserSearchBox.8ce39971.js";import"./UserOrTeamBadge.4a4f6dfb.js";import"./EntityLink.13c84750.js";import"./ButtonBase.5d7dfd7c.js";import"./SynapseVideo.ffab6e8c.js";import"./IconList.6319a730.js";import"./UserCardList.4517f10a.js";const H="org.sagebionetworks.repo.model.quiz.MultichoiceResponse",c=()=>{const{accessToken:p}=E(),Q=N(),[o,T]=m.exports.useState(),[l,f]=m.exports.useState([]),[r,h]=m.exports.useState(),C=k.useRef(null),S="https://help.synapse.org/docs/Getting-Started.2055471150.html",y=async()=>{try{T(await O(p))}catch(t){Q(t)}};m.exports.useEffect(()=>{y()},[p]);const w=(t,a)=>{const s=[...l.filter(e=>e.questionIndex!==t),{questionIndex:t,answerIndex:[a],concreteType:H}];f(s)},v=()=>{var t;(t=C.current)==null||t.reset(),f([]),h(void 0),y()},R=async()=>{try{if(o&&o.questions.length===l.length){const t={quizId:o.id,questionResponses:l},a=await B(p,t);h(a),window.scrollTo(0,0)}else d("Please answer all of the questions and try again.","warning")}catch(t){d(t.reason,"danger")}},b=t=>t?{content:i(g,{children:"More info"}),closePopoverOnClick:!0,onClick:()=>window.open(t,"_blank"),variant:"primary"}:void 0;return n("div",{className:"bootstrap-4-backport CertificationQuiz",children:[r&&i("div",{children:n(g,{children:[!r.passed&&i("div",{className:"failBanner",children:"Quiz Failed"}),n(u,{variant:"hintText",children:["Score: ",r.score," / ",o==null?void 0:o.questions.length]}),r.passed?d(`You passed the Synapse Certification Quiz on ${r.passedOn}`,"success"):n(u,{variant:"body1",children:["Please review the items shown in red below, and"," ",i(M,{href:"#",onClick:t=>{t.preventDefault(),v()},children:"try again"}),"."]})]})}),n("div",{className:"CertificationQuiz__container",children:[n(x,{onClick:()=>window.open(S,"_blank"),className:"help-button",color:"secondary",variant:"contained",children:[i(_,{className:"HelpButton",style:{marginRight:"4px"}}),"Help"]}),o?i("div",{dangerouslySetInnerHTML:{__html:o.header}}):"",i("form",{ref:C,onSubmit:t=>t.preventDefault(),children:i("ol",{children:o==null?void 0:o.questions.map(t=>{var a,s;return n("li",{role:t.exclusive?"radiogroup":void 0,children:[i("div",{dangerouslySetInnerHTML:{__html:t.prompt},className:r&&((s=(a=r.corrections)==null?void 0:a.find(e=>e.question.questionIndex===t.questionIndex))!=null&&s.isCorrect?"":"incorrectQuestion")}),t.answers.map(e=>n("div",{children:[i("input",{id:`${t.questionIndex}-${e.answerIndex}`,name:`${t.questionIndex}`,type:t.exclusive?"radio":"checkbox",value:e.answerIndex,onClick:I=>w(t.questionIndex,Number(I.currentTarget.value)),disabled:!!r}),i("label",{style:{fontWeight:400},htmlFor:`${t.questionIndex}-${e.answerIndex}`,children:e.prompt})]},`${t.questionIndex}-${e.answerIndex}`)),i(L,{contentProps:{markdown:t.helpText},placement:"right",actionButton:b(t.docLink),showCloseButton:!0,children:n(u,{variant:"hintText",color:"primary",children:[i(_,{className:"HelpButton",style:{marginRight:"4px"}}),"Need help answering this question?"]})})]},t.questionIndex)})})}),!r&&i(x,{className:"help-button",color:"primary",variant:"contained",size:"large",onClick:()=>R(),children:"Submit"})]})]})},z=c;try{c.displayName="CertificationQuiz",c.__docgenInfo={description:"",displayName:"CertificationQuiz",props:{}},typeof STORYBOOK_REACT_CLASSES<"u"&&(STORYBOOK_REACT_CLASSES["src/lib/containers/CertificationQuiz.tsx#CertificationQuiz"]={docgenInfo:c.__docgenInfo,name:"CertificationQuiz",path:"src/lib/containers/CertificationQuiz.tsx#CertificationQuiz"})}catch{}const Yi={parameters:{storySource:{source:`import React from 'react'
import { ComponentStory, ComponentMeta } from '@storybook/react'

import CertificationQuiz from './CertificationQuiz'

export default {
  title: 'Synapse/CertificationQuiz',
  component: CertificationQuiz,
  argTypes: {},
} as ComponentMeta<typeof CertificationQuiz>

const Template: ComponentStory<typeof CertificationQuiz> = args => (
  <CertificationQuiz {...args} />
)

export const CertificationQuizDemo = Template.bind({})
CertificationQuizDemo.args = {}
`,locationsMap:{"certification-quiz-demo":{startLoc:{col:59,line:12},endLoc:{col:1,line:14},startBody:{col:59,line:12},endBody:{col:1,line:14}}}}},title:"Synapse/CertificationQuiz",component:z,argTypes:{}},P=p=>i(z,{...p}),$=P.bind({});$.args={};const ji=["CertificationQuizDemo"];export{$ as CertificationQuizDemo,ji as __namedExportsOrder,Yi as default};
