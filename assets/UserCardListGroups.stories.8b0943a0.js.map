{"version":3,"file":"UserCardListGroups.stories.8b0943a0.js","sources":["../../src/lib/containers/home_page/people/UserCardListGroups.Mobile.tsx","../../src/lib/containers/home_page/people/UserCardListGroups.Desktop.tsx","../../src/lib/containers/home_page/people/UserCardListGroups.tsx"],"sourcesContent":["import React from 'react'\nimport UserCardListRotate from '../../../containers/UserCardListRotate'\nimport { FacetColumnValuesRequest } from '../../../utils/synapseTypes'\nimport ExpandableContent from '../ExpandableContent'\nimport { UserCardListGroupsProps } from './UserCardListGroups'\n\nexport default function UserCardListGroupsMobile(\n  props: UserCardListGroupsProps,\n) {\n  const { columnName, facetValues, ...rest } = props\n  return (\n    <div>\n      {facetValues?.map((el, curIndex) => {\n        const facetValue = facetValues[curIndex]\n        const selectedFacet: FacetColumnValuesRequest = {\n          columnName,\n          facetValues: [facetValue],\n          concreteType:\n            'org.sagebionetworks.repo.model.table.FacetColumnValuesRequest',\n        }\n        const content = (\n          <UserCardListRotate\n            key={`UserCardListGroup-Mobile-${curIndex}`}\n            {...rest}\n            selectedFacets={[selectedFacet]}\n          />\n        )\n        const title = <> {facetValue} </>\n        return <ExpandableContent title={title} content={content} />\n      })}\n    </div>\n  )\n}\n","import React, { useState } from 'react'\nimport UserCardListRotate from '../../../containers/UserCardListRotate'\nimport { FacetColumnValuesRequest } from '../../../utils/synapseTypes'\nimport { UserCardListGroupsProps } from './UserCardListGroups'\n\nexport default function UserCardListGroupsDesktop(\n  props: UserCardListGroupsProps,\n) {\n  const [selectedGroupIndex, setSelectedGroupIndex] = useState<number>(0)\n  const { columnName, facetValues, ...rest } = props\n  const selectedFacet: FacetColumnValuesRequest = {\n    columnName,\n    facetValues: [facetValues[selectedGroupIndex]],\n    concreteType:\n      'org.sagebionetworks.repo.model.table.FacetColumnValuesRequest',\n  }\n  return (\n    <div className=\"control-container\">\n      <div className=\"button-container\">\n        {facetValues?.map((el, curIndex) => {\n          return (\n            <button\n              className={selectedGroupIndex === curIndex ? 'isSelected' : ''}\n              onClick={() => setSelectedGroupIndex(curIndex)}\n              key={el}\n            >\n              {el}\n            </button>\n          )\n        })}\n        {/* \n              This button keeps the border line in the button container running from top to bottom,\n              it doesn't have any functionality.\n            */}\n        <button className=\"gap-fill\" />\n      </div>\n      <div className=\"content-container\">\n        <UserCardListRotate\n          key={`UserCardListGroup-${selectedGroupIndex}`}\n          {...rest}\n          selectedFacets={[selectedFacet]}\n        />\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport useShowDesktop from '../../../utils/hooks/useShowDesktop'\nimport { UserCardSize } from '../../UserCard'\nimport UserCardListGroupsMobile from './UserCardListGroups.Mobile'\nimport UserCardListGroupsDesktop from './UserCardListGroups.Desktop'\nimport { Button } from 'react-bootstrap'\n\nexport type UserCardListGroupsProps = {\n  sql: string\n  columnName: string\n  facetValues: string[]\n  size: UserCardSize\n  summaryLink?: string\n  summaryLinkText?: string\n  count: number\n  useQueryResultUserData?: boolean\n}\n\nexport default function UserCardListGroups(props: UserCardListGroupsProps) {\n  const { summaryLink, summaryLinkText, ...rest } = props\n  const showDesktop = useShowDesktop()\n  return (\n    <div\n      className={`bootstrap-4-backport UserCardListGroups${\n        showDesktop ? '__Desktop' : ''\n      }`}\n    >\n      <div>\n        {showDesktop ? (\n          <UserCardListGroupsDesktop {...rest} />\n        ) : (\n          <UserCardListGroupsMobile {...rest} />\n        )}\n        {summaryLink && summaryLinkText && (\n          <div className=\"UserCardListGroups__summary\">\n            <Button\n              variant=\"secondary\"\n              size=\"lg\"\n              className=\"pill\"\n              href={summaryLink}\n            >\n              {summaryLinkText}\n            </Button>\n          </div>\n        )}\n      </div>\n    </div>\n  )\n}\n"],"names":["columnName","facetValues","rest","_jsx","_jsxs","_Fragment","el","summaryLink","summaryLinkText"],"mappings":"kqDAMA,WAAA,EAAA,CAGE,KAAA,CAAM,aAAEA,iBAAYC,GAAgBC,EACpC,MAAAC,GAAA,MAAA,CACE,SAAA,iBAAA,IAAA,CAAA,EAAA,IAAA,CAEI,KAAA,GAAA,EAAA,GAOA,EAAAA,EAAA,EAAA,MAGQD,eAAAA,CATR,CAAgD,aAC9CF,YAAAA,CAAAA,CAAAA,EACa,aAAA,+DAEX,CAKIE,CACY,EAAA,4BAAA,GAAA,EAIpB,MAAAC,GAAA,EAAA,CAAO,MADPC,EAAAC,EAAA,CAAc,SAAA,CAAA,IAAA,EAAA,GAAA,CAAA,CAAA,EACY,SAAc,CAAA,CAAxC,EAhBD,CAAA,CAoBN,k0CChCD,KAAA,GAAA,OAAA,MAAA,SAKA,WAAA,EAAA,CAGE,KAAA,CAAA,EAAA,GAAA,EAAA,CAAA,EACA,CAAM,aAAEL,iBAAYC,GAAgBC,EACpC,EAAA,CAAgD,aAC9CF,YAAAA,CAAAA,EAAAA,EAAAA,EACa,aAAA,+DAEX,EAEJ,MAAAI,GAAA,MAAA,CACE,UAAA,oBAAe,SAAA,CAAAA,EAAA,MAAA,CACb,UAAA,mBAAe,SAAA,CAAA,iBAAA,IAAA,CAAA,EAAA,IAEXD,EAAA,SAAA,CACE,UAAA,IAAA,EAAA,aAAA,GAC8D,QAAA,IAAA,EAAA,CAAA,EACxB,SAAA,CAGnCG,EAAAA,CAAAA,GALHH,EAAA,SAAA,CAaJ,UAAA,UAAkB,CAAA,CAAA,CAhBpB,CAAA,EAAAA,EAAA,MAAA,CAkBA,UAAA,oBAAe,SAAAA,EAAA,EAAA,CACb,GAAA,EAEMD,eAAAA,CAAAA,CAAAA,CACY,EAAA,qBAAA,GAAA,CAHlB,CAAA,CAAA,CApBJ,CAAA,CA4BH,y0CC3BD,WAAA,EAAA,CACE,KAAA,CAAM,cAAEK,qBAAaC,GAAoBN,EACzC,EAAA,IACA,MAAAC,GAAA,MAAA,CACE,UAAA,0CAAA,EAAA,YAAA,KAEgC,SAAAC,EAAA,MAAA,CAG9B,SAAA,CAAA,EAAAD,EAAA,EAAA,CAEmCD,GAAAA,CAAAA,CAAAA,EAAAA,EAAAA,EAAAA,CAEDA,GAAAA,CAAAA,CAAAA,EAAAA,GAAAA,GAAAA,EAAAA,MAAAA,CAG9B,UAAA,8BAAe,SAAAC,EAAA,EAAA,CACb,QAAA,YACU,KAAA,KACH,UAAA,OACK,KAAA,EACJI,SAAAA,CAELC,CAAAA,CANH,CAAA,CAAA,CARN,CAAA,CAAA,CAAA,CAqBL;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}