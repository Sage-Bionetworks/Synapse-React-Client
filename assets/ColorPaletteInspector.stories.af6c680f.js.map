{"version":3,"file":"ColorPaletteInspector.stories.af6c680f.js","sources":["../../src/demo/containers/playground/ColorPaletteInspector.tsx"],"sourcesContent":["import React, { useState } from 'react'\nimport {\n  COLOR_PALETTE_EVEN,\n  COLOR_PALETTE_ODD,\n} from '../../../lib/utils/functions/colorPalette'\n\ntype DivColorInputProps = {\n  initialColor: string\n}\n\nconst DivWithColorInput: React.FunctionComponent<DivColorInputProps> = ({\n  initialColor,\n}) => {\n  const [color, setColor] = useState(initialColor)\n\n  return (\n    <div>\n      <input\n        value={color}\n        style={{ width: '135px' }}\n        onChange={event => setColor(event.target.value)}\n      />\n\n      <div\n        style={{\n          background: color,\n          width: '135px',\n          height: '135px',\n          borderRadius: '150px',\n        }}\n      ></div>\n    </div>\n  )\n}\n\nconst ColorPaletteInspector: React.FunctionComponent = () => {\n  return (\n    <div>\n      <h2>Color Palette Odd</h2>\n      <div style={{ display: 'flex', flexWrap: 'wrap' }}>\n        {COLOR_PALETTE_ODD.reduce(\n          (rows: any, key, index) =>\n            (index % 5 === 0\n              ? rows.push([key])\n              : rows[rows.length - 1].push(key)) && rows,\n\n          [],\n        ).map((palette: string[], idx: number) => {\n          return (\n            <div key={'odd' + idx} style={{ margin: '5px' }}>\n              <h4>Odd palette {idx}</h4>\n              {palette.map(color => (\n                <DivWithColorInput\n                  key={color}\n                  initialColor={color}\n                ></DivWithColorInput>\n              ))}\n            </div>\n          )\n        })}\n      </div>\n      <hr></hr>\n      <h2>Color Palette Even</h2>\n      <div style={{ display: 'flex', flexWrap: 'wrap' }}>\n        {COLOR_PALETTE_EVEN.reduce(\n          (rows: any, key, index) =>\n            (index % 5 === 0\n              ? rows.push([key])\n              : rows[rows.length - 1].push(key)) && rows,\n\n          [],\n        ).map((palette: string[], idx: number) => {\n          return (\n            <div key={'even' + idx} style={{ margin: '5px' }}>\n              <h4>Even palette {idx}</h4>\n              {palette.map(color => (\n                <DivWithColorInput\n                  key={color}\n                  initialColor={color}\n                ></DivWithColorInput>\n              ))}\n            </div>\n          )\n        })}\n      </div>{' '}\n    </div>\n  )\n}\n\nexport default ColorPaletteInspector\n"],"names":["initialColor","_jsxs","_jsx","color"],"mappings":"2GAAA,KAAA,GAAA,OAAA,MAAA,SAUA,EAAA,CAAA,CAAwE,kBACtEA,CAEA,KAAA,CAAA,EAAA,GAAA,EAAA,CAAA,EAEA,MAAAC,GAAA,MAAA,CACE,SAAA,CAAAC,EAAA,QAAA,CACE,MAAA,EACSC,MAAAA,CACA,MAAA,OAAS,EAAT,SAAA,AAAA,GAAA,EAAA,EAAA,OAAA,KAAA,CACoB,CAAA,EAAAD,EAAA,MAAA,CAG7B,MAAA,CACS,WAAA,EACOC,MAAAA,QACL,OAAA,QACC,aAAA,OACM,CAJT,CAAA,CAAA,CARX,CAAA,CAiBH,EAED,EAAA,IACEF,EAAA,MAAA,CACE,SAAA,CAAAC,EAAA,KAAA,CACE,SAAA,mBAAA,CAAA,EAAAA,EAAA,MAAA,CACA,MAAA,CAAY,QAAA,OAAW,SAAA,MAAkB,EAA7B,SAAA,EAAA,OAAA,CAAA,EAAA,EAAA,IAAA,GAAA,IAAA,EAAA,EAAA,KAAA,CAAA,CAAA,CAAA,EAAA,EAAA,EAAA,OAAA,GAAA,KAAA,CAAA,IAAA,EAAA,CAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IASRD,EAAA,MAAA,CACE,MAAA,CAA8B,OAAA,KAAU,EAAV,SAAA,CAAAA,EAAA,KAAA,CAC5B,SAAA,CAAA,eAAA,CAAA,CAAA,CAAA,EAAA,EAAA,IAAA,AAAA,GAAAC,EAAA,EAAA,CAEE,aAAA,CAEgBC,EAAAA,CAAAA,CAAAA,CAAAA,CALpB,EAAA,MAAA,CAAA,CAAA,CATH,CAAA,EAAAD,EAAA,KAAA,CAAA,CAAA,EAAAA,EAAA,KAAA,CAsBH,SAAA,oBAAA,CAAA,EAAAA,EAAA,MAAA,CACA,MAAA,CAAY,QAAA,OAAW,SAAA,MAAkB,EAA7B,SAAA,EAAA,OAAA,CAAA,EAAA,EAAA,IAAA,GAAA,IAAA,EAAA,EAAA,KAAA,CAAA,CAAA,CAAA,EAAA,EAAA,EAAA,OAAA,GAAA,KAAA,CAAA,IAAA,EAAA,CAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IASRD,EAAA,MAAA,CACE,MAAA,CAA+B,OAAA,KAAU,EAAV,SAAA,CAAAA,EAAA,KAAA,CAC7B,SAAA,CAAA,gBAAA,CAAA,CAAA,CAAA,EAAA,EAAA,IAAA,AAAA,GAAAC,EAAA,EAAA,CAEE,aAAA,CAEgBC,EAAAA,CAAAA,CAAAA,CAAAA,CALpB,EAAA,OAAA,CAAA,CAAA,CATH,CAAA,EAAA,GAAA,CA3BL,CAAA,EAoDJ,GAAA,GAAA;;;;;;;;;;;;;;"}