import{h as w,an as E}from"./index.95357afa.js";import{r as l,a as C,j as e}from"./jsx-runtime.41b63a18.js";import{h as R}from"./moment.a565bb48.js";import{a as N}from"./CardContainerLogic.4ac1f764.js";import{l as v}from"./LoadingScreen.8b1b27b2.js";import{B as M}from"./Button.d66b1296.js";import{i as D}from"./SynapseConstants.b6aa8bf5.js";import"./index.fb0baffa.js";import"./iframe.1b6f62a5.js";import"./withStyles.bf9f4c29.js";import"./utils.8566b4fb.js";import"./Alert.2d23c399.js";import"./index.57d09176.js";import"./createWithBsPrefix.4703bb5e.js";import"./index.35ce73ec.js";import"./isArray.9516ce6b.js";import"./getEndpoint.bb7ded34.js";import"./SvgIcon.d8df91d8.js";import"./sqlFunctions.be6fa141.js";import"./RegularExpressions.3cd69849.js";import"./QueryFilter.425a36f4.js";import"./useGetInfoFromIds.440675b0.js";import"./use-deep-compare-effect.esm.89e0b2bf.js";import"./uniq.d1401db4.js";import"./_baseSlice.50189bc5.js";import"./toInteger.d13e0983.js";import"./isSymbol.fc7173a4.js";import"./_cacheHas.fa44402d.js";import"./without.b74e3938.js";import"./uniqueId.7743d6ef.js";import"./_Set.cf46f4c7.js";import"./_setToArray.a82100c8.js";import"./ColumnType.744125d2.js";import"./Tooltip.50b065de.js";import"./createSvgIcon.3e6e5789.js";import"./makeStyles.3de8ae0d.js";import"./FacetNav.93a63650.js";import"./queryUtils.d3ddbdc4.js";import"./useInfiniteQuery.afb80f09.js";import"./queryKeys.e0d3085f.js";import"./cloneDeep.972a710a.js";import"./_baseClone.80c04804.js";import"./_getTag.5b9f1be5.js";import"./NoSearchResults.f5a12ecf.js";import"./NoData.33ecea8a.js";import"./unCamelCase.07e38083.js";import"./useEntity.f187f17a.js";import"./useMutation.75197862.js";import"./pick.d71ecd11.js";import"./isEqual.c98a7e38.js";import"./ElementWithTooltip.a20fbba5.js";import"./SynapseTableConstants.07ecdebd.js";import"./IconSvg.83d367d8.js";import"./InfoOutlined.62b2381c.js";import"./Dropdown.1ea1e7ae.js";import"./usePrevious.b2a56b43.js";import"./contains.35f158bd.js";import"./usePopperMarginModifiers.3543b56f.js";import"./hasClass.56fd144a.js";import"./isRequiredForA11y.20ed4857.js";import"./Checkbox.f849d68d.js";import"./RadioGroup.42f82ea0.js";import"./RangeSlider.a2b8db98.js";import"./factory.4d558efc.js";import"./react-sizeme.6754aec4.js";import"./Skeleton.2b632001.js";import"./ColorGradient.16f0e0f2.js";import"./colorPalette.8145e2e2.js";import"./Modal.493b8aac.js";import"./inheritsLoose.f9ee6081.js";import"./removeClass.27874bcb.js";import"./useWaitForDOMRef.054fdf82.js";import"./SelectionCriteriaPill.5fe230c2.js";import"./Close.a124524c.js";import"./Typography.dc699c3a.js";import"./react-select.esm.d77ac0dd.js";import"./Select-54ac8379.esm.a8e92046.js";import"./CustomSelectWidget.95995941.js";import"./index.browser.d13d238d.js";import"./UserCard.7b85d80c.js";import"./IconCopy.6ff102ac.js";import"./SkeletonTable.5fcf404b.js";import"./times.d1737d14.js";import"./ToastMessage.3d8ba4da.js";import"./FullWidthAlert.5cb2b687.js";import"./Overlay.b83155ef.js";import"./WarningModal.460ec494.js";import"./react-intersection-observer.esm.51a65a7f.js";import"./DateFormatter.ae20191a.js";import"./EntityIcon.d51583e3.js";import"./core.esm.4412e42d.js";import"./isEmpty.7f33a473.js";import"./union.b1c15149.js";import"./isString.eb351700.js";import"./useGetDownloadListStatistics.d1d39b56.js";import"./QueryCount.d74d4572.js";import"./useGetAccessRequirement.0e54bbee.js";import"./ManagedACTAccessRequirementStatus.e6c92b93.js";import"./FileUpload.e43615b9.js";import"./UserSearchBox.084d038d.js";import"./index.582f6d03.js";import"./UserOrTeamBadge.b8080351.js";import"./EntityLink.e671807d.js";import"./SynapseVideo.1efe460d.js";import"./IconList.f6f41d07.js";import"./UserCardList.43b2352c.js";const s=({tableEntityId:r})=>{const{accessToken:c}=w(),[i,y]=l.exports.useState(),[n,T]=l.exports.useState(3);let u=!0;if(l.exports.useEffect(()=>((()=>{if(u){if(i)return;const m={concreteType:"org.sagebionetworks.repo.model.table.QueryBundleRequest",query:{sql:`SELECT "categories", "date", "title", "mdDescription" FROM ${r} ORDER BY "date" desc`},entityId:r,partMask:D};E(m,c).then(o=>{var p;y((p=o.queryResult)==null?void 0:p.queryResults)})}})(),()=>{u=!1}),[r,c]),!i)return v;const a=i.headers,b=a.findIndex(t=>t.name==="categories"),S=a.findIndex(t=>t.name==="date"),F=a.findIndex(t=>t.name==="title"),g=a.findIndex(t=>t.name==="mdDescription");return C("div",{className:"Feed bootstrap-4-backport",children:[e("div",{className:"FeedItems",children:i.rows.map((t,m)=>{if(m>n-1)return;const o=t.values;o.some(d=>d===null)&&console.warn("Row has null value(s) when no nulls expected");const p=JSON.parse(o[b]),I=o[S],h=o[F],x=o[g];return e("div",{className:"FeedItem",children:C("div",{children:[p&&e("div",{className:"FeedItemCategories",children:p.map((d,_)=>e("div",{className:"FeedItemCategory",children:d},`row-${m},categoryIndex-${_}`))}),e("p",{className:"FeedItemDate",children:R(new Date(parseInt(I))).format("MMMM YYYY")}),e("p",{className:"FeedItemTitle",children:h}),e("div",{className:"FeedItemDescription",children:e(N,{markdown:x})})]})},`row-${m}`)})}),i.rows.length>n&&e("div",{className:"FeedViewAllNewsButtonContainer",children:e(M,{variant:"primary",size:"lg",className:"pill",onClick:()=>T(n+3),children:"VIEW MORE NEWS"})})]})},f=s;try{s.displayName="TableFeedCards",s.__docgenInfo={description:"",displayName:"TableFeedCards",props:{tableEntityId:{defaultValue:null,description:"",name:"tableEntityId",required:!0,type:{name:"string"}}}},typeof STORYBOOK_REACT_CLASSES<"u"&&(STORYBOOK_REACT_CLASSES["src/lib/containers/TableFeedCards.tsx#TableFeedCards"]={docgenInfo:s.__docgenInfo,name:"TableFeedCards",path:"src/lib/containers/TableFeedCards.tsx#TableFeedCards"})}catch{}const Ot={parameters:{storySource:{source:`import React from 'react'
import { ComponentStory, ComponentMeta } from '@storybook/react'
import TableFeedCards from './TableFeedCards'

export default {
  title: 'Synapse/TableFeedCards',
  component: TableFeedCards,
} as ComponentMeta<typeof TableFeedCards>

const Template: ComponentStory<typeof TableFeedCards> = args => (
  <TableFeedCards {...args} />
)

export const Demo = Template.bind({})
Demo.args = {
  tableEntityId: 'syn23520190',
}
`,locationsMap:{demo:{startLoc:{col:56,line:10},endLoc:{col:1,line:12},startBody:{col:56,line:10},endBody:{col:1,line:12}}}}},title:"Synapse/TableFeedCards",component:f},O=r=>e(f,{...r}),B=O.bind({});B.args={tableEntityId:"syn23520190"};const Bt=["Demo"];export{B as Demo,Bt as __namedExportsOrder,Ot as default};
