{"version":3,"file":"TableFeedCards.stories.ae89ccdf.js","sources":["../../src/lib/containers/TableFeedCards.tsx"],"sourcesContent":["import { SynapseConstants, SynapseClient } from '../utils/'\nimport React, { useEffect, useState } from 'react'\nimport moment from 'moment'\nimport {\n  QueryBundleRequest,\n  RowSet,\n  SelectColumn,\n} from '../utils/synapseTypes/'\nimport MarkdownSynapse from './MarkdownSynapse'\nimport loadingScreen from './LoadingScreen'\nimport { Button } from 'react-bootstrap'\nimport { useSynapseContext } from '../utils/SynapseContext'\n\nexport type TableFeedCardsProps = {\n  tableEntityId: string\n}\n\nconst TableFeedCards: React.FunctionComponent<TableFeedCardsProps> = ({\n  tableEntityId,\n}) => {\n  const { accessToken } = useSynapseContext()\n  const [rowSet, setRowSet] = useState<RowSet>()\n  const [itemCountShowing, setItemCountShowing] = useState<number>(3)\n\n  let mounted = true\n  useEffect(() => {\n    const executeQuery = () => {\n      if (mounted) {\n        if (rowSet) {\n          return\n        }\n        const request: QueryBundleRequest = {\n          concreteType:\n            'org.sagebionetworks.repo.model.table.QueryBundleRequest',\n          query: {\n            sql: `SELECT \"categories\", \"date\", \"title\", \"mdDescription\" FROM ${tableEntityId} ORDER BY \"date\" desc`,\n          },\n          entityId: tableEntityId,\n          partMask: SynapseConstants.BUNDLE_MASK_QUERY_RESULTS,\n        }\n        SynapseClient.getQueryTableResults(request, accessToken).then(data => {\n          setRowSet(data.queryResult?.queryResults)\n        })\n      }\n    }\n    executeQuery()\n    return () => {\n      mounted = false\n    }\n  }, [tableEntityId, accessToken])\n\n  if (!rowSet) {\n    return loadingScreen\n  }\n  const headers: SelectColumn[] = rowSet.headers\n  const categoriesColIndex = headers.findIndex(col => col.name === 'categories')\n  const dateColIndex = headers.findIndex(col => col.name === 'date')\n  const titleColIndex = headers.findIndex(col => col.name === 'title')\n  const descriptionColIndex = headers.findIndex(\n    col => col.name === 'mdDescription',\n  )\n\n  return (\n    <div className=\"Feed bootstrap-4-backport\">\n      <div className=\"FeedItems\">\n        {rowSet.rows.map((row, index) => {\n          if (index > itemCountShowing - 1) {\n            return\n          }\n          const categoriesList = JSON.parse(row.values[categoriesColIndex])\n          const dateStringTimestamp = row.values[dateColIndex]\n          const title = row.values[titleColIndex]\n          const description = row.values[descriptionColIndex]\n\n          return (\n            <div className=\"FeedItem\" key={`row-${index}`}>\n              <div>\n                {categoriesList && (\n                  <div className=\"FeedItemCategories\">\n                    {(categoriesList as string[]).map(\n                      (categoryName: string, categoryIndex) => {\n                        return (\n                          <div\n                            key={`row-${index},categoryIndex-${categoryIndex}`}\n                            className=\"FeedItemCategory\"\n                          >\n                            {categoryName}\n                          </div>\n                        )\n                      },\n                    )}\n                  </div>\n                )}\n                <p className=\"FeedItemDate\">\n                  {moment(new Date(parseInt(dateStringTimestamp))).format(\n                    'MMMM YYYY',\n                  )}\n                </p>\n                <p className=\"FeedItemTitle\">{title}</p>\n                <div className=\"FeedItemDescription\">\n                  <MarkdownSynapse markdown={description} />\n                </div>\n              </div>\n            </div>\n          )\n        })}\n      </div>\n      {rowSet.rows.length > itemCountShowing && (\n        <div className=\"FeedViewAllNewsButtonContainer\">\n          <Button\n            variant=\"primary\"\n            size=\"lg\"\n            className=\"pill\"\n            onClick={() => setItemCountShowing(itemCountShowing + 3)}\n          >\n            VIEW MORE NEWS\n          </Button>\n        </div>\n      )}\n    </div>\n  )\n}\nexport default TableFeedCards\n"],"names":["tableEntityId","accessToken","useEffect","executeQuery","BUNDLE_MASK_QUERY_RESULTS","SynapseClient","setRowSet","mounted","_jsxs","_jsx","categoryName","moment","title","description"],"mappings":"gsDACA,KAAA,GAAA,OAAA,MAAA,kCAgBA,EAAA,CAAA,CAAsE,mBACpEA,CAEA,KAAA,CAAM,eAAEC,EAAAA,EACR,CAAA,EAAA,GAAA,EAAA,EACA,CAAA,EAAA,GAAA,EAAA,CAAA,EAEA,GAAA,GAAA,GA2BA,GA1BAC,EAAAA,IAoBEC,CAnBA,KAAA,CACE,GAAA,EAAA,CACE,GAAA,EACE,OAEF,KAAA,GAAA,CAAoC,aAAA,0DAEhC,MAAA,CACK,IAAA,8DAAA,wBAC8DH,EAD9D,SAAA,EAGGA,SAAAA,CACiBI,EAE7BC,EAAAA,EAAAA,CAAAA,EAAAA,KAAAA,AAAAA,GAAAA,OACEC,EAAAA,KAAAA,cAAAA,cAAAA,YAAAA,CAAS,CAAA,CADX,CAGD,KAGH,IAAA,CACEC,EAAAA,EAAU,GACX,CAAA,EAAA,CAAA,CAAA,EAGH,CAAA,EACE,MAAA,GAEF,KAAA,GAAA,EAAA,QACA,EAAA,EAAA,UAAA,AAAA,GAAA,EAAA,OAAA,YAAA,EACA,EAAA,EAAA,UAAA,AAAA,GAAA,EAAA,OAAA,MAAA,EACA,EAAA,EAAA,UAAA,AAAA,GAAA,EAAA,OAAA,OAAA,EACA,EAAA,EAAA,UAAA,AAAA,GAAA,EAAA,OAAA,eAAA,EAIA,MAAAC,GAAA,MAAA,CACE,UAAA,4BAAe,SAAA,CAAAC,EAAA,MAAA,CACb,UAAA,YAAe,SAAA,EAAA,KAAA,IAAA,CAAA,EAAA,IAAA,CAEX,GAAA,EAAA,EAAA,EACE,OAEF,KAAA,GAAA,KAAA,MAAA,EAAA,OAAA,EAAA,EACA,EAAA,EAAA,OAAA,GACA,EAAA,EAAA,OAAA,GACA,EAAA,EAAA,OAAA,GAEA,MAAAA,GAAA,MAAA,CACE,UAAA,WAAe,SAAAD,EAAA,MAAA,CACb,SAAA,CAAA,GAAAC,EAAA,MAAA,CAEI,UAAA,qBAAe,SAAA,EAAA,IAAA,CAAA,EAAA,IAGTA,EAAA,MAAA,CACE,UAAA,mBAEY,SAAA,CAETC,EAAAA,OAAAA,mBAAAA,GAAAA,CAJH,CAHL,CAAA,EAAAD,EAAA,IAAA,CAcL,UAAA,eAAa,SAAAE,EAAA,GAAA,MAAA,SAAA,CAAA,CAAA,CAAA,EAAA,OAAA,WAAA,CACV,CAAA,EAAAF,EAAA,IAAA,CAIH,UAAA,gBAAa,SAAA,CAAiBG,CAAAA,EAAAA,EAAAA,MAAAA,CAC9B,UAAA,sBAAe,SAAAH,EAAA,EAAA,CACb,SAAA,CAA2BI,CAAAA,CAA3B,CAAA,CAAA,CAxBJ,CAAA,CAAA,EAAA,OAAA,GAAA,CADF,CAAA,CAVH,CAAA,EAAA,EAAA,KAAA,OAAA,GAAAJ,EAAA,MAAA,CA2CD,UAAA,iCAAe,SAAAA,EAAA,EAAA,CACb,QAAA,UACU,KAAA,KACH,UAAA,OACK,QAAA,IAAA,EAAA,EAAA,CAAA,EACwB,SAAA,gBAJpC,CAAA,CAAA,CAAA,CAAA,CA9CN,CAAA,CA0DH,EACD,GAAA,GAAA;;;;;;;;;;;;;;;;;"}