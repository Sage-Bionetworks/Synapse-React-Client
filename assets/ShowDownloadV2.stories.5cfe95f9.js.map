{"version":3,"file":"ShowDownloadV2.stories.5cfe95f9.js","sources":["../../src/lib/containers/download_list_v2/ShowDownloadV2.tsx"],"sourcesContent":["import React, { useEffect } from 'react'\nimport ReactTooltip from 'react-tooltip'\nimport { TOOLTIP_DELAY_SHOW } from '../table/SynapseTableConstants'\nimport { useSynapseContext } from '../../utils/SynapseContext'\nimport { useErrorHandler } from 'react-error-boundary'\nimport { useGetDownloadListStatistics } from '../../utils/hooks/SynapseAPI/useGetDownloadListStatistics'\nimport IconSvg from '../IconSvg'\n\nexport type ShowDownloadV2Props = {\n  to: string\n  className?: string\n}\n\n/**\n * Nav bar item, displayed when files have been added to the Download Cart.\n * This must be configured with the URL of a page dedicated to showing the Download Cart.\n */\nfunction ShowDownloadV2({ to, className = '' }: ShowDownloadV2Props) {\n  const { accessToken } = useSynapseContext()\n  const handleError = useErrorHandler()\n  const idForToolTip = 'SHOW_DOWNLOAD_TOOLTIP'\n  const tooltipText = 'Click to view items in your download cart.'\n\n  const {\n    data,\n    isLoading,\n    isError,\n    error: newError,\n  } = useGetDownloadListStatistics()\n\n  useEffect(() => {\n    if (isError && newError && accessToken) {\n      handleError(newError)\n    }\n  }, [isError, newError, handleError, accessToken])\n\n  if (!accessToken || isLoading) {\n    return <></>\n  }\n\n  const size = data?.totalNumberOfFiles ?? 0\n  if (size === 0) {\n    return <></>\n  }\n  const content = (\n    <>\n      <span id={idForToolTip} data-for={idForToolTip} data-tip={tooltipText}>\n        <span className=\"SRC-primary-text-color\">\n          <IconSvg\n            options={{\n              icon: 'cart',\n            }}\n          />\n        </span>\n        <span className={`download-cart-size`}>{size}</span>\n      </span>\n      <ReactTooltip\n        delayShow={TOOLTIP_DELAY_SHOW}\n        place={'bottom'}\n        type={'dark'}\n        effect={'solid'}\n        border={true}\n        id={idForToolTip}\n      />\n    </>\n  )\n  return (\n    <a\n      className={`Download-Link v2 ${className}`}\n      href={to}\n      rel=\"noopener noreferrer\"\n    >\n      {content}\n    </a>\n  )\n}\n\nexport default ShowDownloadV2\n"],"names":["to","accessToken","data","isLoading","isError","newError","useEffect","handleError","_jsx","_Fragment","_jsxs","idForToolTip","tooltipText","size","TOOLTIP_DELAY_SHOW","className","content"],"mappings":"ioCAAA,KAAA,GAAA,OAAA,MAAA,UAiBA,WAAA,CAAwB,KAAEA,YAAAA,IAAgB,OACxC,KAAA,CAAM,eAAEC,EAAAA,EACR,EAAA,IACA,EAAA,wBACA,EAAA,6CAEA,CAAM,OACJC,YACAC,UACAC,MAAAA,GACOC,EAAAA,EAST,GANAC,EAAAA,IAAAA,CACE,AAAA,GAAA,GAAA,GACEC,EAAAA,CAAAA,CACD,EAAA,CAAA,EAAA,EAAA,EAAA,CAAA,CAAA,EAGH,CAAA,GAAA,EACE,MAAAC,GAAAC,EAAA,CAAA,CAAA,EAGF,KAAA,GAAA,oBAAA,qBAAA,OAAA,EACA,GAAA,IAAA,EACE,MAAAD,GAAAC,EAAA,CAAA,CAAA,EAEF,KAAA,GAAAC,EAAAD,EAAA,CACE,SAAA,CAAAC,EAAA,OAAA,CACE,GAAA,EAAUC,WAAAA,EAAwBA,WAAAA,EAAwBC,SAAAA,CAAAA,EAAAA,OAAAA,CACxD,UAAA,yBAAgB,SAAAJ,EAAA,EAAA,CACd,QAAA,CACW,KAAA,MACD,CADC,CAAA,CADX,CAAA,EAAAA,EAAA,OAAA,CAMF,UAAA,qBAAkB,SAAA,CAAsBK,CAAAA,CAAAA,CAR1C,CAAA,EAAAL,EAAA,EAAA,CAUA,UAAA,EACaM,MAAAA,SACJ,KAAA,OACD,OAAA,QACE,OAAA,GACA,GAAA,CACJH,CAAAA,CAAAA,CAjBR,CAAA,EAqBF,MAAAH,GAAA,IAAA,CACE,UAAA,oBAAA,IACiCO,KAAAA,EACzBf,IAAAA,sBACF,SAAA,CAEHgB,CAAAA,CAGN;;;;;;;;;;;;;;;;;;"}