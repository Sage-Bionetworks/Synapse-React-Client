{"version":3,"file":"LastUpdatedOn.e7e24ce8.js","sources":["../../node_modules/@material-ui/icons/esm/WarningSharp.js","../../node_modules/@material-ui/lab/esm/Pagination/usePagination.js","../../node_modules/@material-ui/lab/esm/internal/svg-icons/FirstPage.js","../../node_modules/@material-ui/lab/esm/internal/svg-icons/LastPage.js","../../node_modules/@material-ui/lab/esm/internal/svg-icons/NavigateBefore.js","../../node_modules/@material-ui/lab/esm/internal/svg-icons/NavigateNext.js","../../node_modules/@material-ui/lab/esm/PaginationItem/PaginationItem.js","../../node_modules/@material-ui/lab/esm/Pagination/Pagination.js","../../src/lib/containers/FullTextSearch.tsx","../../src/lib/containers/ModalDownload.FormSchema.ts","../../src/lib/containers/ModalDownload.tsx","../../src/lib/containers/SearchV2.tsx","../../src/lib/containers/SqlEditor.tsx","../../src/lib/containers/MissingQueryResultsWarning.tsx","../../src/lib/containers/table/table-top/DownloadLoginModal.tsx","../../src/lib/containers/table/table-top/ProgrammaticTableDownload.tsx","../../src/lib/containers/table/table-top/DownloadOptions.tsx","../../src/lib/containers/table/table-top/ColumnSelection.tsx","../../src/lib/containers/table/TopLevelControls.tsx","../../node_modules/column-resizer/dist/column-resizer.js","../../src/lib/containers/AddToDownloadListV2.tsx","../../src/lib/containers/EntityIdList.tsx","../../src/lib/containers/EvaluationIdRenderer.tsx","../../src/lib/containers/UserIdList.tsx","../../src/lib/containers/synapse_table_functions/SynapseTableCell.tsx","../../src/lib/containers/table/SynapseTableUtils.ts","../../src/lib/containers/table/TablePagination.tsx","../../src/lib/containers/table/SynapseTable.tsx","../../src/lib/containers/query_wrapper_plot_nav/LastUpdatedOn.tsx"],"sourcesContent":["import * as React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M1 21h22L12 2 1 21zm12-3h-2v-2h2v2zm0-4h-2v-4h2v4z\"\n}), 'WarningSharp');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport { useControlled } from '@material-ui/core/utils';\nexport default function usePagination() {\n  var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  // keep default values in sync with @default tags in Pagination.propTypes\n  var _props$boundaryCount = props.boundaryCount,\n      boundaryCount = _props$boundaryCount === void 0 ? 1 : _props$boundaryCount,\n      _props$componentName = props.componentName,\n      componentName = _props$componentName === void 0 ? 'usePagination' : _props$componentName,\n      _props$count = props.count,\n      count = _props$count === void 0 ? 1 : _props$count,\n      _props$defaultPage = props.defaultPage,\n      defaultPage = _props$defaultPage === void 0 ? 1 : _props$defaultPage,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      _props$hideNextButton = props.hideNextButton,\n      hideNextButton = _props$hideNextButton === void 0 ? false : _props$hideNextButton,\n      _props$hidePrevButton = props.hidePrevButton,\n      hidePrevButton = _props$hidePrevButton === void 0 ? false : _props$hidePrevButton,\n      handleChange = props.onChange,\n      pageProp = props.page,\n      _props$showFirstButto = props.showFirstButton,\n      showFirstButton = _props$showFirstButto === void 0 ? false : _props$showFirstButto,\n      _props$showLastButton = props.showLastButton,\n      showLastButton = _props$showLastButton === void 0 ? false : _props$showLastButton,\n      _props$siblingCount = props.siblingCount,\n      siblingCount = _props$siblingCount === void 0 ? 1 : _props$siblingCount,\n      other = _objectWithoutProperties(props, [\"boundaryCount\", \"componentName\", \"count\", \"defaultPage\", \"disabled\", \"hideNextButton\", \"hidePrevButton\", \"onChange\", \"page\", \"showFirstButton\", \"showLastButton\", \"siblingCount\"]);\n\n  var _useControlled = useControlled({\n    controlled: pageProp,\n    default: defaultPage,\n    name: componentName,\n    state: 'page'\n  }),\n      _useControlled2 = _slicedToArray(_useControlled, 2),\n      page = _useControlled2[0],\n      setPageState = _useControlled2[1];\n\n  var handleClick = function handleClick(event, value) {\n    if (!pageProp) {\n      setPageState(value);\n    }\n\n    if (handleChange) {\n      handleChange(event, value);\n    }\n  }; // https://dev.to/namirsab/comment/2050\n\n\n  var range = function range(start, end) {\n    var length = end - start + 1;\n    return Array.from({\n      length: length\n    }, function (_, i) {\n      return start + i;\n    });\n  };\n\n  var startPages = range(1, Math.min(boundaryCount, count));\n  var endPages = range(Math.max(count - boundaryCount + 1, boundaryCount + 1), count);\n  var siblingsStart = Math.max(Math.min( // Natural start\n  page - siblingCount, // Lower boundary when page is high\n  count - boundaryCount - siblingCount * 2 - 1), // Greater than startPages\n  boundaryCount + 2);\n  var siblingsEnd = Math.min(Math.max( // Natural end\n  page + siblingCount, // Upper boundary when page is low\n  boundaryCount + siblingCount * 2 + 2), // Less than endPages\n  endPages[0] - 2); // Basic list of items to render\n  // e.g. itemList = ['first', 'previous', 1, 'ellipsis', 4, 5, 6, 'ellipsis', 10, 'next', 'last']\n\n  var itemList = [].concat(_toConsumableArray(showFirstButton ? ['first'] : []), _toConsumableArray(hidePrevButton ? [] : ['previous']), _toConsumableArray(startPages), _toConsumableArray(siblingsStart > boundaryCount + 2 ? ['start-ellipsis'] : boundaryCount + 1 < count - boundaryCount ? [boundaryCount + 1] : []), _toConsumableArray(range(siblingsStart, siblingsEnd)), _toConsumableArray(siblingsEnd < count - boundaryCount - 1 ? ['end-ellipsis'] : count - boundaryCount > boundaryCount ? [count - boundaryCount] : []), _toConsumableArray(endPages), _toConsumableArray(hideNextButton ? [] : ['next']), _toConsumableArray(showLastButton ? ['last'] : [])); // Map the button type to its page number\n\n  var buttonPage = function buttonPage(type) {\n    switch (type) {\n      case 'first':\n        return 1;\n\n      case 'previous':\n        return page - 1;\n\n      case 'next':\n        return page + 1;\n\n      case 'last':\n        return count;\n\n      default:\n        return null;\n    }\n  }; // Convert the basic item list to PaginationItem props objects\n\n\n  var items = itemList.map(function (item) {\n    return typeof item === 'number' ? {\n      onClick: function onClick(event) {\n        handleClick(event, item);\n      },\n      type: 'page',\n      page: item,\n      selected: item === page,\n      disabled: disabled,\n      'aria-current': item === page ? 'true' : undefined\n    } : {\n      onClick: function onClick(event) {\n        handleClick(event, buttonPage(item));\n      },\n      type: item,\n      page: buttonPage(item),\n      selected: false,\n      disabled: disabled || item.indexOf('ellipsis') === -1 && (item === 'next' || item === 'last' ? page >= count : page <= 1)\n    };\n  });\n  return _extends({\n    items: items\n  }, other);\n}","import * as React from 'react';\nimport { createSvgIcon } from '@material-ui/core/utils';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M18.41 16.59L13.82 12l4.59-4.59L17 6l-6 6 6 6zM6 6h2v12H6z\"\n}), 'FirstPage');","import * as React from 'react';\nimport { createSvgIcon } from '@material-ui/core/utils';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M5.59 7.41L10.18 12l-4.59 4.59L7 18l6-6-6-6zM16 6h2v12h-2z\"\n}), 'LastPage');","import * as React from 'react';\nimport { createSvgIcon } from '@material-ui/core/utils';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z\"\n}), 'NavigateBefore');","import * as React from 'react';\nimport { createSvgIcon } from '@material-ui/core/utils';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z\"\n}), 'NavigateNext');","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { alpha, useTheme, withStyles } from '@material-ui/core/styles';\nimport ButtonBase from '@material-ui/core/ButtonBase';\nimport FirstPageIcon from '../internal/svg-icons/FirstPage';\nimport LastPageIcon from '../internal/svg-icons/LastPage';\nimport NavigateBeforeIcon from '../internal/svg-icons/NavigateBefore';\nimport NavigateNextIcon from '../internal/svg-icons/NavigateNext';\nimport { capitalize } from '@material-ui/core/utils';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: _extends({}, theme.typography.body2, {\n      borderRadius: 32 / 2,\n      textAlign: 'center',\n      boxSizing: 'border-box',\n      minWidth: 32,\n      height: 32,\n      padding: '0 6px',\n      margin: '0 3px',\n      color: theme.palette.text.primary\n    }),\n\n    /* Styles applied to the root element if `type=\"page\"`. */\n    page: {\n      transition: theme.transitions.create(['color', 'background-color'], {\n        duration: theme.transitions.duration.short\n      }),\n      '&:hover': {\n        backgroundColor: theme.palette.action.hover,\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      },\n      '&$focusVisible': {\n        backgroundColor: theme.palette.action.focus\n      },\n      '&$selected': {\n        backgroundColor: theme.palette.action.selected,\n        '&:hover, &$focusVisible': {\n          backgroundColor: alpha(theme.palette.action.selected, theme.palette.action.selectedOpacity + theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: theme.palette.action.selected\n          }\n        },\n        '&$disabled': {\n          opacity: 1,\n          color: theme.palette.action.disabled,\n          backgroundColor: theme.palette.action.selected\n        }\n      },\n      '&$disabled': {\n        opacity: theme.palette.action.disabledOpacity\n      }\n    },\n\n    /* Styles applied applied to the root element if `size=\"small\"`. */\n    sizeSmall: {\n      minWidth: 26,\n      height: 26,\n      borderRadius: 26 / 2,\n      margin: '0 1px',\n      padding: '0 4px',\n      '& $icon': {\n        fontSize: theme.typography.pxToRem(18)\n      }\n    },\n\n    /* Styles applied applied to the root element if `size=\"large\"`. */\n    sizeLarge: {\n      minWidth: 40,\n      height: 40,\n      borderRadius: 40 / 2,\n      padding: '0 10px',\n      fontSize: theme.typography.pxToRem(15),\n      '& $icon': {\n        fontSize: theme.typography.pxToRem(22)\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"text\"` and `color=\"primary\"`. */\n    textPrimary: {\n      '&$selected': {\n        color: theme.palette.primary.contrastText,\n        backgroundColor: theme.palette.primary.main,\n        '&:hover, &$focusVisible': {\n          backgroundColor: theme.palette.primary.dark,\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: theme.palette.primary.main\n          }\n        },\n        '&$disabled': {\n          color: theme.palette.action.disabled\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"text\"` and `color=\"secondary\"`. */\n    textSecondary: {\n      '&$selected': {\n        color: theme.palette.secondary.contrastText,\n        backgroundColor: theme.palette.secondary.main,\n        '&:hover, &$focusVisible': {\n          backgroundColor: theme.palette.secondary.dark,\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: theme.palette.secondary.main\n          }\n        },\n        '&$disabled': {\n          color: theme.palette.action.disabled\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `outlined=\"true\"`. */\n    outlined: {\n      border: \"1px solid \".concat(theme.palette.type === 'light' ? 'rgba(0, 0, 0, 0.23)' : 'rgba(255, 255, 255, 0.23)'),\n      '&$selected': {\n        '&$disabled': {\n          border: \"1px solid \".concat(theme.palette.action.disabledBackground)\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"` and `color=\"primary\"`. */\n    outlinedPrimary: {\n      '&$selected': {\n        color: theme.palette.primary.main,\n        border: \"1px solid \".concat(alpha(theme.palette.primary.main, 0.5)),\n        backgroundColor: alpha(theme.palette.primary.main, theme.palette.action.activatedOpacity),\n        '&:hover, &$focusVisible': {\n          backgroundColor: alpha(theme.palette.primary.main, theme.palette.action.activatedOpacity + theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        },\n        '&$disabled': {\n          color: theme.palette.action.disabled\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"` and `color=\"secondary\"`. */\n    outlinedSecondary: {\n      '&$selected': {\n        color: theme.palette.secondary.main,\n        border: \"1px solid \".concat(alpha(theme.palette.secondary.main, 0.5)),\n        backgroundColor: alpha(theme.palette.secondary.main, theme.palette.action.activatedOpacity),\n        '&:hover, &$focusVisible': {\n          backgroundColor: alpha(theme.palette.secondary.main, theme.palette.action.activatedOpacity + theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        },\n        '&$disabled': {\n          color: theme.palette.action.disabled\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `rounded=\"true\"`. */\n    rounded: {\n      borderRadius: theme.shape.borderRadius\n    },\n\n    /* Styles applied to the root element if `type=\"start-ellipsis\"` or `type=\"end-ellipsis\"`. */\n    ellipsis: {\n      height: 'auto',\n      '&$disabled': {\n        opacity: theme.palette.action.disabledOpacity\n      }\n    },\n\n    /* Pseudo-class applied to the root element if keyboard focused. */\n    focusVisible: {},\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Pseudo-class applied to the root element if `selected={true}`. */\n    selected: {},\n\n    /* Styles applied to the icon element. */\n    icon: {\n      fontSize: theme.typography.pxToRem(20),\n      margin: '0 -8px'\n    }\n  };\n};\nvar PaginationItem = /*#__PURE__*/React.forwardRef(function PaginationItem(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'standard' : _props$color,\n      component = props.component,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      page = props.page,\n      _props$selected = props.selected,\n      selected = _props$selected === void 0 ? false : _props$selected,\n      _props$shape = props.shape,\n      shape = _props$shape === void 0 ? 'round' : _props$shape,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      _props$type = props.type,\n      type = _props$type === void 0 ? 'page' : _props$type,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'text' : _props$variant,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"color\", \"component\", \"disabled\", \"page\", \"selected\", \"shape\", \"size\", \"type\", \"variant\"]);\n\n  var theme = useTheme();\n  var normalizedIcons = theme.direction === 'rtl' ? {\n    previous: NavigateNextIcon,\n    next: NavigateBeforeIcon,\n    last: FirstPageIcon,\n    first: LastPageIcon\n  } : {\n    previous: NavigateBeforeIcon,\n    next: NavigateNextIcon,\n    first: FirstPageIcon,\n    last: LastPageIcon\n  };\n  var Icon = normalizedIcons[type];\n  return type === 'start-ellipsis' || type === 'end-ellipsis' ? /*#__PURE__*/React.createElement(\"div\", {\n    ref: ref,\n    className: clsx(classes.root, classes.ellipsis, disabled && classes.disabled, size !== 'medium' && classes[\"size\".concat(capitalize(size))])\n  }, \"\\u2026\") : /*#__PURE__*/React.createElement(ButtonBase, _extends({\n    ref: ref,\n    component: component,\n    disabled: disabled,\n    focusVisibleClassName: classes.focusVisible,\n    className: clsx(classes.root, classes.page, classes[variant], classes[shape], className, color !== 'standard' && classes[\"\".concat(variant).concat(capitalize(color))], disabled && classes.disabled, selected && classes.selected, size !== 'medium' && classes[\"size\".concat(capitalize(size))])\n  }, other), type === 'page' && page, Icon ? /*#__PURE__*/React.createElement(Icon, {\n    className: classes.icon\n  }) : null);\n});\nprocess.env.NODE_ENV !== \"production\" ? PaginationItem.propTypes = {\n  /**\n   * @ignore\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The active color.\n   */\n  color: PropTypes.oneOf(['standard', 'primary', 'secondary']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, the item will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * The current page number.\n   */\n  page: PropTypes.number,\n\n  /**\n   * If `true` the pagination item is selected.\n   */\n  selected: PropTypes.bool,\n\n  /**\n   * The shape of the pagination item.\n   */\n  shape: PropTypes.oneOf(['round', 'rounded']),\n\n  /**\n   * The size of the pagination item.\n   */\n  size: PropTypes.oneOf(['small', 'medium', 'large']),\n\n  /**\n   * The type of pagination item.\n   */\n  type: PropTypes.oneOf(['page', 'first', 'last', 'next', 'previous', 'start-ellipsis', 'end-ellipsis']),\n\n  /**\n   * The pagination item variant.\n   */\n  variant: PropTypes.oneOf(['text', 'outlined'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiPaginationItem'\n})(PaginationItem);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { withStyles } from '@material-ui/core/styles';\nimport usePagination from './usePagination';\nimport PaginationItem from '../PaginationItem';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {},\n\n  /* Styles applied to the ul element. */\n  ul: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    alignItems: 'center',\n    padding: 0,\n    margin: 0,\n    listStyle: 'none'\n  }\n};\n\nfunction defaultGetAriaLabel(type, page, selected) {\n  if (type === 'page') {\n    return \"\".concat(selected ? '' : 'Go to ', \"page \").concat(page);\n  }\n\n  return \"Go to \".concat(type, \" page\");\n}\n\nvar Pagination = /*#__PURE__*/React.forwardRef(function Pagination(props, ref) {\n  var boundaryCount = props.boundaryCount,\n      classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'standard' : _props$color,\n      count = props.count,\n      defaultPage = props.defaultPage,\n      disabled = props.disabled,\n      _props$getItemAriaLab = props.getItemAriaLabel,\n      getItemAriaLabel = _props$getItemAriaLab === void 0 ? defaultGetAriaLabel : _props$getItemAriaLab,\n      hideNextButton = props.hideNextButton,\n      hidePrevButton = props.hidePrevButton,\n      onChange = props.onChange,\n      page = props.page,\n      _props$renderItem = props.renderItem,\n      renderItem = _props$renderItem === void 0 ? function (item) {\n    return /*#__PURE__*/React.createElement(PaginationItem, item);\n  } : _props$renderItem,\n      _props$shape = props.shape,\n      shape = _props$shape === void 0 ? 'round' : _props$shape,\n      showFirstButton = props.showFirstButton,\n      showLastButton = props.showLastButton,\n      siblingCount = props.siblingCount,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'text' : _props$variant,\n      other = _objectWithoutProperties(props, [\"boundaryCount\", \"classes\", \"className\", \"color\", \"count\", \"defaultPage\", \"disabled\", \"getItemAriaLabel\", \"hideNextButton\", \"hidePrevButton\", \"onChange\", \"page\", \"renderItem\", \"shape\", \"showFirstButton\", \"showLastButton\", \"siblingCount\", \"size\", \"variant\"]);\n\n  var _usePagination = usePagination(_extends({}, props, {\n    componentName: 'Pagination'\n  })),\n      items = _usePagination.items;\n\n  return /*#__PURE__*/React.createElement(\"nav\", _extends({\n    \"aria-label\": \"pagination navigation\",\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other), /*#__PURE__*/React.createElement(\"ul\", {\n    className: classes.ul\n  }, items.map(function (item, index) {\n    return /*#__PURE__*/React.createElement(\"li\", {\n      key: index\n    }, renderItem(_extends({}, item, {\n      color: color,\n      'aria-label': getItemAriaLabel(item.type, item.page, item.selected),\n      shape: shape,\n      size: size,\n      variant: variant\n    })));\n  })));\n}); // @default tags synced with default values from usePagination\n\nprocess.env.NODE_ENV !== \"production\" ? Pagination.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Number of always visible pages at the beginning and end.\n   * @default 1\n   */\n  boundaryCount: PropTypes.number,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The active color.\n   */\n  color: PropTypes.oneOf(['primary', 'secondary', 'standard']),\n\n  /**\n   * The total number of pages.\n   * @default 1\n   */\n  count: PropTypes.number,\n\n  /**\n   * The page selected by default when the component is uncontrolled.\n   * @default 1\n   */\n  defaultPage: PropTypes.number,\n\n  /**\n   * If `true`, the pagination component will be disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * Accepts a function which returns a string value that provides a user-friendly name for the current page.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   *\n   * @param {string} type The link or button type to format ('page' | 'first' | 'last' | 'next' | 'previous'). Defaults to 'page'.\n   * @param {number} page The page number to format.\n   * @param {bool} selected If true, the current page is selected.\n   * @returns {string}\n   */\n  getItemAriaLabel: PropTypes.func,\n\n  /**\n   * If `true`, hide the next-page button.\n   * @default false\n   */\n  hideNextButton: PropTypes.bool,\n\n  /**\n   * If `true`, hide the previous-page button.\n   * @default false\n   */\n  hidePrevButton: PropTypes.bool,\n\n  /**\n   * Callback fired when the page is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {number} page The page selected.\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * The current page.\n   */\n  page: PropTypes.number,\n\n  /**\n   * Render the item.\n   *\n   * @param {PaginationRenderItemParams} params The props to spread on a PaginationItem.\n   * @returns {ReactNode}\n   */\n  renderItem: PropTypes.func,\n\n  /**\n   * The shape of the pagination items.\n   */\n  shape: PropTypes.oneOf(['round', 'rounded']),\n\n  /**\n   * If `true`, show the first-page button.\n   * @default false\n   */\n  showFirstButton: PropTypes.bool,\n\n  /**\n   * If `true`, show the last-page button.\n   * @default false\n   */\n  showLastButton: PropTypes.bool,\n\n  /**\n   * Number of always visible pages before and after the current page.\n   * @default 1\n   */\n  siblingCount: PropTypes.number,\n\n  /**\n   * The size of the pagination component.\n   */\n  size: PropTypes.oneOf(['large', 'medium', 'small']),\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['outlined', 'text'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiPagination'\n})(Pagination);","import { Collapse } from '@material-ui/core'\nimport React, { useRef, useState } from 'react'\nimport { TextMatchesQueryFilter } from '../utils/synapseTypes/Table/QueryFilter'\nimport {\n  QUERY_FILTERS_COLLAPSED_CSS,\n  QUERY_FILTERS_EXPANDED_CSS,\n} from './QueryWrapper'\nimport { useQueryContext } from './QueryContext'\nimport { useQueryVisualizationContext } from './QueryVisualizationWrapper'\nimport { HelpPopover } from './HelpPopover'\nimport IconSvg from './IconSvg'\n\n// See PLFM-7011\nconst MIN_SEARCH_QUERY_LENGTH = 3\n\nexport type FullTextSearchProps = {\n  helpMessage?: string\n  helpUrl?: string\n}\n\nexport const FullTextSearch: React.FunctionComponent<FullTextSearchProps> = ({\n  helpMessage = 'This search bar is powered by MySQL Full Text Search.',\n  helpUrl,\n}: FullTextSearchProps) => {\n  const { executeQueryRequest, getLastQueryRequest } = useQueryContext()\n  const {\n    topLevelControlsState: { showSearchBar, showFacetFilter },\n  } = useQueryVisualizationContext()\n  const [searchText, setSearchText] = useState('')\n  const searchInputRef = useRef<HTMLInputElement>(null)\n\n  const search = (event: React.SyntheticEvent<HTMLFormElement>) => {\n    event.preventDefault()\n\n    // The HTML validation doesn't trim the string, so we add an extra check.\n    // We don't auto-trim the form text ourselves because the user may still be focused on the input.\n    if (searchText.trim().length < MIN_SEARCH_QUERY_LENGTH) {\n      searchInputRef.current?.setCustomValidity(\n        `Search term must have a minimum of ${MIN_SEARCH_QUERY_LENGTH} characters`,\n      )\n    } else {\n      const lastQueryRequestDeepClone = getLastQueryRequest()\n\n      const { additionalFilters = [] } = lastQueryRequestDeepClone.query\n\n      const textMatchesQueryFilter: TextMatchesQueryFilter = {\n        concreteType:\n          'org.sagebionetworks.repo.model.table.TextMatchesQueryFilter',\n        searchExpression: searchText,\n      }\n      // PORTALS-2093: does this additional filter already exist?\n      const found = additionalFilters.find(\n        filter =>\n          filter.concreteType == textMatchesQueryFilter.concreteType &&\n          (filter as TextMatchesQueryFilter).searchExpression ==\n            textMatchesQueryFilter.searchExpression,\n      )\n      if (found) {\n        return\n      }\n      additionalFilters.push(textMatchesQueryFilter)\n\n      lastQueryRequestDeepClone.query.additionalFilters = additionalFilters\n      executeQueryRequest(lastQueryRequestDeepClone)\n      // reset the search text after adding this filter\n      setSearchText('')\n    }\n  }\n\n  const handleChange = (event: React.FormEvent<HTMLInputElement>) => {\n    searchInputRef.current?.setCustomValidity('')\n    setSearchText(event.currentTarget.value)\n  }\n\n  return (\n    <div\n      className={`QueryWrapperSearchInput ${\n        showFacetFilter\n          ? QUERY_FILTERS_EXPANDED_CSS\n          : QUERY_FILTERS_COLLAPSED_CSS\n      }`}\n    >\n      <Collapse in={showSearchBar} timeout={{ enter: 300, exit: 300 }}>\n        <div className=\"QueryWrapperSearchInput__helppopoverwrapper\">\n          <form\n            className=\"QueryWrapperSearchInput__searchbar\"\n            onSubmit={search}\n          >\n            <span className=\"QueryWrapperSearchInput__searchbar__searchicon\">\n              <IconSvg options={{ icon: 'search' }} />\n            </span>\n            <input\n              ref={searchInputRef}\n              minLength={MIN_SEARCH_QUERY_LENGTH}\n              onChange={handleChange}\n              placeholder=\"Enter Search Terms\"\n              value={searchText}\n              type=\"text\"\n            />\n            {searchText.length > 0 && (\n              <button\n                className=\"QueryWrapperSearchInput__searchbar__clearbutton\"\n                type=\"button\"\n                onClick={() => {\n                  setSearchText('')\n                }}\n              >\n                <IconSvg options={{ icon: 'close' }} />\n              </button>\n            )}\n          </form>\n          <div className=\"QueryWrapperSearchInput__helppopover\">\n            <HelpPopover\n              markdownText={helpMessage}\n              helpUrl={helpUrl}\n              placement=\"left\"\n            />\n          </div>\n        </div>\n      </Collapse>\n    </div>\n  )\n}\n\nexport default FullTextSearch\n","import { UiSchema } from '@rjsf/core'\nimport { JSONSchema7 } from 'json-schema'\n\nexport const writeHeaderOption = 'First line is the columns names.'\nexport const includeRowIdAndRowVersionOption =\n  'Include row metadata (Row Id and Row Version).'\nexport const csvOption = 'Comma Separated Values (CSV)'\nexport const tsvOption = 'Tab Separated Values (TSV)'\n\n// Step 1\nconst stepOneFormSchema: JSONSchema7 = {\n  title: 'Download query results',\n  type: 'object',\n  properties: {\n    'File Type': {\n      type: 'string',\n      oneOf: [\n        {\n          const: csvOption,\n          title: csvOption,\n        },\n        {\n          const: tsvOption,\n          title: tsvOption,\n        },\n      ],\n    },\n    Contents: {\n      type: 'array',\n      title: 'Contents',\n      items: {\n        type: 'string',\n        enum: [writeHeaderOption, includeRowIdAndRowVersionOption],\n      },\n      uniqueItems: true,\n    },\n  },\n}\n\nconst stepOneFormUISchema: UiSchema = {\n  'File Type': {\n    'ui:widget': 'radio',\n  },\n  Contents: {\n    'ui:widget': 'checkboxes',\n  },\n}\n\n// Step 2\nconst stepTwoFormSchema: JSONSchema7 = {\n  title: 'Download query results',\n  description:\n    'File is ready for download. Select the download button to download the file.',\n  type: 'object',\n}\n\nconst stepTwoFormUISchema: UiSchema = {}\n\nexport const formSchemaArray = [stepOneFormSchema, stepTwoFormSchema]\nexport const formSchemaUIArray = [stepOneFormUISchema, stepTwoFormUISchema]\n","import * as React from 'react'\nimport { Button, Modal } from 'react-bootstrap'\nimport Form, { IChangeEvent } from '@rjsf/core'\nimport { SynapseClient } from '../utils'\nimport {\n  DownloadFromTableRequest,\n  DownloadFromTableResult,\n  SortItem,\n  QueryBundleRequest,\n} from '../utils/synapseTypes/'\n\nimport {\n  csvOption,\n  formSchemaArray,\n  formSchemaUIArray,\n  includeRowIdAndRowVersionOption,\n  writeHeaderOption,\n} from './ModalDownload.FormSchema'\nimport { parseEntityIdFromSqlStatement } from '../utils/functions/sqlFunctions'\nimport { SynapseContext } from '../utils/SynapseContext'\nimport IconSvg from './IconSvg'\n\nexport type ModalDownloadState = {\n  isLoading: boolean\n  step: number\n  data?: DownloadFromTableResult\n  formData: {}\n}\n\nexport type ModalDownloadProps = {\n  onClose: (...args: any[]) => void\n  includeEntityEtag?: boolean\n  queryBundleRequest?: QueryBundleRequest // either the query bundle request needs to be provided, or getLastQueryRequest\n  getLastQueryRequest?: () => QueryBundleRequest\n  offset?: number\n  limit?: number\n  sort?: SortItem[]\n}\n\nexport default class ModalDownload extends React.Component<\n  ModalDownloadProps,\n  ModalDownloadState\n> {\n  static contextType = SynapseContext\n\n  constructor(props: ModalDownloadProps) {\n    super(props)\n    this.state = {\n      isLoading: false,\n      step: 0,\n      formData: {\n        'File Type': csvOption,\n        Contents: [writeHeaderOption, includeRowIdAndRowVersionOption],\n      },\n    }\n  }\n\n  handleSubmit = (event: IChangeEvent) => {\n    if (this.state.step === 0) {\n      this.handleDownloadSetup(event)\n    } else {\n      this.onDownload()\n    }\n  }\n\n  handleDownloadSetup = (event: IChangeEvent) => {\n    this.setState({\n      isLoading: true,\n    })\n    const { formData } = event\n    const fileType = formData['File Type']\n    const contents = formData.Contents as string[]\n    const { queryBundleRequest, getLastQueryRequest } = this.props\n    const separator = fileType === csvOption ? ',' : '\\t'\n    const writeHeader = contents.includes(writeHeaderOption)\n    const includeRowIdAndRowVersion = contents.includes(\n      includeRowIdAndRowVersionOption,\n    )\n    const queryRequest = queryBundleRequest ?? getLastQueryRequest!()\n    const sql = queryRequest.query.sql\n    const downloadFromTableRequest: DownloadFromTableRequest = {\n      sql,\n      entityId: parseEntityIdFromSqlStatement(sql),\n      selectedFacets: queryRequest.query.selectedFacets,\n      concreteType:\n        'org.sagebionetworks.repo.model.table.DownloadFromTableRequest',\n      writeHeader,\n      includeRowIdAndRowVersion,\n      csvTableDescriptor: { separator },\n      additionalFilters: queryRequest.query.additionalFilters,\n    }\n    SynapseClient.getDownloadFromTableRequest(\n      downloadFromTableRequest,\n      this.context.accessToken,\n    )\n      .then(data => {\n        this.setState({\n          isLoading: false,\n          step: 1,\n          data,\n        })\n      })\n      .catch(err => {\n        console.log('Error getDownloadFromTableRequest: ', err)\n      })\n  }\n\n  onDownload = () => {\n    const { data } = this.state\n    // data will always be defined if calling this function\n    SynapseClient.getFileHandleByIdURL(\n      data!.resultsFileHandleId,\n      this.context.accessToken,\n    ).then(url => {\n      window.location.href = url\n      this.props.onClose()\n    })\n  }\n\n  handleChange = (event: IChangeEvent) => {\n    const { formData } = event\n    this.setState({\n      formData,\n    })\n  }\n\n  render() {\n    const closeBtn: React.CSSProperties = {\n      position: 'absolute',\n      top: 10,\n      right: 10,\n      zIndex: 10,\n    }\n    const spinnerStyle: React.CSSProperties = {\n      height: 50,\n      width: 50,\n      backgroundSize: 50,\n    }\n    return (\n      <Modal\n        animation={false}\n        show={true}\n        onHide={this.props.onClose}\n        backdrop=\"static\"\n      >\n        <Modal.Body>\n          <button style={closeBtn} onClick={this.props.onClose}>\n            <IconSvg options={{ icon: 'close' }} />\n          </button>\n          <Form\n            schema={formSchemaArray[this.state.step]}\n            uiSchema={formSchemaUIArray[this.state.step]}\n            onChange={this.handleChange}\n            formData={this.state.formData}\n            onSubmit={this.handleSubmit}\n          >\n            {this.state.isLoading && (\n              <div className=\"SRC-centerAndJustifyContent\">\n                <div className=\"SRC-center-text\">\n                  <p> Creating the File </p>\n                  <div style={spinnerStyle} className=\"spinner\" />\n                  <p> Loading... </p>\n                </div>\n              </div>\n            )}\n            <div style={{ textAlign: 'right' }}>\n              <Button\n                variant=\"default\"\n                onClick={this.props.onClose}\n                style={{ marginRight: '5px' }}\n              >\n                Cancel\n              </Button>\n              <Button type=\"submit\" variant=\"primary\">\n                {this.state.step === 0 ? 'Next' : 'Download'}\n              </Button>\n            </div>\n          </Form>\n        </Modal.Body>\n      </Modal>\n    )\n  }\n}\n","import { Collapse } from '@material-ui/core'\nimport React from 'react'\nimport { CSSTransition } from 'react-transition-group'\nimport { unCamelCase } from '../utils/functions/unCamelCase'\nimport { ColumnModel, ColumnType } from '../utils/synapseTypes'\nimport {\n  ColumnMultiValueFunction,\n  ColumnMultiValueFunctionQueryFilter,\n  ColumnSingleValueFilterOperator,\n  ColumnSingleValueQueryFilter,\n  isColumnMultiValueFunctionQueryFilter,\n  isColumnSingleValueQueryFilter,\n  QueryFilter,\n} from '../utils/synapseTypes/Table/QueryFilter'\nimport { QueryVisualizationContextType } from './QueryVisualizationWrapper'\nimport {\n  QUERY_FILTERS_COLLAPSED_CSS,\n  QUERY_FILTERS_EXPANDED_CSS,\n} from './QueryWrapper'\nimport { LockedFacet, QueryContextType } from './QueryContext'\nimport IconSvg from './IconSvg'\n\ntype SearchState = {\n  show: boolean\n  /* \n    When the component is revealed in queryplotnav we want to focus on the input field and reveal the dropdown\n    there is an issue where the method handleClickOutsideForm will override the state from componentDidUpdate\n    so we track when componentDidUpdate just fired so that `show` is not overriden on the click event which\n    triggers componentDidUpdate \n  */\n  didUpdateRanLast: boolean\n  searchText: string\n  columnName: string\n}\n\nexport type SearchableColumnsV2 = string[]\n\nexport type SearchV2Props = {\n  queryContext: QueryContextType\n  queryVisualizationContext: QueryVisualizationContextType\n  isQueryWrapperMenuChild?: boolean\n  defaultColumn?: string\n  searchable?: SearchableColumnsV2\n  lockedFacet?: LockedFacet\n  fullTextSearchHelpURL?: string\n}\n\ntype InternalSearchProps = SearchV2Props\n\nclass Search extends React.Component<InternalSearchProps, SearchState> {\n  public searchFormRef: React.RefObject<HTMLFormElement>\n  public radioFormRef: React.RefObject<HTMLFormElement>\n\n  constructor(props: InternalSearchProps) {\n    super(props)\n    this.state = {\n      show: false,\n      didUpdateRanLast: false,\n      searchText: '',\n      columnName: this.props.defaultColumn ?? '',\n    }\n    this.searchFormRef = React.createRef()\n    this.radioFormRef = React.createRef()\n  }\n\n  componentDidMount() {\n    // @ts-ignore\n    document.addEventListener('click', this.handleClickOutsideForm)\n  }\n\n  componentDidUpdate(prevProps: InternalSearchProps) {\n    if (\n      !prevProps.queryVisualizationContext?.topLevelControlsState\n        .showSearchBar &&\n      this.props.queryVisualizationContext?.topLevelControlsState.showSearchBar\n    ) {\n      this.setState({\n        show: true,\n        didUpdateRanLast: true,\n      })\n      this.searchFormRef?.current?.querySelector('input')?.focus()\n    }\n  }\n\n  componentWillUnmount() {\n    // @ts-ignore\n    document.removeEventListener('click', this.handleClickOutsideForm)\n  }\n\n  handleClickOutsideForm = (event: React.SyntheticEvent) => {\n    if (\n      // @ts-ignore\n      !this.searchFormRef.current?.contains(event?.target) &&\n      // @ts-ignore\n      !this.radioFormRef.current?.contains(event?.target)\n    ) {\n      if (this.state.didUpdateRanLast) {\n        this.setState({\n          didUpdateRanLast: false,\n        })\n      } else {\n        this.setState({\n          show: false,\n        })\n      }\n    }\n  }\n\n  public search = (event: React.SyntheticEvent<HTMLFormElement>) => {\n    // form completion by default causes the page to reload, so we prevent that\n    event.preventDefault()\n    const { searchText } = this.state\n    let { columnName } = this.state\n    const { searchable, lockedFacet } = this.props\n    if (columnName === '') {\n      if (searchable) {\n        // If searchable column names are defined in the config, grab the first one (that is not locked)\n        columnName = searchable.filter(\n          colName => colName !== lockedFacet?.facet,\n        )[0]\n      } else {\n        // Otherwise, get the first column model that can be searched.\n        // And for study details page: if lockedFacet is defined, remove it from the search\n        const searchableColumnModels =\n          this.props.queryContext?.data?.columnModels\n            ?.filter(el => el.name !== lockedFacet?.facet)\n            .filter(el => this.isSupportedColumn(el))\n        columnName = searchableColumnModels?.[0].name ?? ''\n      }\n    }\n    this.setState({\n      show: false,\n    })\n    const { executeQueryRequest, getLastQueryRequest } =\n      this.props.queryContext!\n\n    const lastQueryRequestDeepClone = getLastQueryRequest()\n\n    const { additionalFilters = [] } = lastQueryRequestDeepClone.query\n\n    const indexOfColumn = additionalFilters.findIndex((el: QueryFilter) => {\n      if (\n        isColumnSingleValueQueryFilter(el) ||\n        (isColumnMultiValueFunctionQueryFilter(el) &&\n          el.columnName === columnName)\n      ) {\n        return true\n      }\n      return false\n    })\n    if (indexOfColumn === -1) {\n      // get the column model to figure out what kind of filter we should apply.\n      const columnModel: ColumnModel | undefined =\n        this.props.queryContext?.data?.columnModels?.filter(\n          el => el.name === columnName,\n        )[0]\n      if (columnModel?.columnType.endsWith('_LIST')) {\n        const columnMultiValueQueryFilter: ColumnMultiValueFunctionQueryFilter =\n          {\n            columnName,\n            function: ColumnMultiValueFunction.HAS_LIKE,\n            values: [`%${searchText}%`],\n            concreteType:\n              'org.sagebionetworks.repo.model.table.ColumnMultiValueFunctionQueryFilter',\n          }\n        additionalFilters.push(columnMultiValueQueryFilter)\n      } else {\n        const columnSingleValueQueryFilter: ColumnSingleValueQueryFilter = {\n          columnName,\n          operator: ColumnSingleValueFilterOperator.LIKE,\n          values: [`%${searchText}%`],\n          concreteType:\n            'org.sagebionetworks.repo.model.table.ColumnSingleValueQueryFilter',\n        }\n        additionalFilters.push(columnSingleValueQueryFilter)\n      }\n    } else {\n      ;(\n        additionalFilters[indexOfColumn] as\n          | ColumnSingleValueQueryFilter\n          | ColumnMultiValueFunctionQueryFilter\n      ).values.push(`%${searchText}%`)\n    }\n    lastQueryRequestDeepClone.query.additionalFilters = additionalFilters\n    executeQueryRequest!(lastQueryRequestDeepClone)\n  }\n\n  public handleChange = (event: React.FormEvent<HTMLInputElement>) => {\n    this.setState({\n      searchText: event.currentTarget.value,\n    })\n  }\n\n  public isSupportedColumn = (columnModel?: ColumnModel) => {\n    switch (columnModel?.columnType) {\n      case ColumnType.FILEHANDLEID:\n      case ColumnType.ENTITYID:\n      case ColumnType.DATE:\n      case ColumnType.DATE_LIST:\n      case ColumnType.USERID:\n        return false\n      default:\n        return true\n    }\n  }\n\n  public isSupportedColumnAndInProps = (columnModel?: ColumnModel) => {\n    if (this.isSupportedColumn(columnModel)) {\n      // return true if the searchable array contains this column name\n      const { searchable } = this.props\n      return searchable?.some(e => e === columnModel?.name)\n    }\n    return false\n  }\n\n  render() {\n    const {\n      searchable,\n      lockedFacet,\n      queryContext: { data },\n      queryVisualizationContext: { topLevelControlsState, facetAliases },\n    } = this.props\n    const { searchText, show, columnName } = this.state\n    let searchColumns: string[] = []\n\n    // searchable specifies the order of the columns to search\n    if (searchable) {\n      searchColumns = searchable\n        .map(el => data?.columnModels?.find(model => model.name === el))\n        .filter(this.isSupportedColumnAndInProps)\n        .map(el => el!.name)\n    } else if (data?.columnModels) {\n      searchColumns = data.columnModels\n        ?.filter(this.isSupportedColumn)\n        .map(el => el.name)\n    }\n\n    // For study details page: if lockedFacet is defined, remove it from the radio dropdown\n    if (searchColumns.length && lockedFacet?.facet) {\n      searchColumns = searchColumns.filter(el => el !== lockedFacet?.facet)\n    }\n    const showFacetFilter = topLevelControlsState?.showFacetFilter\n    return (\n      <div\n        className={`QueryWrapperSearchInput ${\n          showFacetFilter\n            ? QUERY_FILTERS_EXPANDED_CSS\n            : QUERY_FILTERS_COLLAPSED_CSS\n        }`}\n      >\n        <Collapse in={topLevelControlsState?.showSearchBar}>\n          <form\n            className=\"QueryWrapperSearchInput__searchbar\"\n            onSubmit={this.search}\n            onClick={() => {\n              this.setState({ show: true })\n            }}\n            ref={this.searchFormRef}\n          >\n            <span className=\"QueryWrapperSearchInput__searchbar__searchicon\">\n              <IconSvg options={{ icon: 'search' }} />\n            </span>\n            <input\n              onChange={this.handleChange}\n              onClick={() => {\n                this.setState({\n                  show: true,\n                })\n              }}\n              placeholder=\"Enter Search Terms\"\n              value={searchText}\n              type=\"text\"\n            />\n            {this.state.searchText.length > 0 && (\n              <button\n                className=\"QueryWrapperSearchInput__searchbar__clearbutton\"\n                type=\"button\"\n                onClick={() => {\n                  this.setState({\n                    searchText: '',\n                  })\n                }}\n              >\n                <IconSvg options={{ icon: 'close' }} />\n              </button>\n            )}\n          </form>\n        </Collapse>\n        <div className=\"QueryWrapperSearchInput__dropdown_pos\">\n          <CSSTransition\n            in={show}\n            classNames=\"QueryWrapperSearchInput__animate_dropdown\"\n            timeout={{ enter: 0, exit: 300 }}\n          >\n            <form\n              ref={this.radioFormRef}\n              className=\"QueryWrapperSearchInput__column-select QueryWrapperSearchInput__animate_height\"\n            >\n              <p className=\"deemphasized\">\n                <i> Search In Field: </i>\n              </p>\n              {searchColumns.map((name, index) => {\n                const displayName = unCamelCase(name, facetAliases)\n                const isSelected =\n                  (columnName === '' && index === 0) || columnName === name\n                return (\n                  <div className=\"radio\" key={`search-field-${name}-${index}`}>\n                    <label>\n                      <span>\n                        <input\n                          id={name}\n                          type=\"radio\"\n                          value={name}\n                          checked={isSelected}\n                          onClick={() => {\n                            this.searchFormRef?.current\n                              ?.querySelector('input')\n                              ?.focus()\n                            this.setState({\n                              columnName: name,\n                            })\n                          }}\n                        />\n                        <span>{displayName}</span>\n                      </span>\n                    </label>\n                  </div>\n                )\n              })}\n            </form>\n          </CSSTransition>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Search\n","import { SearchTwoTone } from '@material-ui/icons'\n\nimport { Collapse } from '@material-ui/core'\nimport React, { useEffect, useRef, useState } from 'react'\nimport { HelpPopover } from './HelpPopover'\nimport { useQueryVisualizationContext } from './QueryVisualizationWrapper'\nimport {\n  QUERY_FILTERS_COLLAPSED_CSS,\n  QUERY_FILTERS_EXPANDED_CSS,\n} from './QueryWrapper'\nimport { useQueryContext } from './QueryContext'\n\nexport type SqlEditorProps = {\n  helpMessage?: string\n  helpUrl?: string\n}\n\nconst helpMessageCopy =\n  'The data within tables and views can be retrieved by using a SQL-like query language either from the web interface or from the programmatic clients.'\nconst helpLink =\n  'https://help.synapse.org/docs/Searching-Tables-and-Views.2009596168.html#SearchingTablesandViews-UsingAdvancedSearchQueries'\n\nexport const SqlEditor: React.FunctionComponent<SqlEditorProps> = ({\n  helpMessage = helpMessageCopy,\n  helpUrl = helpLink,\n}: SqlEditorProps) => {\n  const { executeQueryRequest, getLastQueryRequest } = useQueryContext()\n  const {\n    topLevelControlsState: { showSqlEditor, showFacetFilter },\n  } = useQueryVisualizationContext()\n\n  const [sql, setSql] = useState('')\n  const inputRef = useRef<HTMLInputElement>(null)\n  useEffect(() => {\n    if (showSqlEditor) {\n      const defaultSql = getLastQueryRequest().query.sql\n\n      setSql(defaultSql)\n      inputRef.current?.focus()\n    }\n  }, [showSqlEditor, getLastQueryRequest])\n\n  const search = (event: React.SyntheticEvent<HTMLFormElement>) => {\n    event.preventDefault()\n    const lastQueryRequestDeepClone = getLastQueryRequest()\n    lastQueryRequestDeepClone.query.sql = sql\n    lastQueryRequestDeepClone.query.offset = 0\n    lastQueryRequestDeepClone.query.additionalFilters = []\n    lastQueryRequestDeepClone.query.selectedFacets = []\n    executeQueryRequest(lastQueryRequestDeepClone)\n  }\n\n  const handleChange = (event: React.FormEvent<HTMLInputElement>) => {\n    inputRef.current?.setCustomValidity('')\n    setSql(event.currentTarget.value)\n  }\n\n  return (\n    <div\n      className={`QueryWrapperSqlEditorInput ${\n        showFacetFilter\n          ? QUERY_FILTERS_EXPANDED_CSS\n          : QUERY_FILTERS_COLLAPSED_CSS\n      }`}\n    >\n      <Collapse in={showSqlEditor} timeout={{ enter: 300, exit: 300 }}>\n        <div className=\"QueryWrapperSqlEditorInput__helppopoverwrapper\">\n          <form\n            className=\"QueryWrapperSqlEditorInput__searchbar\"\n            onSubmit={search}\n          >\n            <SearchTwoTone className=\"QueryWrapperSqlEditorInput__searchbar__searchicon\" />\n            <input\n              ref={inputRef}\n              onChange={handleChange}\n              placeholder=\"Enter Query\"\n              value={sql}\n              type=\"text\"\n            />\n          </form>\n          <div className=\"QueryWrapperSqlEditorInput__helppopover\">\n            <HelpPopover\n              markdownText={helpMessage}\n              helpUrl={helpUrl}\n              placement=\"right\"\n            />\n          </div>\n        </div>\n      </Collapse>\n    </div>\n  )\n}\n\nexport default SqlEditor\n","import { WarningSharp } from '@material-ui/icons'\nimport React from 'react'\nimport { SynapseConstants } from '../utils/'\nimport { isDataset } from '../utils/functions/EntityTypeUtils'\nimport useGetQueryResultBundle from '../utils/hooks/SynapseAPI/entity/useGetQueryResultBundle'\nimport { QueryBundleRequest, Table } from '../utils/synapseTypes/'\nimport Typography from '../utils/typography/Typography'\nimport { HelpPopover } from './HelpPopover'\n\nconst DATASETS_CURRENT_VERSION_HELP =\n  'Files may be unavailable because you do not have permission to see them, they have been deleted, or the Dataset has been misconfigured.'\n\n// Help text for snapshot does not indicate that files were deleted, because the deleted file would have been captured in the snapshot\nconst DATASETS_SNAPSHOT_HELP =\n  'Files may be unavailable because you do not have permission to see them or the Dataset was misconfigured.'\n\nexport type MissingQueryResultsWarningProps = {\n  entity: Table\n  versionNumber?: number\n}\n\n/**\n * If possible, this component will render a warning message if results may be missing from the query due to user permissions or\n * entities being deleted. If not possible, it will render an empty fragment.\n */\nconst MissingQueryResultsWarning: React.FunctionComponent<\n  MissingQueryResultsWarningProps\n> = ({ entity }) => {\n  // Currently, Datasets are the only table type for which we can reliably get this info.\n  // Other cases will need a new service, tracked by PLFM-7046\n  const isMissingResultsCalculable = entity && isDataset(entity)\n\n  const request: QueryBundleRequest = {\n    concreteType: 'org.sagebionetworks.repo.model.table.QueryBundleRequest',\n    query: {\n      sql: `SELECT * FROM ${entity.id!}${\n        !entity.isLatestVersion && entity.versionNumber\n          ? `.${entity.versionNumber}`\n          : ''\n      }`,\n    },\n    entityId: entity.id!,\n    partMask: SynapseConstants.BUNDLE_MASK_QUERY_COUNT,\n  }\n\n  const { data: queryResult } = useGetQueryResultBundle(request, {\n    enabled: isMissingResultsCalculable,\n  })\n  if (isMissingResultsCalculable && queryResult && entity) {\n    const totalVisibleResults = queryResult.queryCount!\n    const totalResults = entity.items?.length ?? 0\n\n    if (totalVisibleResults === totalResults) {\n      // All of the results are visible, so there is no need to show a warning.\n      return <></>\n    }\n\n    const difference = totalResults - totalVisibleResults\n\n    let helpMessage = ''\n\n    if (entity.isLatestVersion) {\n      helpMessage = DATASETS_CURRENT_VERSION_HELP\n    } else {\n      helpMessage = DATASETS_SNAPSHOT_HELP\n    }\n\n    return (\n      <Typography\n        className=\"SRC-centerContent\"\n        style={{\n          marginLeft: 10,\n        }}\n        variant=\"smallText1\"\n        color=\"textSecondary\"\n      >\n        <WarningSharp\n          className=\"SRC-color-warning\"\n          style={{ fontSize: '16px' }}\n        />\n        {difference.toLocaleString() + ' Unavailable'}\n        <HelpPopover\n          className=\"SRC-margin-left-5\"\n          markdownText={helpMessage}\n          placement=\"right\"\n        ></HelpPopover>\n      </Typography>\n    )\n  } else {\n    return <></>\n  }\n}\n\nexport default MissingQueryResultsWarning\n","import { Modal, ModalBody, ModalFooter, Button } from 'react-bootstrap'\nimport React from 'react'\n\nexport type DownloadLoginModalProps = {\n  showModal?: boolean\n  onHide: () => void\n}\n\nexport const DownloadLoginModal: React.FunctionComponent<\n  DownloadLoginModalProps\n> = props => {\n  return (\n    <Modal\n      animation={false}\n      show={true}\n      onHide={() => props.onHide()}\n      backdrop=\"static\"\n    >\n      <Modal.Header closeButton>\n        <span\n          style={{ fontWeight: 'bold', color: '#515359', fontSize: '1.5em' }}\n        >\n          Sign In Required\n        </span>\n      </Modal.Header>\n      <ModalBody>\n        <p>\n          Anyone can browse public content on the Synapse website, but in order\n          to download and create content you will need to register for an\n          account using an email address.\n        </p>\n        <p>\n          To find out more see&nbsp;\n          <a\n            href=\"https://help.synapse.org/docs/Managing-your-account.2055405596.html\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            User Accounts\n          </a>\n          <span> and </span>\n          <a\n            href=\"https://help.synapse.org/docs/Governance-Overview.2009597114.html\"\n            rel=\"noopener noreferrer\"\n            target=\"_blank\"\n          >\n            Governance Overview\n          </a>\n          .\n        </p>\n      </ModalBody>\n      <ModalFooter>\n        <Button variant=\"secondary\" onClick={() => props.onHide()}>\n          CANCEL\n        </Button>\n        <Button\n          className=\"SRC-SIGN-IN-CLASS\"\n          variant=\"primary\"\n          onClick={() => props.onHide()}\n        >\n          Sign in\n        </Button>\n      </ModalFooter>\n    </Modal>\n  )\n}\n","import React, { useMemo, useState } from 'react'\nimport {\n  QueryBundleRequest,\n  QueryResultBundle,\n} from '../../../utils/synapseTypes'\nimport { TransformSqlWithFacetsRequest } from '../../../utils/synapseTypes/Table/TransformSqlWithFacetsRequest'\nimport useDeepCompareEffect from 'use-deep-compare-effect'\nimport { getTransformSqlWithFacetsRequest } from '../../../utils/SynapseClient'\nimport { ProgrammaticInstructionsModal } from '../../ProgrammaticInstructionsModal'\n\ntype ProgrammaticOptionsProps = {\n  queryBundleRequest: QueryBundleRequest\n  queryResultBundle: QueryResultBundle\n  onHide: () => void\n}\n\nfunction ProgrammaticOptions({\n  queryBundleRequest,\n  queryResultBundle,\n  onHide,\n}: ProgrammaticOptionsProps) {\n  const [generatedSql, setGeneratedSql] = useState('')\n  useDeepCompareEffect(() => {\n    const getData = async () => {\n      const { query } = queryBundleRequest\n      const { sql, selectedFacets = [] } = query\n      const { columnModels } = queryResultBundle\n      if (!columnModels) {\n        console.error(\n          'Column Models must be included to complete transform sql request',\n        )\n      }\n      const transformSqlWithFacetsRequest: TransformSqlWithFacetsRequest = {\n        concreteType:\n          'org.sagebionetworks.repo.model.table.TransformSqlWithFacetsRequest',\n        sqlToTransform: sql,\n        selectedFacets,\n        schema: columnModels!,\n      }\n\n      try {\n        const res = await getTransformSqlWithFacetsRequest(\n          transformSqlWithFacetsRequest,\n        )\n        // SWC-5686: The ID column is required by the client, and this column may not have been selected!\n        // Change the SQL to \"SELECT * ...\"\n        const indexOfFrom = res.transformedSql.toUpperCase().indexOf('FROM SYN')\n        const selectStarTransformedSql = `SELECT * ${res.transformedSql.substring(\n          indexOfFrom,\n        )}`\n        setGeneratedSql(selectStarTransformedSql)\n      } catch (e) {\n        console.error('Error on getTransformSqlWithFacetsRequest ', e)\n      }\n    }\n    getData()\n  }, [queryBundleRequest, queryResultBundle])\n\n  // Replace quotation marks with escaped quotations. For CLI, also escape backticks.\n  const commandLineSql = useMemo(\n    () => generatedSql.replace(/([\"`])/g, '\\\\$1'),\n    [generatedSql],\n  )\n\n  const clientSql = useMemo(\n    () => generatedSql.replace(/\"/g, '\\\\\"'),\n    [generatedSql],\n  )\n\n  return (\n    <ProgrammaticInstructionsModal\n      show={true}\n      onClose={onHide}\n      title=\"Download Programmatically\"\n      cliNotes={\n        <>\n          This command line code will download Synapse files AND file\n          annotations to your working directory.\n        </>\n      }\n      cliCode={`synapse get -q \"${commandLineSql}\"`}\n      rNotes={\n        <>\n          This R code will download file annotations only. Use{' '}\n          <a\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            href=\"https://help.synapse.org/docs/Get-Started-with-Downloading-Data.2004254837.html#GetStartedwithDownloadingData-DownloadingFiles\"\n          >\n            synGet{'()'}\n          </a>{' '}\n          to loop over the list of Synapse IDs from the file annotations to\n          download files.\n        </>\n      }\n      rCode={`query ${'<-'} synTableQuery(\"${clientSql}\")${'\\n'}read.table(query$filepath, sep = \",\")`}\n      pythonNotes={\n        <>\n          This Python code will download file annotations only. Use{' '}\n          <a\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            href=\"https://help.synapse.org/docs/Get-Started-with-Downloading-Data.2004254837.html#GetStartedwithDownloadingData-DownloadingFiles\"\n          >\n            syn.get\n          </a>{' '}\n          to loop over the list of Synapse IDs from the file annotations to\n          download files.\n        </>\n      }\n      pythonCode={`query = syn.tableQuery(\"${clientSql}\")${'\\n'}query.asDataFrame()`}\n    />\n  )\n}\n\nexport default ProgrammaticOptions\n","import * as React from 'react'\nimport { Dropdown } from 'react-bootstrap'\nimport ReactTooltip from 'react-tooltip'\nimport ModalDownload from '../../../containers/ModalDownload'\nimport {\n  isDataset,\n  isEntityView,\n  isFileView,\n} from '../../../utils/functions/EntityTypeUtils'\nimport { useSynapseContext } from '../../../utils/SynapseContext'\nimport { useQueryContext } from '../../QueryContext'\nimport { ElementWithTooltip } from '../../widgets/ElementWithTooltip'\nimport { DownloadLoginModal } from './DownloadLoginModal'\nimport ProgrammaticTableDownload from './ProgrammaticTableDownload'\n\nexport const DOWNLOAD_OPTIONS_CONTAINER_CLASS = 'SRC-download-options-container'\n\nexport type DownloadOptionsProps = {\n  onDownloadFiles: () => void\n  darkTheme?: boolean\n}\n\nexport const DOWNLOAD_FILES_MENU_TEXT = 'Add To Download Cart'\nconst tooltipDownloadId = 'download'\n\nexport const DownloadOptions: React.FunctionComponent<\n  DownloadOptionsProps\n> = props => {\n  const { accessToken } = useSynapseContext()\n  const {\n    entity,\n    data: queryResultBundle,\n    getLastQueryRequest,\n  } = useQueryContext()\n  const queryBundleRequest = getLastQueryRequest()\n  const [showLoginModal, setShowLoginModal] = React.useState(false)\n  const [showExportMetadata, setShowExportMetadata] = React.useState(false)\n  const [showProgrammaticOptions, setShowProgrammaticOptions] =\n    React.useState(false)\n  const { onDownloadFiles, darkTheme = true } = props\n\n  const isFileViewOrDataset =\n    entity &&\n    ((isEntityView(entity) && isFileView(entity)) || isDataset(entity))\n\n  // SWC-5878 - Disable downloading a \"Draft\" dataset\n  const disableDownload = entity && isDataset(entity) && entity.isLatestVersion\n\n  const TOOLTIP_ID = `download-menu-tooltip-${entity?.id}`\n\n  return (\n    <React.Fragment>\n      <Dropdown as=\"span\">\n        <ElementWithTooltip\n          idForToolTip={tooltipDownloadId}\n          tooltipText={'Download Options'}\n          size=\"lg\"\n          darkTheme={darkTheme}\n          icon={'download'}\n        ></ElementWithTooltip>\n        <Dropdown.Menu\n          className=\"SRC-primary-color-hover-dropdown\"\n          alignRight={true}\n        >\n          <ReactTooltip\n            delayShow={300}\n            place=\"left\"\n            type=\"dark\"\n            effect=\"solid\"\n            multiline={true}\n            id={TOOLTIP_ID}\n          />\n          <Dropdown.Item\n            onClick={() => {\n              setShowExportMetadata(true)\n            }}\n          >\n            Export Table\n          </Dropdown.Item>\n          {isFileViewOrDataset && (\n            <Dropdown.Item\n              className={disableDownload ? 'ignoreLink' : undefined}\n              data-for={TOOLTIP_ID}\n              data-tip=\"A draft version of a dataset cannot<br />be added to the Download Cart\"\n              data-tip-disable={!disableDownload}\n              disabled={disableDownload}\n              // If disabled, add pointer-events-auto so the tooltip still works\n              style={disableDownload ? { pointerEvents: 'auto' } : {}}\n              onClick={() =>\n                accessToken ? onDownloadFiles() : setShowLoginModal(true)\n              }\n            >\n              {DOWNLOAD_FILES_MENU_TEXT}\n            </Dropdown.Item>\n          )}\n          <Dropdown.Item\n            className={disableDownload ? 'ignoreLink' : undefined}\n            data-for={TOOLTIP_ID}\n            data-tip=\"A draft version of a dataset cannot<br />be downloaded programmatically\"\n            data-tip-disable={!disableDownload}\n            disabled={disableDownload}\n            // If disabled, add pointer-events-auto so the tooltip still works\n            style={disableDownload ? { pointerEvents: 'auto' } : {}}\n            onClick={() => setShowProgrammaticOptions(true)}\n          >\n            Programmatic Options\n          </Dropdown.Item>\n        </Dropdown.Menu>\n      </Dropdown>\n      {showLoginModal && (\n        <DownloadLoginModal\n          showModal={showLoginModal}\n          onHide={() => setShowLoginModal(false)}\n        ></DownloadLoginModal>\n      )}\n      {\n        // modal can render anywhere, this is not a particular location\n        showExportMetadata && (\n          <ModalDownload\n            onClose={() => setShowExportMetadata(false)}\n            queryBundleRequest={queryBundleRequest}\n          />\n        )\n      }\n      {showProgrammaticOptions && queryResultBundle && (\n        <ProgrammaticTableDownload\n          onHide={() => setShowProgrammaticOptions(false)}\n          queryBundleRequest={queryBundleRequest}\n          queryResultBundle={queryResultBundle}\n        ></ProgrammaticTableDownload>\n      )}\n    </React.Fragment>\n  )\n}\n","import React, { useState } from 'react'\nimport { Dropdown } from 'react-bootstrap'\nimport { ElementWithTooltip } from '../../widgets/ElementWithTooltip'\nimport { SelectColumn } from '../../../utils/synapseTypes/'\nimport { unCamelCase } from '../../../utils/functions/unCamelCase'\nimport IconSvg from '../../IconSvg'\n\ntype ColumnSelectionProps = {\n  headers?: SelectColumn[]\n  isColumnSelected: string[]\n  /* \n      The dropdown state is held in SynapseTable because the EllipsisDropdown has\n      an option to open the dropdown, 'show columns'\n    */\n  show?: boolean\n  onChange?: () => void\n  toggleColumnSelection: (name: string) => void\n  darkTheme?: boolean\n  facetAliases?: Record<string, string>\n}\n\ntype MetadataEvent = {\n  source: 'select' | 'click' | 'rootClose' | 'keydown'\n}\n\nconst tooltipColumnSelectionId = 'addAndRemoveColumns'\n\nexport const ColumnSelection: React.FunctionComponent<ColumnSelectionProps> = (\n  props: ColumnSelectionProps,\n) => {\n  const {\n    headers,\n    isColumnSelected,\n    toggleColumnSelection,\n    darkTheme,\n    facetAliases,\n  } = props\n\n  const [show, setShow] = useState(false)\n  const onDropdownClick = (\n    _show: boolean,\n    _event: React.SyntheticEvent<Dropdown, Event>,\n    metadata: MetadataEvent,\n  ) => {\n    if (metadata.source === 'rootClose') {\n      setShow(false)\n    } else {\n      setShow(true)\n    }\n  }\n  return (\n    <Dropdown\n      as=\"span\"\n      onToggle={(\n        show: boolean,\n        event: React.SyntheticEvent<Dropdown, Event>,\n        metadata: MetadataEvent,\n      ) => onDropdownClick(show, event, metadata)}\n      show={show}\n      drop=\"down\"\n    >\n      <ElementWithTooltip\n        idForToolTip={tooltipColumnSelectionId}\n        tooltipText={'Show/Hide Columns'}\n        icon={darkTheme ? 'columnsdark' : 'columns'}\n        darkTheme={darkTheme}\n      ></ElementWithTooltip>\n\n      {/* There's a known issue if the number of dropdown items is very large, ~30+, the dropdown\n          will unexpectedly render with the list going upwards instead of downwards.\n        */}\n      <Dropdown.Menu\n        className=\"SRC-primary-color-hover-dropdown\"\n        alignRight={true}\n      >\n        {headers?.map(header => {\n          const { name } = header\n          const isCurrentColumnSelected = isColumnSelected.includes(name)\n          const iconStyle: React.CSSProperties = {\n            width: '11px',\n            marginRight: '10px',\n            visibility: isCurrentColumnSelected ? undefined : 'hidden',\n          }\n          const maybeShowPrimaryColor = isCurrentColumnSelected\n            ? 'SRC-primary-text-color'\n            : ''\n          return (\n            <Dropdown.Item\n              // @ts-ignore\n              onClick={() => toggleColumnSelection(name)}\n              key={name}\n            >\n              <span className={maybeShowPrimaryColor} style={iconStyle}>\n                <IconSvg options={{ icon: 'check', size: '14px' }} />\n              </span>\n              {unCamelCase(name, facetAliases)}\n            </Dropdown.Item>\n          )\n        })}\n      </Dropdown.Menu>\n    </Dropdown>\n  )\n}\n","import { cloneDeep } from 'lodash-es'\nimport React from 'react'\nimport { SQL_EDITOR } from '../../utils/SynapseConstants'\nimport { QueryResultBundle } from '../../utils/synapseTypes'\nimport Typography from '../../utils/typography/Typography'\nimport MissingQueryResultsWarning from '../MissingQueryResultsWarning'\nimport QueryCount from '../QueryCount'\nimport {\n  TopLevelControlsState,\n  useQueryVisualizationContext,\n} from '../QueryVisualizationWrapper'\nimport {\n  QUERY_FILTERS_COLLAPSED_CSS,\n  QUERY_FILTERS_EXPANDED_CSS,\n} from '../QueryWrapper'\nimport { useQueryContext } from '../QueryContext'\nimport { ElementWithTooltip } from '../widgets/ElementWithTooltip'\nimport { DownloadOptions } from './table-top'\nimport { ColumnSelection } from './table-top/ColumnSelection'\n\nexport type TopLevelControlsProps = {\n  name?: string\n  hideDownload?: boolean\n  hideVisualizationsControl?: boolean\n  hideFacetFilterControl?: boolean\n  hideQueryCount?: boolean\n  hideSqlEditorControl?: boolean\n  showColumnSelection?: boolean\n  customControls?: CustomControl[]\n}\n\ntype Control = {\n  key: keyof TopLevelControlsState\n  icon: string\n  tooltipText: string\n}\n\ntype CustomControlCallbackData = {\n  data: QueryResultBundle | undefined\n  selectedRowIndices: number[] | undefined\n  refresh: () => void\n}\n\ntype CustomControl = {\n  buttonText: string\n  onClick: (event: CustomControlCallbackData) => void\n  classNames?: string\n  icon?: string\n}\n\nconst controls: Control[] = [\n  {\n    icon: 'search',\n    key: 'showSearchBar',\n    tooltipText: 'Show / Hide Search Bar',\n  },\n  {\n    icon: 'chart',\n    key: 'showFacetVisualization',\n    tooltipText: 'Show / Hide Visualizations',\n  },\n  {\n    icon: 'filter',\n    key: 'showFacetFilter',\n    tooltipText: 'Show / Hide Filters',\n  },\n  {\n    icon: 'download',\n    key: 'showDownloadConfirmation',\n    tooltipText: 'Show options for download',\n  },\n  {\n    icon: SQL_EDITOR,\n    key: 'showSqlEditor',\n    tooltipText: 'Show / Hide the Advanced Query Editor',\n  },\n]\n\nconst TopLevelControls = (props: TopLevelControlsProps) => {\n  const {\n    name,\n    showColumnSelection = false,\n    hideDownload = false,\n    hideVisualizationsControl = false,\n    hideFacetFilterControl = false,\n    hideQueryCount = false,\n    hideSqlEditorControl = true,\n    customControls,\n  } = props\n\n  const {\n    data,\n    entity,\n    getInitQueryRequest,\n    executeQueryRequest,\n    getLastQueryRequest,\n  } = useQueryContext()\n\n  const {\n    topLevelControlsState,\n    setTopLevelControlsState,\n    columnsToShowInTable,\n    selectedRowIndices,\n    facetAliases,\n    setColumnsToShowInTable,\n  } = useQueryVisualizationContext()\n\n  const setControlState = (control: keyof TopLevelControlsState) => {\n    const updatedTopLevelControlsState: Partial<TopLevelControlsState> = {\n      [control]: !topLevelControlsState[control],\n    }\n    if (control === 'showSearchBar') {\n      updatedTopLevelControlsState.showDownloadConfirmation = false\n    }\n    if (control === 'showDownloadConfirmation') {\n      updatedTopLevelControlsState.showSearchBar = false\n    }\n    setTopLevelControlsState(state => ({\n      ...state,\n      ...updatedTopLevelControlsState,\n    }))\n  }\n\n  const refresh = () => {\n    executeQueryRequest(getLastQueryRequest())\n  }\n  /**\n   * Handles the toggle of a column select, this will cause the table to\n   * either show the column or hide depending on the prior state of the column\n   *\n   * @memberof SynapseTable\n   */\n  const toggleColumnSelection = (columnName: string) => {\n    let columnsToShowInTableCopy = cloneDeep(columnsToShowInTable)\n    if (columnsToShowInTableCopy.includes(columnName)) {\n      columnsToShowInTableCopy = columnsToShowInTableCopy.filter(\n        el => el !== columnName,\n      )\n    } else {\n      columnsToShowInTableCopy.push(columnName)\n    }\n    setColumnsToShowInTable(columnsToShowInTableCopy)\n  }\n  const showFacetFilter = topLevelControlsState?.showFacetFilter\n\n  return (\n    <div\n      className={`TopLevelControls ${\n        showFacetFilter\n          ? QUERY_FILTERS_EXPANDED_CSS\n          : QUERY_FILTERS_COLLAPSED_CSS\n      }`}\n      data-testid=\"TopLevelControls\"\n    >\n      <h3>\n        <div className=\"TopLevelControls__querycount\">\n          {name && (\n            <>\n              <Typography variant=\"sectionTitle\" role=\"heading\">\n                {name}{' '}\n                {!hideQueryCount && (\n                  <QueryCount\n                    sql={getInitQueryRequest().query.sql}\n                    parens={true}\n                  />\n                )}\n              </Typography>\n              {!hideQueryCount && entity && (\n                <MissingQueryResultsWarning entity={entity} />\n              )}\n            </>\n          )}\n        </div>\n        <div className=\"TopLevelControls__actions\">\n          {customControls &&\n            customControls.map(customControl => {\n              return (\n                <button\n                  key={customControl.buttonText}\n                  className={`btn SRC-roundBorder SRC-primary-background-color SRC-whiteText ${\n                    customControl.classNames ?? ''\n                  }`}\n                  style={{ marginRight: '5px' }}\n                  type=\"button\"\n                  onClick={() =>\n                    customControl.onClick({ data, selectedRowIndices, refresh })\n                  }\n                >\n                  {customControl.icon}&nbsp;\n                  {customControl.buttonText}\n                </button>\n              )\n            })}\n          {controls.map(control => {\n            const { key, icon, tooltipText } = control\n            if (\n              (key === 'showDownloadConfirmation' && hideDownload) ||\n              (key === 'showFacetVisualization' && hideVisualizationsControl) ||\n              (key === 'showFacetFilter' && hideFacetFilterControl) ||\n              (key === 'showSqlEditor' && hideSqlEditorControl)\n            ) {\n              // needs to be a file view in order for download to make sense\n              return <></>\n            } else if (key === 'showDownloadConfirmation') {\n              return (\n                <DownloadOptions\n                  key={key}\n                  darkTheme={true}\n                  onDownloadFiles={() => setControlState(key)}\n                />\n              )\n            }\n            return (\n              <ElementWithTooltip\n                idForToolTip={key}\n                tooltipText={tooltipText}\n                key={key}\n                callbackFn={() => setControlState(key)}\n                darkTheme={true}\n                icon={icon}\n              />\n            )\n          })}\n          {showColumnSelection && (\n            <ColumnSelection\n              headers={data?.selectColumns}\n              isColumnSelected={columnsToShowInTable}\n              toggleColumnSelection={toggleColumnSelection}\n              darkTheme={true}\n              facetAliases={facetAliases}\n            />\n          )}\n        </div>\n      </h3>\n    </div>\n  )\n}\n\nexport default TopLevelControls\n","!function webpackUniversalModuleDefinition(e,t){\"object\"==typeof exports&&\"object\"==typeof module?module.exports=t():\"function\"==typeof define&&define.amd?define([],t):\"object\"==typeof exports?exports.ColumnResizer=t():e.ColumnResizer=t()}(this,(function(){return(()=>{\"use strict\";var e={67:(e,t,r)=>{r.r(t),r.d(t,{default:()=>a});var i=r(887),o=r.n(i);function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}function _defineProperty(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}var n,l=(n=0,function(){return n++}),a=function ColumnResizer(e){var t=this,r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};_classCallCheck(this,ColumnResizer),_defineProperty(this,\"ID\",\"id\"),_defineProperty(this,\"PX\",\"px\"),_defineProperty(this,\"RESIZABLE\",\"grip-resizable\"),_defineProperty(this,\"FLEX\",\"grip-flex\"),_defineProperty(this,\"legacyIE\",navigator.userAgent.indexOf(\"Trident/4.0\")>0),_defineProperty(this,\"reset\",(function(e){return t.init(e)})),_defineProperty(this,\"onResize\",(function(){var e=t.tb;if(e.classList.remove(t.RESIZABLE),e.opt.fixed){e.tableWidth=Number(window.getComputedStyle(e).width.replace(/px/,\"\")).valueOf();for(var r=0,i=0;i<e.columnCnt;i++)r+=e.columns[i].w;for(var o=0;o<e.columnCnt;o++)e.columns[o].style.width=Math.round(1e3*e.columns[o].w/r)/10+\"%\",e.columns[o].locked=!0}else t.applyBounds(),\"flex\"===e.opt.resizeMode&&e.opt.serialize&&t.serializeStore();e.classList.add(t.RESIZABLE),t.syncGrips()})),_defineProperty(this,\"onGripMouseDown\",(function(e){var r=e.target.parentNode.data,i=t.tb,o=i.grips[r.i],n=e.touches;if(o.ox=n?n[0].pageX:e.pageX,o.l=o.offsetLeft,o.x=o.l,t.createStyle(document.querySelector(\"head\"),\"*{cursor:\"+i.opt.dragCursor+\"!important}\"),document.addEventListener(\"touchmove\",t.onGripDrag),document.addEventListener(\"mousemove\",t.onGripDrag),document.addEventListener(\"touchend\",t.onGripDragOver),document.addEventListener(\"mouseup\",t.onGripDragOver),o.classList.add(i.opt.draggingClass),t.grip=o,i.columns[r.i].locked)for(var l,a=0;a<i.columnCnt;a++)(l=i.columns[a]).locked=!1,l.w=Number(window.getComputedStyle(l).width.replace(/px/,\"\")).valueOf();e.preventDefault()})),_defineProperty(this,\"onGripDrag\",(function(e){var r=t.grip;if(r){var i=r.t,o=e.touches,n=(o?o[0].pageX:e.pageX)-r.ox+r.l,l=i.opt.minWidth,a=r.i,s=1.5*i.cellSpace+l+i.borderSpace,d=a===i.columnCnt-1,p=a?i.grips[a-1].offsetLeft+i.cellSpace+l:s,u=i.opt.fixed?a===i.columnCnt-1?i.tableWidth-s:i.grips[a+1].offsetLeft-i.cellSpace-l:1/0;if(n=Math.max(p,Math.min(u,n)),r.x=n,r.style.left=n+t.PX,d&&(r.w=i.columns[a].w+n-r.l),i.opt.liveDrag){d?(i.columns[a].style.width=r.w+t.PX,!i.opt.fixed&&i.opt.overflow?i.style.minWidth=i.tableWidth+n-r.l+t.PX:i.tableWidth=Number(window.getComputedStyle(i).width.replace(/px/,\"\")).valueOf()):t.syncCols(i,a,!1,i.opt),t.syncGrips();var c=i.opt.onDrag;c&&c(e)}e.preventDefault()}})),_defineProperty(this,\"onGripDragOver\",(function(e){var r=t.grip;document.removeEventListener(\"touchend\",t.onGripDragOver),document.removeEventListener(\"mouseup\",t.onGripDragOver),document.removeEventListener(\"touchmove\",t.onGripDrag),document.removeEventListener(\"mousemove\",t.onGripDrag);var i=document.querySelector(\"head\").lastChild;if(i.parentNode.removeChild(i),r){if(r.classList.remove(r.t.opt.draggingClass),r.x-r.l!=0){var o=r.t,n=o.opt.onResize,l=r.i;if(l===o.columnCnt-1){var a=o.columns[l];a.style.width=r.w+t.PX,a.w=r.w}else t.syncCols(o,l,!0,o.opt);o.opt.fixed||t.applyBounds(),t.syncGrips(),n&&n(e),o.opt.serialize&&t.serializeStore()}t.grip=null}})),_defineProperty(this,\"init\",(function(e){if(e.disable)return t.destroy();var r=t.tb,i=r.getAttribute(t.ID)||t.RESIZABLE+l();if(!r.matches(\"table\")||r.extended&&!e.partialRefresh)return null;var o=document.querySelector(\"head\");if(t.createStyle(o,\" .grip-resizable{table-layout:fixed;} .grip-resizable > tbody > tr > td, .grip-resizable > tbody > tr > th{overflow:hidden} .grip-padding > tbody > tr > td, .grip-padding > tbody > tr > th{padding-left:0!important; padding-right:0!important;} .grip-container{ height:0px; position:relative;} .grip-handle{margin-left:-5px; position:absolute; z-index:5; } .grip-handle .grip-resizable{position:absolute;background-color:red;filter:alpha(opacity=1);opacity:0;width:10px;height:100%;cursor: col-resize;top:0px} .grip-lastgrip{position:absolute; width:1px; } .grip-drag{ border-left:1px dotted black;\\t} .grip-flex{width:auto!important;} .grip-handle.grip-disabledgrip .grip-resizable{cursor:default; display:none;}\"),e.hoverCursor&&\"col-resize\"!==e.hoverCursor){var n=\".grip-handle .grip-resizable:hover{cursor:\"+e.hoverCursor+\"!important}\";t.createStyle(o,n)}r.setAttribute(t.ID,i);var a=r.opt;r.opt=t.extendOptions(e);var s=t.getTableHeaders(r);if(t.extendTable(s),e.remoteTable&&e.remoteTable.matches(\"table\")){var d=t.getTableHeaders(r.opt.remoteTable);s.length===d.length?t.extendRemoteTable(r.opt.remoteTable,d,r):console.warn(\"column count for remote table did not match\")}return a})),_defineProperty(this,\"applyBounds\",(function(){var e=t.tb,r=e.columns.map((function(e){return window.getComputedStyle(e).width}));e.style.width=window.getComputedStyle(e).width,e.tableWidth=Number(e.style.width.replace(/px/,\"\")).valueOf(),e.classList.remove(t.FLEX),e.columns.forEach((function(e,t){e.style.width=r[t],e.w=Number(r[t].replace(/px/,\"\")).valueOf()})),e.classList.add(t.FLEX)})),_defineProperty(this,\"serializeStore\",(function(){var e=t.store,r=t.tb;e[r.getAttribute(t.ID)]=\"\";for(var i=0,o=0;o<r.columns.length;o++){var n=window.getComputedStyle(r.columns[o]).width.replace(/px/,\"\");e[r.getAttribute(t.ID)]+=n+\";\",i+=Number(n).valueOf()}e[r.getAttribute(t.ID)]+=i.toString(),r.opt.fixed||(e[r.getAttribute(t.ID)]+=\";\"+window.getComputedStyle(r).width.replace(/px/,\"\"))})),_defineProperty(this,\"syncGrips\",(function(){var e=t.tb;e.gripContainer.style.width=e.tableWidth+t.PX;for(var r=0;r<e.columnCnt;r++){var i=e.columns[r],o=i.getBoundingClientRect(),n=e.getBoundingClientRect();e.grips[r].style.left=o.left-n.left+i.offsetWidth+e.cellSpace/2+t.PX,e.grips[r].style.height=(e.opt.headerOnly?e.columns[0].offsetHeight:e.offsetHeight)+t.PX}})),_defineProperty(this,\"destroy\",(function(){var e=t.tb,r=e.getAttribute(t.ID);return r?(t.store[r]=\"\",e.classList.remove(t.RESIZABLE),e.classList.remove(t.FLEX),e.remote&&(e.remote.classList.remove(t.RESIZABLE),e.remote.classList.remove(t.FLEX)),e.gripContainer&&e.gripContainer.parentNode&&e.gripContainer.parentNode.removeChild(e.gripContainer),delete e.extended,e.opt):null})),_defineProperty(this,\"createStyle\",(function(e,t){var r=o()(t).toString(),i=e.querySelectorAll(\"style\");if(!Array.from(i).filter((function(e){return e.gripid===r})).length){var n=document.createElement(\"style\");n.type=\"text/css\",n.gripid=r,n.styleSheet?n.styleSheet.cssText=t:n.appendChild(document.createTextNode(t)),e.appendChild(n)}})),_defineProperty(this,\"extendOptions\",(function(e){var t=Object.assign({},ColumnResizer.DEFAULTS,e);switch(t.fixed=!0,t.overflow=!1,t.resizeMode){case\"flex\":t.fixed=!1;break;case\"overflow\":t.fixed=!1,t.overflow=!0}return t})),_defineProperty(this,\"getTableHeaders\",(function(e){var r=\"#\"+e.id,i=Array.from(e.querySelectorAll(r+\">thead>tr:nth-of-type(1)>th\"));return(i=i.concat(Array.from(e.querySelectorAll(r+\">thead>tr:nth-of-type(1)>td\")))).length||(i=(i=(i=(i=Array.from(e.querySelectorAll(r+\">tbody>tr:nth-of-type(1)>th\"))).concat(Array.from(e.querySelectorAll(r+\">tr:nth-of-type(1)>th\")))).concat(Array.from(e.querySelectorAll(r+\">tbody>tr:nth-of-type(1)>td\")))).concat(Array.from(e.querySelectorAll(r+\">tr:nth-of-type(1)>td\")))),t.filterInvisible(i,!1)})),_defineProperty(this,\"filterInvisible\",(function(e,t){return e.filter((function(e){var r=t?-1:e.offsetWidth,i=t?-1:e.offsetHeight;return!(0===r&&0===i||e.style&&e.style.display&&\"none\"===window.getComputedStyle(e).display||!1)}))})),_defineProperty(this,\"extendTable\",(function(e){var r=t.tb;r.opt.removePadding&&r.classList.add(\"grip-padding\"),r.classList.add(t.RESIZABLE),r.insertAdjacentHTML(\"beforebegin\",'<div class=\"grip-container\"/>'),r.grips=[],r.columns=[],r.tableWidth=Number(window.getComputedStyle(r).width.replace(/px/,\"\")).valueOf(),r.gripContainer=r.previousElementSibling,r.opt.marginLeft&&(r.gripContainer.style.marginLeft=r.opt.marginLeft),r.opt.marginRight&&(r.gripContainer.style.marginRight=r.opt.marginRight),r.cellSpace=parseInt(t.legacyIE?r.cellSpacing||r.currentStyle.borderSpacing:window.getComputedStyle(r).borderSpacing.split(\" \")[0].replace(/px/,\"\"))||2,r.borderSpace=parseInt(t.legacyIE?r.border||r.currentStyle.borderLeftWidth:window.getComputedStyle(r).borderLeftWidth.replace(/px/,\"\"))||1,r.extended=!0,t.createGrips(e)})),_defineProperty(this,\"extendRemoteTable\",(function(e,r,i){i.opt.removePadding&&e.classList.add(\"grip-padding\"),e.classList.add(t.RESIZABLE),e.getAttribute(t.ID)||e.setAttribute(t.ID,i.getAttribute(t.ID)+\"remote\"),e.columns=[],r.forEach((function(o,n){var l=r[n];l.w=i.columns[n].w,l.style.width=l.w+t.PX,l.removeAttribute(\"width\"),e.columns.push(l)})),e.tableWidth=i.tableWidth,e.cellSpace=i.cellSpace,e.borderSpace=i.borderSpace;var o=Array.from(e.querySelectorAll(\"col\"));e.columnGrp=t.filterInvisible(o,!0),e.columnGrp.forEach((function(e,t){e.removeAttribute(\"width\"),e.style.width=i.columnGrp[t].style.width})),i.remote=e})),_defineProperty(this,\"createGrips\",(function(e){var r=t.tb;r.columnGrp=t.filterInvisible(Array.from(r.querySelectorAll(\"col\")),!0),r.columnGrp.forEach((function(e){e.removeAttribute(\"width\")})),r.columnCnt=e.length;var i=!1;t.store[r.getAttribute(t.ID)]&&(t.deserializeStore(e),i=!0),r.opt.widths||(r.opt.widths=[]),e.forEach((function(o,n){var l=e[n],a=-1!==r.opt.disabledColumns.indexOf(n);t.createDiv(r.gripContainer,\"grip-handle\");var s=r.gripContainer.lastChild;!a&&r.opt.gripInnerHtml&&(s.innerHTML=r.opt.gripInnerHtml),t.createDiv(s,t.RESIZABLE),n===r.columnCnt-1&&(s.classList.add(\"grip-lastgrip\"),r.opt.fixed&&(s.innerHTML=\"\")),s.addEventListener(\"touchstart\",t.onGripMouseDown,{capture:!0,passive:!0}),s.addEventListener(\"mousedown\",t.onGripMouseDown,!0),a?s.classList.add(\"grip-disabledgrip\"):(s.classList.remove(\"grip-disabledgrip\"),s.addEventListener(\"touchstart\",t.onGripMouseDown,{capture:!0,passive:!0}),s.addEventListener(\"mousedown\",t.onGripMouseDown,!0)),s.t=r,s.i=n,r.opt.widths[n]?l.w=r.opt.widths[n]:l.w=i?Number(l.style.width.replace(/px/,\"\")).valueOf():Number(window.getComputedStyle(l).width.replace(/px/,\"\")).valueOf(),l.style.width=l.w+t.PX,l.removeAttribute(\"width\"),s.data={i:n,t:r.getAttribute(t.ID),last:n===r.columnCnt-1},r.grips.push(s),r.columns.push(l)}));var o=Array.from(r.querySelectorAll(\"td\"));o.concat(Array.from(r.querySelectorAll(\"th\"))),(o=(o=o.filter((function(t){for(var r=0;r<e.length;r++)if(e[r]===t)return!1;return!0}))).filter((function(e){return!(e.querySelectorAll(\"table th\").length||e.querySelectorAll(\"table td\").length)}))).forEach((function(e){e.removeAttribute(\"width\")})),r.opt.fixed||(r.removeAttribute(\"width\"),r.classList.add(t.FLEX)),t.syncGrips()})),_defineProperty(this,\"deserializeStore\",(function(e){var r=t.tb;if(r.columnGrp.forEach((function(e){e.removeAttribute(\"width\")})),r.opt.flush)t.store[r.getAttribute(t.ID)]=\"\";else{var i=t.store[r.getAttribute(t.ID)].split(\";\"),o=i[r.columnCnt+1];!r.opt.fixed&&o&&(r.style.width=o+t.PX,r.opt.overflow&&(r.style.minWidth=o+t.PX,r.tableWidth=Number(o).valueOf()));for(var n=0;n<r.columnCnt;n++)e[n].style.width=i[n]+t.PX,r.columnGrp[n]&&(r.columnGrp[n].style.width=100*Number(i[n]).valueOf()/Number(i[r.columnCnt]).valueOf()+\"%\")}})),_defineProperty(this,\"createDiv\",(function(e,t,r){var i=document.createElement(\"div\");i.classList.add(t),r&&(i.innerHTML=r),e.appendChild(i)})),_defineProperty(this,\"syncCols\",(function(e,r,i,o){var n=e.remote,l=t.grip.x-t.grip.l,a=e.columns[r],s=e.columns[r+1];if(a&&s){var d=a.w+l,p=s.w-l,u=d+t.PX;if(a.style.width=u,e.columnGrp[r]&&e.columnGrp[r].style.width&&(e.columnGrp[r].style.width=u),n&&(n.columns[r].style.width=u,n.columnGrp[r]&&n.columnGrp[r].style.width&&(n.columnGrp[r].style.width=u)),o.fixed){var c=p+t.PX;s.style.width=c,e.columnGrp[r+1]&&e.columnGrp[r+1].style.width&&(e.columnGrp[r+1].style.width=c),n&&(n.columns[r+1].style.width=c,n.columnGrp[r+1]&&n.columnGrp[r+1].style.width&&(n.columnGrp[r+1].style.width=c))}else o.overflow&&(e.style.minWidth=e.tableWidth+l+t.PX);i&&(a.w=d,s.w=o.fixed?p:s.w,n&&(n.columns[r].w=d,n.columns[r+1].w=o.fixed?p:s.w))}}));try{this.store=sessionStorage}catch(e){this.store={}}this.grip=null,this.tb=e,window.addEventListener(\"resize\",this.onResize),Element.prototype.matches||(Element.prototype.matches=Element.prototype.msMatchesSelector),this.init(r)};a.DEFAULTS={resizeMode:\"fit\",draggingClass:\"grip-drag\",gripInnerHtml:\"\",liveDrag:!1,minWidth:15,headerOnly:!1,hoverCursor:\"col-resize\",dragCursor:\"col-resize\",flush:!1,marginLeft:null,marginRight:null,remoteTable:null,disable:!1,partialRefresh:!1,disabledColumns:[],removePadding:!0,widths:[],serialize:!0,onDrag:null,onResize:null}},887:e=>{e.exports=function hash(e){for(var t=5381,r=e.length;r;)t=33*t^e.charCodeAt(--r);return t>>>0}}},t={};function __webpack_require__(r){if(t[r])return t[r].exports;var i=t[r]={exports:{}};return e[r](i,i.exports,__webpack_require__),i.exports}return __webpack_require__.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return __webpack_require__.d(t,{a:t}),t},__webpack_require__.d=(e,t)=>{for(var r in t)__webpack_require__.o(t,r)&&!__webpack_require__.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},__webpack_require__.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),__webpack_require__.r=e=>{\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(e,\"__esModule\",{value:!0})},__webpack_require__(67)})()}));\n//# sourceMappingURL=column-resizer.js.map","import React from 'react'\nimport { addFileToDownloadListV2, getEntity } from '../utils/SynapseClient'\nimport IconSvg from './IconSvg'\nimport { useSynapseContext } from '../utils/SynapseContext'\nimport { displayToast } from './ToastMessage'\nimport ReactTooltip from 'react-tooltip'\nimport { useQueryClient } from 'react-query'\n\nexport type AddToDownloadListV2Props = {\n  entityId: string\n  entityVersionNumber?: number\n}\n\nconst AddToDownloadListV2: React.FunctionComponent<\n  AddToDownloadListV2Props\n> = props => {\n  const { entityId, entityVersionNumber } = props\n  const { accessToken } = useSynapseContext()\n  const queryClient = useQueryClient()\n  if (!accessToken) {\n    return <></>\n  }\n  const addToDownloadListV2 = async () => {\n    try {\n      await addFileToDownloadListV2(entityId, entityVersionNumber, accessToken)\n      // PORTALS-2222: Invalidate to load the accurate results\n      queryClient.invalidateQueries(['downloadliststatsv2'])\n      const entity = await getEntity(\n        accessToken,\n        entityId,\n        entityVersionNumber ? entityVersionNumber?.toString() : undefined,\n      )\n      displayToast(\n        `${entity.name} was successfully added to your Download Cart.`,\n        'success',\n      )\n    } catch (e) {\n      displayToast(\n        `Unable to add the file to your Download Cart. ${e}`,\n        'danger',\n      )\n    }\n  }\n\n  return (\n    <>\n      <a\n        data-testid=\"AddToDownloadListV2\"\n        data-tip=\"Add this file to your Download Cart\"\n        data-for={`${entityId}_${entityVersionNumber}_download-list-v2-button`}\n        onClick={addToDownloadListV2}\n        className=\"ignoreLink\"\n      >\n        <ReactTooltip\n          delayShow={300}\n          place=\"right\"\n          type=\"dark\"\n          effect=\"solid\"\n          id={`${entityId}_${entityVersionNumber}_download-list-v2-button`}\n        />\n        <IconSvg options={{ icon: 'addToCart' }} />\n      </a>\n    </>\n  )\n}\n\nexport default AddToDownloadListV2\n","import React, { useEffect, useState } from 'react'\nimport { useInView } from 'react-intersection-observer'\nimport { getEntityHeadersByIds } from '../utils/SynapseClient'\nimport { useSynapseContext } from '../utils/SynapseContext'\nimport { EntityLink } from './EntityLink'\n\nexport type EntityIdListProps = {\n  entityIdList: string[]\n}\n\nconst EntityIdList: React.FC<EntityIdListProps> = props => {\n  const { accessToken } = useSynapseContext()\n  const { entityIdList } = props\n  const [entityLinkArray, setEntityLinkArray] = useState([<></>])\n  const { ref, inView } = useInView()\n  let mounted: boolean = true\n\n  useEffect(() => {\n    if (inView) {\n      getEntityTypes()\n    }\n    return () => {\n      mounted = false\n    }\n  }, [entityIdList, inView])\n\n  const getEntityTypes = () => {\n    if (!entityIdList.length) return\n\n    getEntityHeadersByIds(entityIdList, accessToken)\n      .then(entity => {\n        if (mounted) {\n          const newEntityList = entity.results.map(el => {\n            return (\n              <p key={el.id}>\n                <EntityLink entity={el} displayTextField={'name'} />\n              </p>\n            )\n          })\n          setEntityLinkArray(newEntityList)\n        }\n      })\n      .catch(e => {\n        console.log('EntityIdList: Error getting entity headers', e)\n      })\n  }\n\n  return <span ref={ref}>{entityLinkArray}</span>\n}\n\nexport default EntityIdList\n","import React, { useEffect, useState } from 'react'\nimport { useInView } from 'react-intersection-observer'\nimport { getEvaluation } from '../utils/SynapseClient'\nimport { useSynapseContext } from '../utils/SynapseContext'\n\nexport type EvaluationIdRendererProps = {\n  evaluationId: string\n}\n\nconst EvaluationIdRenderer: React.FC<EvaluationIdRendererProps> = props => {\n  const { accessToken } = useSynapseContext()\n  const { evaluationId } = props\n  const [evaluationName, setEvaluationName] = useState<string>()\n  const { ref, inView } = useInView()\n  let mounted: boolean = true\n\n  useEffect(() => {\n    if (mounted && inView) {\n      getEvaluationQueue()\n    }\n    return () => {\n      mounted = false\n    }\n  }, [evaluationId, inView])\n\n  const getEvaluationQueue = () => {\n    if (!evaluationId) return\n\n    getEvaluation(evaluationId, accessToken)\n      .then(evaluationQueue => {\n        setEvaluationName(evaluationQueue.name)\n      })\n      .catch(e => {\n        console.log(\n          'EvaluationIdListRenderer: Error getting evaluation queue names',\n          e,\n        )\n      })\n  }\n\n  return <span ref={ref}>{evaluationName}</span>\n}\n\nexport default EvaluationIdRenderer\n","import React, { useEffect, useState } from 'react'\nimport { useInView } from 'react-intersection-observer'\nimport { getUserProfiles } from '../utils/SynapseClient'\nimport { useSynapseContext } from '../utils/SynapseContext'\nimport { UserCardSmall } from './UserCardSmall'\n\nexport type UserIdListProps = {\n  userIds: string[]\n}\n\nconst UserIdList: React.FC<UserIdListProps> = props => {\n  const { accessToken } = useSynapseContext()\n  const { userIds } = props\n  const [profileCards, setProfileCards] = useState<JSX.Element[]>()\n  const { ref, inView } = useInView()\n  let mounted: boolean = true\n\n  useEffect(() => {\n    if (mounted && inView) {\n      getUserProfilesToRender()\n    }\n    return () => {\n      mounted = false\n    }\n  }, [userIds, inView])\n\n  const getUserProfilesToRender = () => {\n    if (!userIds.length) return\n\n    getUserProfiles(userIds, accessToken)\n      .then(userProfiles => {\n        const list = userProfiles.list.map(el => (\n          <UserCardSmall\n            key={el.ownerId}\n            userProfile={el}\n            className=\"SRC-marginFifteen\"\n          />\n        ))\n        setProfileCards(list)\n      })\n      .catch(e => {\n        console.log('UserIdList: Error getting user profiles', e)\n      })\n  }\n\n  return <span ref={ref}>{profileCards}</span>\n}\n\nexport default UserIdList\n","import { noop } from 'lodash-es'\nimport React from 'react'\nimport { isEntityView, isDataset } from '../../utils/functions/EntityTypeUtils'\nimport { PRODUCTION_ENDPOINT_CONFIG } from '../../utils/functions/getEndpoint'\nimport { AUTHENTICATED_USERS } from '../../utils/SynapseConstants'\nimport {\n  ColumnModel,\n  ColumnType,\n  FileHandleAssociateType,\n  SelectColumn,\n  UserGroupHeader,\n  UserProfile,\n} from '../../utils/synapseTypes'\nimport { EntityHeader } from '../../utils/synapseTypes/EntityHeader'\nimport {\n  CardLink,\n  ColumnSpecifiedLink,\n  MarkdownLink,\n} from '../CardContainerLogic'\nimport DirectDownload from '../DirectDownload'\nimport EntityIdList from '../EntityIdList'\nimport { EntityLink } from '../EntityLink'\nimport EvaluationIdRenderer from '../EvaluationIdRenderer'\nimport { SynapseCardLabel } from '../GenericCard'\nimport IconSvg, { Icon } from '../IconSvg'\nimport { useQueryContext } from '../QueryContext'\nimport { NOT_SET_DISPLAY_VALUE } from '../table/SynapseTableConstants'\nimport UserCard from '../UserCard'\nimport UserIdList from '../UserIdList'\nimport { ElementWithTooltip } from '../widgets/ElementWithTooltip'\n\nexport type SynapseTableCellProps = {\n  columnType: ColumnType\n  columnValue: string\n  isBold: string\n  columnLinkConfig?: CardLink | MarkdownLink | ColumnSpecifiedLink\n  mapEntityIdToHeader: Record<string, EntityHeader>\n  mapUserIdToHeader: Partial<UserGroupHeader & UserProfile>\n  rowIndex?: number\n  columnName: string\n  selectColumns?: SelectColumn[]\n  columnModels?: ColumnModel[]\n  rowData: string[]\n  rowId?: number\n  rowVersionNumber?: number\n}\n\nexport const SynapseTableCell: React.FC<SynapseTableCellProps> = ({\n  columnType,\n  columnValue,\n  isBold,\n  mapEntityIdToHeader,\n  mapUserIdToHeader,\n  columnLinkConfig,\n  rowIndex,\n  columnName,\n  selectColumns,\n  columnModels,\n  rowData,\n  rowId,\n  rowVersionNumber,\n}) => {\n  const { entity } = useQueryContext()\n\n  const isShortString = (s: string, maxCharCount = 20): boolean => {\n    return !s || s.length <= maxCharCount\n  }\n  if (!columnValue) {\n    return (\n      <p className=\"SRC-center-text SRC-inactive\"> {NOT_SET_DISPLAY_VALUE}</p>\n    )\n  }\n\n  if (columnLinkConfig) {\n    return (\n      <SynapseCardLabel\n        value={columnValue}\n        columnName={columnName}\n        selectColumns={selectColumns}\n        columnModels={columnModels}\n        isHeader={false}\n        labelLink={columnLinkConfig}\n        rowData={rowData}\n      />\n    )\n  }\n\n  // PORTALS-2095: Special case. If this is an EntityView, and we are rendering the 'id' or 'name' column,\n  // and we have a rowId and rowVersionNumber (should always be the case), and our entityIdToHeader map\n  // contains the row Synapse ID, then auto-link.\n  if (\n    entity &&\n    (isEntityView(entity) || isDataset(entity)) &&\n    (columnName === 'id' || columnName === 'name') &&\n    rowId &&\n    rowVersionNumber\n  ) {\n    const synId = `syn${rowId.toString()}`\n    if (Object.prototype.hasOwnProperty.call(mapEntityIdToHeader, synId)) {\n      return (\n        <p>\n          <EntityLink\n            entity={mapEntityIdToHeader[synId]}\n            versionNumber={rowVersionNumber}\n            className={`${isBold}`}\n            showIcon={false}\n            displayTextField={columnName}\n          />\n        </p>\n      )\n    }\n  }\n\n  switch (columnType) {\n    case ColumnType.ENTITYID:\n      if (\n        Object.prototype.hasOwnProperty.call(mapEntityIdToHeader, columnValue)\n      ) {\n        return (\n          <p>\n            <EntityLink\n              entity={mapEntityIdToHeader[columnValue]}\n              className={`${isBold}`}\n              displayTextField={'name'}\n            />\n          </p>\n        )\n      }\n      break\n    case ColumnType.DATE_LIST: {\n      const jsonData: number[] = JSON.parse(columnValue)\n      return (\n        <p>\n          {jsonData.map((val: number, index: number) => {\n            return (\n              <span key={index} className={isBold}>\n                {new Date(val).toLocaleString()}\n                {index !== jsonData.length - 1 ? ', ' : ''}\n              </span>\n            )\n          })}{' '}\n        </p>\n      )\n    }\n    case ColumnType.BOOLEAN_LIST: {\n      const jsonData: boolean[] = JSON.parse(columnValue)\n      return (\n        <p>\n          {jsonData.map((val: boolean, index: number) => {\n            return (\n              <span key={index} className={isBold}>\n                {val ? 'true' : 'false'}\n                {index !== jsonData.length - 1 ? ', ' : ''}\n              </span>\n            )\n          })}\n        </p>\n      )\n    }\n    case ColumnType.FILEHANDLEID:\n      return (\n        <>\n          {entity && (\n            <DirectDownload\n              associatedObjectId={entity.id!}\n              associatedObjectType={FileHandleAssociateType.TableEntity}\n              fileHandleId={columnValue}\n              displayFileName={true}\n            />\n          )}\n        </>\n      )\n    case ColumnType.ENTITYID_LIST: {\n      const jsonData: string[] = JSON.parse(columnValue)\n      return <EntityIdList entityIdList={jsonData} />\n    }\n    case ColumnType.USERID_LIST: {\n      const jsonData: string[] = JSON.parse(columnValue)\n      return <UserIdList userIds={jsonData} />\n    }\n    // handle other list types\n    case ColumnType.STRING_LIST:\n    case ColumnType.INTEGER_LIST: {\n      const jsonData: string[] = JSON.parse(columnValue)\n      return (\n        <p>\n          {jsonData.map((val: string, index: number) => {\n            return (\n              <span key={val} className={isBold}>\n                {val}\n                {index !== jsonData.length - 1 ? ', ' : ''}\n              </span>\n            )\n          })}\n        </p>\n      )\n    }\n    case ColumnType.EVALUATIONID: {\n      return <EvaluationIdRenderer evaluationId={columnValue} />\n    }\n\n    case ColumnType.DATE:\n      return (\n        <p className={isBold}>\n          {new Date(Number(columnValue)).toLocaleString()}\n        </p>\n      )\n\n    case ColumnType.USERID:\n      if (\n        Object.prototype.hasOwnProperty.call(mapUserIdToHeader, columnValue)\n      ) {\n        const { ownerId, userName } = mapUserIdToHeader[columnValue]\n        if (mapUserIdToHeader[columnValue].isIndividual === false) {\n          // isUserGroupHeader\n          const icon: Icon =\n            userName === AUTHENTICATED_USERS ? 'public' : 'people'\n          if (userName === AUTHENTICATED_USERS) {\n            return (\n              <span>\n                <IconSvg options={{ icon }} /> All registered Synapse users\n              </span>\n            )\n          }\n          return (\n            <a\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              href={`${PRODUCTION_ENDPOINT_CONFIG.PORTAL}#!Team:${ownerId}`}\n            >\n              <IconSvg options={{ icon }} /> {userName}\n            </a>\n          )\n        } else {\n          // isUserCard\n          return (\n            <UserCard\n              userProfile={mapUserIdToHeader[columnValue]}\n              preSignedURL={mapUserIdToHeader[columnValue].clientPreSignedURL}\n              size={'SMALL USER CARD'}\n            />\n          )\n        }\n      }\n      break\n    case ColumnType.LINK:\n      return (\n        <a target=\"_blank\" rel=\"noopener noreferrer\" href={columnValue}>\n          {columnValue}\n        </a>\n      )\n    case ColumnType.STRING:\n    case ColumnType.DOUBLE:\n    case ColumnType.INTEGER:\n    case ColumnType.BOOLEAN:\n    case ColumnType.LARGETEXT: {\n      const isShort = isShortString(columnValue)\n      if (isShort) {\n        return <p className={isBold}> {columnValue}</p>\n      } else {\n        return (\n          <div className={isBold}>\n            <ElementWithTooltip\n              tooltipText={columnValue}\n              callbackFn={noop}\n              idForToolTip={`${columnName}_${rowIndex}`}\n            >\n              <p className={isBold}> {columnValue}</p>\n            </ElementWithTooltip>\n          </div>\n        )\n      }\n    }\n    default:\n      console.warn(\n        `ColumnType ${columnType} has unspecified handler. Rendering the column value.`,\n      )\n      return <p className={isBold}>{columnValue}</p>\n  }\n  // We can reach this if we don't get a mapping of IDs to entities or principals.\n  // TODO: If we don't have a id:data mapping, we should render a component that can fetch the required data, rather than breaking from the case.\n  return <p className={isBold}>{columnValue}</p>\n}\n","import { lexer } from 'sql-parser'\nimport {\n  formatSQLFromParser,\n  isGroupByInSql,\n} from '../../utils/functions/sqlFunctions'\nimport { ColumnType, QueryResultBundle, Row } from '../../utils/synapseTypes'\n\ntype ColumnReference = {\n  index: number\n  name: string\n}\n\nexport const getColumnIndiciesWithType = (\n  data: QueryResultBundle | undefined,\n  ...columnTypes: ColumnType[]\n) => {\n  const columnsOfTypeEntity: number[] = []\n  data?.selectColumns?.forEach((el, index) => {\n    if (columnTypes.includes(el.columnType)) {\n      columnsOfTypeEntity.push(index)\n    }\n  })\n  return columnsOfTypeEntity\n}\n\nexport const getUniqueEntities = (\n  data: QueryResultBundle,\n  mapIdToHeader: {},\n  indicies: number[],\n) => {\n  const distinctEntities = new Set<string>()\n  data.queryResult.queryResults.rows.forEach(row => {\n    row.values.forEach((el: any, colIndex: number) => {\n      // make sure this is a column of type entity and that we haven't retrieved this entity's information prior\n      if (\n        indicies.includes(colIndex) &&\n        !Object.prototype.hasOwnProperty.call(mapIdToHeader, el) &&\n        el\n      ) {\n        distinctEntities.add(el)\n      }\n    })\n  })\n  return distinctEntities\n}\n\n/**\n * Return the select column indexes for columns that use the aggregate count function.\n * If sql does not have a GROUP BY, this returns an empty array.\n * @param originalSql\n * @deprecated See comments on SWC-6075\n */\nexport function getCountFunctionColumnIndices(originalSql: string): number[] {\n  const indexes: number[] = []\n  if (isGroupByInSql(originalSql)) {\n    const tokens: string[][] = lexer.tokenize(originalSql)\n    const selectIndex = tokens.findIndex(el => el[0] === 'SELECT')\n    const fromIndex = tokens.findIndex(el => el[0] === 'FROM')\n    let columnIndex = 0\n    for (\n      let index = selectIndex + 1;\n      index < fromIndex - selectIndex - 1;\n      index += 1\n    ) {\n      const token = tokens[index]\n      if (token[0] === 'FUNCTION' && token[1].toLowerCase() === 'count') {\n        // found a count column!\n        indexes.push(columnIndex)\n      } else if (token[0] === 'SEPARATOR') {\n        // next column\n        columnIndex += 1\n      }\n    }\n  }\n  return indexes\n}\n\n/**\n *\n * @deprecated See comments on SWC-6075\n */\nexport function getSqlUnderlyingDataForRow(\n  selectedRow: Row,\n  originalSql: string,\n  data?: QueryResultBundle,\n): { synId: string; newSql: string } {\n  let tokens: string[][] = lexer.tokenize(originalSql)\n  const selectIndex = tokens.findIndex(el => el[0] === 'SELECT')\n  const fromIndex = tokens.findIndex(el => el[0] === 'FROM')\n\n  // gather all of the column names literals between select and from (and their indices)\n  const columnReferences: ColumnReference[] = []\n  let columnIndex = 0\n  let foundFunctionForColumn = false\n  for (\n    let index = selectIndex + 1;\n    index < fromIndex - selectIndex - 1;\n    index += 1\n  ) {\n    const token = tokens[index]\n    // parsing error.  concat function is reported as a LITERAL instead of a function\n    if (token[0] === 'FUNCTION' || token[1].toLocaleLowerCase() === 'concat') {\n      foundFunctionForColumn = true\n    } else if (token[0] === 'LITERAL' && !foundFunctionForColumn) {\n      // found a column\n      columnReferences.push({ index: columnIndex, name: token[1] })\n    } else if (token[0] === 'SEPARATOR') {\n      // next column\n      columnIndex += 1\n      // reset \"found function\"\n      foundFunctionForColumn = false\n    }\n  }\n\n  // remove all tokens after (and including) group\n  tokens = tokens.slice(\n    0,\n    tokens.findIndex(el => el[0] === 'GROUP'),\n  )\n  // replace all columns with *\n  tokens.splice(selectIndex + 1, fromIndex - selectIndex - 1, [\n    'STAR',\n    '*',\n    '1',\n  ])\n  // add new items to where clause, but only if the column name corresponds to a real column in the table/view!\n  // use row.values\n  if (data === undefined) {\n    return { synId: '', newSql: '' }\n  }\n  const whereIndex = tokens.findIndex(el => el[0] === 'WHERE')\n  if (whereIndex === -1) {\n    // does not contain a where clause\n    tokens.push(['WHERE', 'WHERE', '1'])\n  } else {\n    // alreay contains a where clause, add the first AND\n    tokens.push(['CONDITIONAL', 'AND', '1'])\n  }\n\n  // look for headers in column models, if they match then add a where clause\n  columnReferences.forEach((value: ColumnReference, index: number) => {\n    const rowValue = selectedRow.values[value.index]\n    // PORTALS-712: support null values\n    if (rowValue) {\n      tokens.push(\n        ['LITERAL', value.name, '1'],\n        ['OPERATOR', '=', '1'],\n        ['STRING', rowValue, '1'],\n        ['CONDITIONAL', 'AND', '1'],\n      )\n    } else {\n      tokens.push(\n        ['LITERAL', value.name, '1'],\n        ['OPERATOR', 'IS', '1'],\n        ['BOOLEAN', 'null', '1'],\n        ['CONDITIONAL', 'AND', '1'],\n      )\n    }\n  })\n  // remove the last AND\n  tokens.pop()\n  // remove backtick from output sql (for table name): `syn1234` becomes syn1234\n  const synId = tokens[tokens.findIndex(el => el[0] === 'FROM') + 1][1]\n  tokens.push(['EOF', '', '1'])\n  return { synId, newSql: formatSQLFromParser(tokens) }\n}\n","import React from 'react'\nimport { Pagination } from '@material-ui/lab'\nimport { usePaginatedQueryContext } from '../QueryContext'\nimport Typography from '../../utils/typography/Typography'\n\nexport const TablePagination = () => {\n  const { data, goToPage, pageSize, setPageSize, currentPage } =\n    usePaginatedQueryContext()\n  const queryCount = data?.queryCount\n\n  const handlePage = (event: React.ChangeEvent<unknown>, value: number) => {\n    goToPage(value)\n  }\n\n  const handlePageSize = (event: React.ChangeEvent<{ value: unknown }>) => {\n    const value = event.target.value as number\n    setPageSize(value)\n  }\n\n  return (\n    <div>\n      <Pagination\n        page={currentPage}\n        count={Math.ceil(queryCount! / pageSize)}\n        color=\"secondary\"\n        onChange={handlePage}\n        style={{ display: 'inline-block', float: 'left' }}\n      />\n      <Typography variant=\"body1\" style={{ display: 'inline-block' }}>\n        {`${queryCount?.toLocaleString()} total rows /`}\n      </Typography>\n      <select\n        name=\"page size\"\n        onChange={handlePageSize}\n        style={{ padding: '4px', marginLeft: '4px' }}\n      >\n        <option value={10}>10 per page</option>\n        <option selected value={25}>\n          25 per page\n        </option>\n        <option value={100}>100 per page</option>\n        <option value={500}>500 per page</option>\n      </select>\n    </div>\n  )\n}\n","import ColumnResizer from 'column-resizer'\nimport { cloneDeep, eq } from 'lodash-es'\nimport * as React from 'react'\nimport { Modal } from 'react-bootstrap'\nimport NoData from '../../assets/icons/NoData'\nimport { SynapseClient } from '../../utils'\nimport {\n  hasFilesInView,\n  isDataset,\n  isEntityView,\n} from '../../utils/functions/EntityTypeUtils'\nimport { PRODUCTION_ENDPOINT_CONFIG } from '../../utils/functions/getEndpoint'\nimport { getUserProfileWithProfilePicAttached } from '../../utils/functions/getUserData'\nimport { isGroupByInSql } from '../../utils/functions/sqlFunctions'\nimport { SynapseContextType } from '../../utils/SynapseContext'\nimport {\n  ColumnModel,\n  ColumnType,\n  EntityHeader,\n  FacetColumnRequest,\n  FacetColumnResult,\n  FacetColumnResultValues,\n  QueryBundleRequest,\n  ReferenceList,\n  Row,\n  SelectColumn,\n  SortItem,\n  UserGroupHeader,\n  UserProfile,\n} from '../../utils/synapseTypes/'\nimport AddToDownloadListV2 from '../AddToDownloadListV2'\nimport { LabelLinkConfig } from '../CardContainerLogic'\nimport DirectDownload from '../DirectDownload'\nimport { HasAccessV2 } from '../HasAccessV2'\nimport loadingScreen from '../LoadingScreen'\nimport ModalDownload from '../ModalDownload'\nimport { QueryVisualizationContextType } from '../QueryVisualizationWrapper'\nimport { QueryContextType } from '../QueryContext'\nimport { Icon } from '../row_renderers/utils'\nimport { SynapseTableCell } from '../synapse_table_functions/SynapseTableCell'\nimport TotalQueryResults from '../TotalQueryResults'\nimport { Checkbox } from '../widgets/Checkbox'\nimport { EnumFacetFilter } from '../widgets/query-filter/EnumFacetFilter'\nimport {\n  applyChangesToValuesColumn,\n  applyMultipleChangesToValuesColumn,\n} from '../widgets/query-filter/QueryFilter'\nimport { unCamelCase } from './../../utils/functions/unCamelCase'\nimport SearchResultsNotFound from './SearchResultsNotFound'\nimport { ICON_STATE } from './SynapseTableConstants'\nimport {\n  getColumnIndiciesWithType,\n  getCountFunctionColumnIndices,\n  getSqlUnderlyingDataForRow,\n  getUniqueEntities,\n} from './SynapseTableUtils'\nimport { TablePagination } from './TablePagination'\n\nexport const EMPTY_HEADER: EntityHeader = {\n  id: '',\n  name: '',\n  type: 'org.sagebionetworks.repo.model.FileEntity',\n  versionNumber: -1,\n  versionLabel: '',\n  benefactorId: -1,\n  createdBy: '',\n  createdOn: '',\n  modifiedBy: '',\n  modifiedOn: '',\n}\n\ntype Direction = '' | 'ASC' | 'DESC'\nexport const SORT_STATE: Direction[] = ['', 'DESC', 'ASC']\nexport const DOWNLOAD_OPTIONS_CONTAINER_CLASS = 'SRC-download-options-container'\nconst RESIZER_OPTIONS: any = {\n  resizeMode: 'overflow',\n  partialRefresh: 'true',\n  liveDrag: true,\n  headerOnly: 'true',\n}\ntype Info = {\n  index: number\n  name: string\n}\n\nexport type SynapseTableState = {\n  sortedColumnSelection: SortItem[]\n  columnIconSortState: number[]\n  isExportTableDownloadOpen: boolean\n  isExpanded: boolean\n  mapEntityIdToHeader: Record<string, EntityHeader>\n  mapUserIdToHeader: Record<string, Partial<UserGroupHeader & UserProfile>>\n  isColumnSelectionOpen: boolean\n  isFetchingEntityHeaders: boolean\n}\n\nexport type SynapseTableProps = {\n  synapseContext: SynapseContextType\n  queryContext: QueryContextType\n  queryVisualizationContext: QueryVisualizationContextType\n  title?: string\n  showAccessColumn?: boolean\n  showDownloadColumn?: boolean\n  columnLinks?: LabelLinkConfig\n  hideDownload?: boolean\n  isRowSelectionVisible?: boolean\n  /**\n   * If true, columns created by the COUNT function will render with a link to Synapse that opens the disaggregated query results filtered by the conditions of that row.\n   * Note that this is very brittle and only supports one column at a time. See SWC-6075 for more information. Default false.\n   */\n  linkCountToDisaggregatedQuery?: boolean\n}\n\nexport default class SynapseTable extends React.Component<\n  SynapseTableProps,\n  SynapseTableState\n> {\n  constructor(props: SynapseTableProps) {\n    super(props)\n    this.componentDidMount = this.componentDidMount.bind(this)\n    this.componentWillUnmount = this.componentWillUnmount.bind(this)\n    this.componentDidUpdate = this.componentDidUpdate.bind(this)\n    this.shouldComponentUpdate = this.shouldComponentUpdate.bind(this)\n    this.handleColumnSortPress = this.handleColumnSortPress.bind(this)\n    this.findSelectionIndex = this.findSelectionIndex.bind(this)\n    this.toggleColumnSelection = this.toggleColumnSelection.bind(this)\n    this.advancedSearch = this.advancedSearch.bind(this)\n    this.getLengthOfPropsData = this.getLengthOfPropsData.bind(this)\n    this.configureFacetDropdown = this.configureFacetDropdown.bind(this)\n    this.enableResize = this.enableResize.bind(this)\n    this.disableResize = this.disableResize.bind(this)\n    this.isEntityViewOrDataset = this.isEntityViewOrDataset.bind(this)\n    this.allRowsHaveId = this.allRowsHaveId.bind(this)\n\n    // store the offset and sorted selection that is currently held\n    this.state = {\n      /* columnIconSortState tells what icon to display for a table\n         header. There are three states for a particular header-\n          0 - show descending icon but *deselected*\n          1 - show descending icon selected\n          2 - show ascending icon selected\n      */\n      columnIconSortState: [],\n      isExportTableDownloadOpen: false,\n      isExpanded: false,\n      isColumnSelectionOpen: false,\n      // sortedColumnSelection contains the columns which are\n      // selected currently and their sort status as eithet\n      // off, desc, or asc.\n      sortedColumnSelection: [],\n      mapEntityIdToHeader: {},\n      mapUserIdToHeader: {},\n      isFetchingEntityHeaders: false,\n    }\n    this.getEntityHeadersInData = this.getEntityHeadersInData.bind(this)\n  }\n\n  // instance variables\n  resizer: any\n  tableElement: HTMLTableElement | null | undefined = undefined\n\n  componentWillUnmount() {\n    this.disableResize()\n  }\n\n  componentDidMount() {\n    this.getEntityHeadersInData(true)\n    this.enableResize()\n  }\n\n  shouldComponentUpdate(\n    nextProps: SynapseTableProps,\n    nextState: Readonly<SynapseTableState>,\n  ): boolean {\n    // ignore isFetching state variables when checking for change in state\n    const {\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      isFetchingEntityHeaders: oldIsFetchingEntityHeaders,\n      ...oldState\n    } = this.state\n    const {\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      isFetchingEntityHeaders: newIsFetchingEntityHeaders,\n      ...newState\n    } = nextState\n    const isPropsChange = !eq(this.props, nextProps)\n    const isStateChange = !eq(oldState, newState)\n    const shouldComponentUpdate = isPropsChange || isStateChange\n    if (shouldComponentUpdate) {\n      this.disableResize()\n    }\n    return shouldComponentUpdate\n  }\n  componentDidUpdate(\n    prevProps: SynapseTableProps,\n    prevState: Readonly<SynapseTableState>,\n  ) {\n    // PORTALS-2081: if the data changed, then get the new entity headers\n    if (!eq(prevProps.queryContext.data, this.props.queryContext.data)) {\n      this.getEntityHeadersInData(false)\n    } else if (\n      prevProps.queryContext.entity &&\n      this.props.queryContext.entity &&\n      !eq(\n        isEntityView(prevProps.queryContext.entity),\n        isEntityView(this.props.queryContext.entity),\n      )\n    ) {\n      // if we determined that this is an entity view, force refresh the entity headers (for Views we need to get the rowIds!)\n      this.getEntityHeadersInData(true)\n    }\n    this.enableResize()\n  }\n\n  enableResize() {\n    if (!this.resizer) {\n      // only create the resizer if the tableElement is in the DOM and there's more than one select column in the data.\n      if (this.tableElement && this.getLengthOfPropsData() > 1) {\n        this.resizer = new ColumnResizer(this.tableElement, RESIZER_OPTIONS)\n      }\n    } else {\n      // TODO: use event driven solution instead of timeout.\n      // We need to give SynapseTableCell time to render (which will change the column size).\n      // Alternatively, we may be able to use SizeMe (or withSize() on Cell component) to respond to width change.\n      setTimeout(() => {\n        this.resizer.reset(RESIZER_OPTIONS)\n      }, 1000)\n    }\n  }\n\n  disableResize() {\n    if (this.resizer) {\n      this.resizer.reset({ disable: true })\n    }\n  }\n\n  public async getEntityHeadersInData(forceRefresh: boolean) {\n    const { data, entity } = this.props.queryContext\n    if (!data || !entity) {\n      return\n    } else if (this.state.isFetchingEntityHeaders && !forceRefresh) {\n      return\n    }\n    const mapEntityIdToHeader = cloneDeep(this.state.mapEntityIdToHeader)\n    const mapUserIdToHeader = cloneDeep(this.state.mapUserIdToHeader)\n    const entityIdColumnIndicies = getColumnIndiciesWithType(\n      data,\n      ColumnType.ENTITYID,\n    )\n    const userIdColumnIndicies = getColumnIndiciesWithType(\n      data,\n      ColumnType.USERID,\n    )\n\n    const distinctEntityIds = getUniqueEntities(\n      data,\n      mapEntityIdToHeader,\n      entityIdColumnIndicies,\n    )\n    // also include row entity ids if this is a view (it's possible that the ID column was not selected)\n    if (this.isEntityViewOrDataset() && this.allRowsHaveId()) {\n      const { queryResult } = data\n      const { queryResults } = queryResult\n      const { rows } = queryResults\n      rows.forEach((row: Row) => {\n        const rowSynapseId = `syn${row.rowId}`\n        distinctEntityIds.add(rowSynapseId)\n      })\n    }\n    const distinctUserIds = getUniqueEntities(\n      data,\n      mapUserIdToHeader,\n      userIdColumnIndicies,\n    )\n    if (distinctEntityIds.size === 0 && distinctUserIds.size === 0) {\n      return\n    }\n    this.setState({\n      isFetchingEntityHeaders: true,\n    })\n    // Make call to resolve entity ids\n    if (distinctEntityIds.size > 0) {\n      const referenceList: ReferenceList = Array.from(distinctEntityIds).map(\n        id => {\n          return { targetId: id }\n        },\n      )\n      try {\n        // initialize mapEntityIdToHeader\n        referenceList.forEach(el => {\n          mapEntityIdToHeader[el.targetId] = EMPTY_HEADER\n        })\n        const data = await SynapseClient.getEntityHeaders(\n          referenceList,\n          this.props.synapseContext.accessToken,\n        )\n        const { results } = data\n        results.forEach(el => {\n          mapEntityIdToHeader[el.id] = el\n        })\n      } catch (err) {\n        console.error('Error on retrieving entity header list , ', err)\n      }\n    }\n    const userProfileIds: string[] = []\n    if (distinctUserIds.size > 0) {\n      // Make call to get group headers and user profiles\n      const ids = Array.from(distinctUserIds)\n      // TODO: Grab Team Badge\n      try {\n        const data = await SynapseClient.getGroupHeadersBatch(\n          ids,\n          this.props.synapseContext.accessToken,\n        )\n        data.children.forEach(el => {\n          if (el.isIndividual) {\n            userProfileIds.push(el.ownerId)\n          } else {\n            mapUserIdToHeader[el.ownerId] = el\n          }\n        })\n      } catch (err) {\n        console.error('Error on getGroupHeaders batch: ', err)\n      }\n    }\n    if (userProfileIds.length > 0) {\n      try {\n        const data = await getUserProfileWithProfilePicAttached(userProfileIds)\n        data.list.forEach((el: UserProfile) => {\n          mapUserIdToHeader[el.ownerId] = el\n        })\n      } catch (err) {\n        console.error('Error on getUserProfile : ', err)\n      }\n    }\n    this.setState({\n      mapEntityIdToHeader,\n      mapUserIdToHeader,\n      isFetchingEntityHeaders: false,\n    })\n  }\n\n  /**\n   * Display the view\n   */\n  public render() {\n    if (\n      !this.props.queryContext.data &&\n      this.props.queryContext.isLoadingNewBundle\n    ) {\n      return loadingScreen\n    } else if (!this.props.queryContext.data) {\n      return <></>\n    }\n    // unpack all the data\n    const {\n      queryContext: { data },\n      queryVisualizationContext: { topLevelControlsState, unitDescription },\n    } = this.props\n    const { queryResult, columnModels = [] } = data\n    const { queryResults } = queryResult\n    const { rows } = queryResults\n    const { headers } = queryResults\n    const { facets = [] } = data\n    const { isExpanded, isExportTableDownloadOpen } = this.state\n    const queryRequest = this.props.queryContext.getLastQueryRequest()\n    const { showFacetFilter } = topLevelControlsState\n    let className = ''\n    const hasResults = data.queryResult.queryResults.rows.length > 0\n    // Show the No Results UI if the current page has no rows, and this is the first page of data (offset === 0).\n    if (!hasResults && queryRequest.query.offset === 0) {\n      if (queryRequest.query.additionalFilters) {\n        return <SearchResultsNotFound />\n      } else {\n        return (\n          <div className=\"text-center SRCBorderedPanel SRCBorderedPanel--padded2x\">\n            {NoData}\n            <div style={{ marginTop: '20px', fontStyle: 'italic' }}>\n              This table is currently empty\n            </div>\n          </div>\n        )\n      }\n    }\n    const table = (\n      <div>{this.renderTable(headers, columnModels, facets, rows)}</div>\n    )\n    const content = (\n      <>\n        <div className={className}>\n          {isExportTableDownloadOpen && (\n            <ModalDownload\n              onClose={() => {\n                this.setState({\n                  isExportTableDownloadOpen: false,\n                })\n              }}\n              queryBundleRequest={queryRequest}\n            />\n          )}\n          {!showFacetFilter &&\n            unitDescription &&\n            !isGroupByInSql(queryRequest.query.sql) && (\n              <div\n                className={`SRC-centerContent text-left`}\n                style={{ minHeight: '20px' }}\n              >\n                <TotalQueryResults\n                  style={{ fontSize: 15 }}\n                  frontText={'Showing'}\n                  applyChanges={(newFacets: FacetColumnRequest[]) =>\n                    this.applyChangesFromQueryFilter(newFacets)\n                  }\n                />\n              </div>\n            )}\n          {/* FRAGILE, CHANGE WITH CAUTION, see - https://sagebionetworks.jira.com/browse/PORTALS-1539 */}\n          <div>{table}</div>\n        </div>\n      </>\n    )\n    return (\n      <React.Fragment>\n        {isExpanded && (\n          <Modal\n            animation={false}\n            show={true}\n            // @ts-ignore\n            onHide={() => this.setState({ isExpanded: false })}\n            dialogClassName={'modal-90w'}\n            backdrop=\"static\"\n          >\n            <Modal.Header\n              // @ts-ignore\n              onHide={() => this.setState({ isExpanded: false })}\n              closeButton={true}\n            ></Modal.Header>\n            <Modal.Body>{content}</Modal.Body>\n          </Modal>\n        )}\n        {!isExpanded && content}\n      </React.Fragment>\n    )\n  }\n\n  /**\n   * If this is a view/dataset and rows have an ID, then rows represent individual objects in Synapse.\n   * Presence of row IDs also indicates that the query is also necessarily not summary data, e.g. the query does\n   * not include an operation like GROUP BY, DISTINCT, etc., that would cause rows to not map 1:1 to Synapse Entities\n   */\n  private allRowsHaveId(): boolean {\n    const {\n      queryContext: { data },\n    } = this.props\n    return (\n      data?.queryResult.queryResults.rows.every(row => !!row.rowId) ?? false\n    )\n  }\n\n  private isEntityViewOrDataset(): boolean {\n    const {\n      queryContext: { entity },\n    } = this.props\n    return (entity && (isEntityView(entity) || isDataset(entity))) ?? false\n  }\n\n  private showGroupRowData = (selectedRow: Row) => {\n    // magic happens - parse query, deep copy query bundle request, modify, encode, send to Synapse.org.  Easy!\n    const queryCopy = this.props.queryContext.getLastQueryRequest().query\n    const parsed = getSqlUnderlyingDataForRow(\n      selectedRow,\n      queryCopy.sql,\n      this.props.queryContext.data,\n    )\n    queryCopy.sql = parsed.newSql\n    const queryJSON = JSON.stringify(queryCopy)\n    // encode this copy of the query (json)\n    const encodedQuery = btoa(queryJSON)\n    return `${PRODUCTION_ENDPOINT_CONFIG.PORTAL}#!Synapse:${parsed.synId}/tables/query/${encodedQuery}`\n  }\n\n  private renderTable = (\n    headers: SelectColumn[],\n    columnModels: ColumnModel[],\n    facets: FacetColumnResult[],\n    rows: Row[],\n  ) => {\n    const lastQueryRequest = this.props.queryContext.getLastQueryRequest?.()!\n    // handle displaying the previous button -- if offset is zero then it\n    // shouldn't be displayed\n    const {\n      queryContext: { entity },\n      showAccessColumn,\n      showDownloadColumn,\n      isRowSelectionVisible,\n    } = this.props\n\n    /**\n     * i.e. the view may have FileEntities in it\n     *\n     * PORTALS-2010:  Enhance change made for PORTALS-1973.  File specific action will only be shown for rows that represent FileEntities.\n     */\n    const isFileViewOrDataset =\n      entity &&\n      ((isEntityView(entity) && hasFilesInView(entity)) || isDataset(entity))\n\n    const isShowingAccessColumn: boolean | undefined =\n      showAccessColumn &&\n      entity &&\n      this.isEntityViewOrDataset() &&\n      this.allRowsHaveId()\n    const isLoggedIn = !!this.props.synapseContext.accessToken\n\n    const rowsAreDownloadable =\n      entity && isFileViewOrDataset && isLoggedIn && this.allRowsHaveId()\n\n    const isShowingAddToV2DownloadListColumn: boolean = !!(\n      rowsAreDownloadable && !this.props.hideDownload\n    )\n\n    const isShowingDirectDownloadColumn =\n      rowsAreDownloadable && showDownloadColumn\n\n    /* min height ensure if no rows are selected that a dropdown menu is still accessible */\n    return (\n      <div className=\"SynapseTable SRC-overflowAuto\" data-testid=\"SynapseTable\">\n        <table\n          ref={node => (this.tableElement = node)}\n          className=\"table table-striped table-condensed\"\n        >\n          <thead className=\"SRC_bordered\">\n            <tr>\n              {this.createTableHeader(\n                headers,\n                columnModels,\n                facets,\n                isShowingAccessColumn,\n                isShowingDirectDownloadColumn,\n                isShowingAddToV2DownloadListColumn,\n                isRowSelectionVisible,\n                lastQueryRequest,\n              )}\n            </tr>\n          </thead>\n          <tbody>\n            {this.createTableRows(\n              rows,\n              headers,\n              isShowingAccessColumn,\n              isShowingDirectDownloadColumn,\n              isShowingAddToV2DownloadListColumn,\n              isRowSelectionVisible,\n            )}\n          </tbody>\n        </table>\n        <div className=\"bootstrap-4-backport\" style={{ textAlign: 'right' }}>\n          <TablePagination />\n        </div>\n      </div>\n    )\n  }\n\n  /**\n   * Handle a column having been selected\n   *\n   * @memberof SynapseTable\n   */\n  public handleColumnSortPress = (dict: Info) => (_: React.SyntheticEvent) => {\n    // by using Synthetic event we can use the handler on both key press and mouse click\n    let columnIconSortState = cloneDeep(this.state.columnIconSortState)\n    if (columnIconSortState.length === 0) {\n      columnIconSortState = Array(this.getLengthOfPropsData()).fill(0)\n    }\n    // get currently sorted items and remove/insert/update this selection\n    const sortedColumnSelection = cloneDeep(this.state.sortedColumnSelection)\n    const index = this.findSelectionIndex(sortedColumnSelection, dict.name)\n    // if its present then remove it\n    if (index !== -1) {\n      sortedColumnSelection.splice(index, 1)\n    }\n    columnIconSortState[dict.index] =\n      (columnIconSortState[dict.index] + 1) % ICON_STATE.length\n    if (columnIconSortState[dict.index] > 0) {\n      sortedColumnSelection.unshift({\n        column: dict.name,\n        direction: SORT_STATE[columnIconSortState[dict.index]],\n      })\n    }\n    const queryRequest = this.props.queryContext.getLastQueryRequest()\n    queryRequest.query.sort = sortedColumnSelection\n    queryRequest.query.offset = 0\n    this.props.queryContext.executeQueryRequest(queryRequest)\n    this.setState({\n      columnIconSortState,\n      sortedColumnSelection,\n    })\n  }\n\n  private createTableRows(\n    rows: Row[],\n    headers: SelectColumn[],\n    isShowingAccessColumn: boolean | undefined,\n    isShowingDownloadColumn: boolean | undefined,\n    isShowingAddToV2DownloadListColumn: boolean,\n    isRowSelectionVisible: boolean | undefined,\n  ) {\n    const rowsFormatted: JSX.Element[] = []\n    const {\n      queryContext: { data },\n      queryVisualizationContext: {\n        columnsToShowInTable,\n        selectedRowIndices,\n        setSelectedRowIndices,\n      },\n      columnLinks = [],\n      linkCountToDisaggregatedQuery = false,\n    } = this.props\n    const { selectColumns = [], columnModels = [] } = data!\n    const { mapEntityIdToHeader, mapUserIdToHeader } = this.state\n    // find column indices that are COUNT type\n    const countColumnIndexes = getCountFunctionColumnIndices(\n      this.props.queryContext.getLastQueryRequest().query.sql,\n    )\n\n    rows.forEach((row, rowIndex) => {\n      const entityVersionNumber = row.versionNumber?.toString()\n      const rowSynapseId = `syn${row.rowId}`\n\n      const rowContent = row.values.map(\n        (columnValue: string, colIndex: number) => {\n          const columnName = headers[colIndex].name\n          const isColumnActive = columnsToShowInTable.includes(columnName)\n          const columnLinkConfig = columnLinks.find(el => {\n            return el.matchColumnName === columnName\n          })\n          const index = this.findSelectionIndex(\n            this.state.sortedColumnSelection,\n            columnName,\n          )\n          const isCountColumn = countColumnIndexes.includes(colIndex)\n          const linkToDisaggregatedQuery =\n            isCountColumn && linkCountToDisaggregatedQuery\n          const isBold = index === -1 ? '' : 'SRC-boldText'\n          if (isColumnActive) {\n            return (\n              <td\n                className=\"SRC_noBorderTop SRC-synapseTableTd\"\n                key={`(${rowIndex}${columnValue}${colIndex})`}\n              >\n                {linkToDisaggregatedQuery ? (\n                  <a\n                    href={this.showGroupRowData(row)}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                  >\n                    <p className={isBold}>{columnValue}</p>\n                  </a>\n                ) : (\n                  <SynapseTableCell\n                    columnType={headers[colIndex].columnType}\n                    columnValue={columnValue}\n                    isBold={isBold}\n                    mapEntityIdToHeader={mapEntityIdToHeader}\n                    mapUserIdToHeader={mapUserIdToHeader}\n                    rowIndex={rowIndex}\n                    columnLinkConfig={columnLinkConfig}\n                    columnName={columnName}\n                    rowData={row.values}\n                    selectColumns={selectColumns}\n                    columnModels={columnModels}\n                    rowId={row.rowId}\n                    rowVersionNumber={row.versionNumber}\n                  />\n                )}\n              </td>\n            )\n          }\n          return <td className=\"SRC-hidden\" key={`(${rowIndex},${colIndex})`} />\n        },\n      )\n\n      // also push the access column value if we are showing user access for individual items (still shown if not logged in)\n      if (isShowingAccessColumn) {\n        rowContent.unshift(\n          <td key={rowSynapseId} className=\"SRC_noBorderTop\">\n            <HasAccessV2\n              key={rowSynapseId}\n              entityId={rowSynapseId}\n              entityVersionNumber={entityVersionNumber}\n            />\n          </td>,\n        )\n      }\n      const isFileEntity: boolean =\n        mapEntityIdToHeader[rowSynapseId]?.type ==\n        'org.sagebionetworks.repo.model.FileEntity'\n      if (isShowingDownloadColumn) {\n        // SWC-5790: If this is a FileEntity, the download icon should just go to entity page\n        rowContent.unshift(\n          <td\n            key={`direct-download-${rowSynapseId}`}\n            className=\"SRC_noBorderTop direct-download\"\n          >\n            {isFileEntity && (\n              <DirectDownload\n                associatedObjectId={rowSynapseId}\n                entityVersionNumber={entityVersionNumber}\n              ></DirectDownload>\n            )}\n          </td>,\n        )\n      }\n      if (isShowingAddToV2DownloadListColumn) {\n        rowContent.unshift(\n          <td\n            key={`add-to-download-list-v2-${rowSynapseId}`}\n            className=\"SRC_noBorderTop add-to-download-list-v2\"\n          >\n            {isFileEntity && (\n              <AddToDownloadListV2\n                entityId={rowSynapseId}\n                entityVersionNumber={parseInt(entityVersionNumber!)}\n              ></AddToDownloadListV2>\n            )}\n          </td>,\n        )\n      }\n\n      if (isRowSelectionVisible && selectedRowIndices) {\n        rowContent.unshift(\n          <td key={`(${rowIndex},rowSelectColumn)`} className=\"SRC_noBorderTop\">\n            <Checkbox\n              label=\"\"\n              checked={selectedRowIndices.includes(rowIndex)}\n              onChange={(checked: boolean) => {\n                const cloneSelectedRowIndices = [...selectedRowIndices]\n                if (checked) {\n                  cloneSelectedRowIndices.push(rowIndex)\n                } else {\n                  const index = cloneSelectedRowIndices.indexOf(rowIndex)\n                  if (index > -1) {\n                    cloneSelectedRowIndices.splice(index, 1)\n                  }\n                }\n                // update context on change\n                setSelectedRowIndices(cloneSelectedRowIndices)\n              }}\n            ></Checkbox>\n          </td>,\n        )\n      }\n\n      const rowFormatted = <tr key={row.rowId ?? rowIndex}>{rowContent}</tr>\n      rowsFormatted.push(rowFormatted)\n    })\n    return rowsFormatted\n  }\n\n  public isSortableColumn(column: ColumnType) {\n    switch (column) {\n      case ColumnType.USERID:\n      case ColumnType.ENTITYID:\n      case ColumnType.FILEHANDLEID:\n        return false\n      default:\n        return true\n    }\n  }\n\n  private createTableHeader(\n    headers: SelectColumn[],\n    columnModels: ColumnModel[],\n    facets: FacetColumnResult[],\n    isShowingAccessColumn: boolean | undefined,\n    isShowingDownloadColumn: boolean | undefined,\n    isShowingAddToV2DownloadListColumn: boolean,\n    isRowSelectionVisible: boolean | undefined,\n    lastQueryRequest: QueryBundleRequest,\n  ) {\n    const { sortedColumnSelection, columnIconSortState } = this.state\n    const {\n      queryVisualizationContext: { facetAliases = {}, columnsToShowInTable },\n      queryContext: { lockedFacet },\n    } = this.props\n    const tableColumnHeaderElements: JSX.Element[] = headers.map(\n      (column: SelectColumn, index: number) => {\n        const isHeaderSelected = columnsToShowInTable.includes(column.name)\n        if (isHeaderSelected) {\n          // for background color\n          const isSelected: boolean =\n            this.findSelectionIndex(sortedColumnSelection, column.name) !== -1\n          // for icon state\n          const columnIndex: number =\n            columnIconSortState[index] === undefined\n              ? 0\n              : columnIconSortState[index]\n          // we have to figure out if the current column is a facet selection\n          const facetIndex: number = facets.findIndex(\n            (facetColumnResult: FacetColumnResult) => {\n              return facetColumnResult.columnName === column.name\n            },\n          )\n          // the header must be included in the facets and it has to be enumerable for current rendering capabilities\n          const isFacetSelection: boolean =\n            facetIndex !== -1 && facets[facetIndex].facetType === 'enumeration'\n          const facet = facets[facetIndex] as FacetColumnResultValues\n          const isSelectedSpanClass = isSelected\n            ? 'SRC-primary-background-color SRC-anchor-light'\n            : ''\n          const isSelectedIconClass = isSelected\n            ? 'SRC-selected-table-icon tool-icon'\n            : 'SRC-primary-text-color tool-icon'\n          const sortSpanBackgoundClass = `SRC-tableHead SRC-hand-cursor SRC-sortPadding SRC-primary-background-color-hover  ${isSelectedSpanClass}`\n          const displayColumnName: string | undefined = unCamelCase(\n            column.name,\n            facetAliases,\n          )\n          const columnModel = columnModels.find(el => el.name === column.name)!\n          const isLockedFacetColumn =\n            column.name.toLowerCase() === lockedFacet?.facet?.toLowerCase() // used in details page to disable filter the column\n          return (\n            <th key={column.name}>\n              <div className=\"SRC-split\">\n                <span style={{ whiteSpace: 'nowrap' }}>\n                  {displayColumnName}\n                </span>\n                <div className=\"SRC-centerContent\">\n                  {isFacetSelection &&\n                    !isLockedFacetColumn &&\n                    this.configureFacetDropdown(\n                      facet,\n                      columnModel,\n                      lastQueryRequest,\n                      facetAliases,\n                    )}\n                  {this.isSortableColumn(column.columnType) && (\n                    <span\n                      role=\"button\"\n                      aria-label=\"sort\"\n                      tabIndex={0}\n                      className={sortSpanBackgoundClass}\n                      onKeyPress={this.handleColumnSortPress({\n                        index,\n                        name: column.name,\n                      })}\n                      onClick={this.handleColumnSortPress({\n                        index,\n                        name: column.name,\n                      })}\n                    >\n                      <Icon\n                        type={ICON_STATE[columnIndex]}\n                        cssClass={isSelectedIconClass}\n                      ></Icon>\n                    </span>\n                  )}\n                </div>\n              </div>\n            </th>\n          )\n        } else {\n          return <th className=\"SRC-hidden\" key={column.name} />\n        }\n      },\n    )\n    // also push the access column if we are showing user access for individual items (must be logged in)\n    if (isShowingAccessColumn) {\n      tableColumnHeaderElements.unshift(\n        <th key=\"accessColumn\">\n          <div className=\"SRC-centerContent\">\n            <span style={{ whiteSpace: 'nowrap' }}>Access</span>\n          </div>\n        </th>,\n      )\n    }\n    // add direct download column if logged in\n    if (isShowingDownloadColumn) {\n      tableColumnHeaderElements.unshift(\n        <th key=\"downloadColumn\">\n          <div className=\"SRC-centerContent\">&nbsp;</div>\n        </th>,\n      )\n    }\n    if (isShowingAddToV2DownloadListColumn) {\n      tableColumnHeaderElements.unshift(\n        <th\n          data-testid=\"AddToDownloadListV2ColumnHeader\"\n          key=\"addToV2DownloadListColumn\"\n        >\n          <div className=\"SRC-centerContent\">&nbsp;</div>\n        </th>,\n      )\n    }\n    if (isRowSelectionVisible) {\n      tableColumnHeaderElements.unshift(\n        <th key=\"rowSelectionColumn\">\n          <div className=\"SRC-centerContent\">{/* checkboxes column */}</div>\n        </th>,\n      )\n    }\n    return tableColumnHeaderElements\n  }\n\n  /**\n   * Utility to search through array of objects and find object with key \"column\"\n   * equal to input parameter \"name\"\n   *\n   * @param {*} sortedColumnSelection\n   * @param {*} name\n   * @returns -1 if not present, otherwise the index of the object\n   * @memberof SynapseTable\n   */\n  private findSelectionIndex(sortedColumnSelection: SortItem[], name: string) {\n    if (sortedColumnSelection.length !== 0) {\n      // find if the current selection exists already and remove it\n      return sortedColumnSelection.findIndex(\n        (el: SortItem) => el.column === name,\n      )\n    }\n    return -1\n  }\n\n  // Direct user to corresponding query on synapse\n  private advancedSearch(event: React.SyntheticEvent) {\n    event && event.preventDefault()\n    const lastQueryRequest = this.props.queryContext.getLastQueryRequest()\n    const { query } = lastQueryRequest\n    // base 64 encode the json of the query and go to url with the encoded object\n    const encodedQuery = btoa(JSON.stringify(query))\n    const synTable = lastQueryRequest.entityId\n    window.open(\n      `${PRODUCTION_ENDPOINT_CONFIG.PORTAL}#!Synapse:${synTable}/tables/query/${encodedQuery}`,\n      '_blank',\n    )\n  }\n\n  private getLengthOfPropsData() {\n    const { data } = this.props.queryContext\n    return data!.queryResult.queryResults.headers.length\n  }\n  /**\n   * Handles the toggle of a column select, this will cause the table to\n   * either show the column or hide depending on the prior state of the column\n   *\n   * @memberof SynapseTable\n   */\n  public toggleColumnSelection = (columnName: string) => {\n    const {\n      queryVisualizationContext: {\n        columnsToShowInTable,\n        setColumnsToShowInTable,\n      },\n    } = this.props\n    let columnsToShowInTableCopy = cloneDeep(columnsToShowInTable)\n    if (columnsToShowInTableCopy.includes(columnName)) {\n      columnsToShowInTableCopy = columnsToShowInTableCopy.filter(\n        el => el !== columnName,\n      )\n    } else {\n      columnsToShowInTableCopy.push(columnName)\n    }\n    setColumnsToShowInTable(columnsToShowInTableCopy)\n  }\n\n  /**\n   * Show the dropdown menu for a column that has been faceted\n   *\n   * @param {number} index this is column index of the query table data\n   * @param {string} columnName this is the name of the column\n   * @param {FacetColumnResult[]} facetColumnResults\n   * @param {number} facetIndex\n   * @returns\n   * @memberof SynapseTable\n   */\n  public configureFacetDropdown(\n    facetColumnResult: FacetColumnResultValues,\n    columnModel: ColumnModel,\n    lastQueryRequest: QueryBundleRequest,\n    facetAliases?: Record<string, string>,\n  ) {\n    return (\n      <EnumFacetFilter\n        containerAs=\"Dropdown\"\n        facetValues={facetColumnResult.facetValues}\n        columnModel={columnModel}\n        facetAliases={facetAliases}\n        onChange={(facetNamesMap: Record<string, string>) => {\n          applyMultipleChangesToValuesColumn(\n            lastQueryRequest,\n            facetColumnResult,\n            this.applyChangesFromQueryFilter,\n            facetNamesMap,\n          )\n        }}\n        onClear={() => {\n          applyChangesToValuesColumn(\n            lastQueryRequest,\n            facetColumnResult,\n            this.applyChangesFromQueryFilter,\n          )\n        }}\n      />\n    )\n  }\n\n  public applyChangesFromQueryFilter = (facets: FacetColumnRequest[]) => {\n    const queryRequest: QueryBundleRequest =\n      this.props.queryContext.getLastQueryRequest()\n    queryRequest.query.selectedFacets = facets\n    queryRequest.query.offset = 0\n    this.props.queryContext.executeQueryRequest(queryRequest)\n  }\n}\n","import moment from 'moment'\nimport React from 'react'\nimport { formatDate } from '../../utils/functions/DateFormatter'\nimport Typography from '../../utils/typography/Typography'\nimport { useQueryVisualizationContext } from '../QueryVisualizationWrapper'\nimport { useQueryContext } from '../QueryContext'\n\nexport default function LastUpdatedOn() {\n  const { data } = useQueryContext()\n  const { showLastUpdatedOn } = useQueryVisualizationContext()\n  return showLastUpdatedOn && data && data.lastUpdatedOn ? (\n    <div\n      style={{\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'flex-end',\n      }}\n    >\n      <Typography variant=\"body2\">\n        Last updated on {formatDate(moment(data.lastUpdatedOn))}\n      </Typography>\n    </div>\n  ) : (\n    <></>\n  )\n}\n"],"names":["React","styles","PaginationItem","useRef","helpUrl","executeQueryRequest","getLastQueryRequest","showSearchBar","showFacetFilter","useState","event","searchInputRef","searchText","additionalFilters","lastQueryRequestDeepClone","setSearchText","_jsx","QUERY_FILTERS_COLLAPSED_CSS","_jsxs","search","MIN_SEARCH_QUERY_LENGTH","handleChange","helpMessage","handleSubmit","handleDownloadSetup","formData","queryBundleRequest","sql","selectedFacets","writeHeader","includeRowIdAndRowVersion","separator","SynapseClient","data","console","onDownload","window","csvOption","onClose","closeBtn","step","spinnerStyle","ModalDownload","handleClickOutsideForm","columnName","searchable","lockedFacet","HAS_LIKE","LIKE","value","columnType","FILEHANDLEID","ENTITYID","DATE","DATE_LIST","document","topLevelControlsState","facetAliases","show","searchColumns","searchFormRef","radioFormRef","name","isSelected","displayName","useEffect","helpMessageCopy","helpLink","showSqlEditor","setSql","inputRef","entity","id","BUNDLE_MASK_QUERY_COUNT","queryResult","isMissingResultsCalculable","_Fragment","queryResultBundle","onHide","useDeepCompareEffect","getData","query","columnModels","setGeneratedSql","commandLineSql","accessToken","onDownloadFiles","tooltipDownloadId","TOOLTIP_ID","setShowExportMetadata","undefined","disableDownload","DOWNLOAD_FILES_MENU_TEXT","showLoginModal","ProgrammaticTableDownload","headers","isColumnSelected","toggleColumnSelection","darkTheme","setShow","tooltipColumnSelectionId","maybeShowPrimaryColor","iconStyle","SQL_EDITOR","customControls","getInitQueryRequest","setTopLevelControlsState","columnsToShowInTable","selectedRowIndices","setColumnsToShowInTable","control","updatedTopLevelControlsState","state","columnsToShowInTableCopy","refresh","key","icon","tooltipText","selectColumns","this","entityId","entityVersionNumber","queryClient","displayToast","addToDownloadListV2","entityIdList","ref","inView","getEntityTypes","mounted","getEntityHeadersByIds","el","setEntityLinkArray","entityLinkArray","evaluationId","getEvaluationQueue","getEvaluation","setEvaluationName","evaluationName","userIds","getUserProfilesToRender","getUserProfiles","setProfileCards","profileCards","columnValue","isBold","mapEntityIdToHeader","mapUserIdToHeader","columnLinkConfig","rowIndex","rowData","rowId","rowVersionNumber","synId","TableEntity","jsonData","STRING_LIST","ownerId","userName","clientPreSignedURL","STRING","DOUBLE","INTEGER","BOOLEAN","noop","TablePagination","goToPage","pageSize","setPageSize","currentPage","usePaginatedQueryContext","queryCount","handlePage","handlePageSize","target","Pagination","Math","ceil","display","float","toLocaleString","padding","marginLeft","tableElement","queryCopy","encodedQuery","showAccessColumn","showDownloadColumn","isRowSelectionVisible","node","columnIconSortState","sortedColumnSelection","index","queryRequest","oldIsFetchingEntityHeaders","oldState","newIsFetchingEntityHeaders","newState","shouldComponentUpdate","setTimeout","queryResults","rows","distinctEntityIds","referenceList","EMPTY_HEADER","SynapseClient.getEntityHeaders","results","SynapseClient.getGroupHeadersBatch","userProfileIds","loadingScreen","unitDescription","isExpanded","isExportTableDownloadOpen","table","content","setSelectedRowIndices","values","versionNumber","rowContent","rowSynapseId","cloneSelectedRowIndices","rowsFormatted","column","USERID","displayColumnName","sortSpanBackgoundClass","columnIndex","isSelectedIconClass","tableColumnHeaderElements","length","facetValues","applyMultipleChangesToValuesColumn","applyChangesToValuesColumn","useQueryContext","showLastUpdatedOn","useQueryVisualizationContext","lastUpdatedOn","flexDirection","alignItems","formatDate","moment"],"mappings":"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"}