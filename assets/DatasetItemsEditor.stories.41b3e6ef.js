import{F as Q,A as X,B as ee,a as te,b as oe,D as re,c as ie,d as ae,C as ne,M as se,e as de,P as le,f as me}from"./EntityFinder.ee2d3c6f.js";import{R as ce}from"./index.es.82d55a6a.js";import{S as pe}from"./SkeletonTable.7fa04609.js";import{r as k}from"./FullWidthAlert.a054f15b.js";import{u as ue,h as fe,i as he}from"./useEntity.39bf15e4.js";import{E as ye}from"./EntityTypeUtils.4d68fa3a.js";import"./assert.e869b03f.js";import{T as P}from"./Typography.e08e7569.js";import{E as Ie}from"./EntityFinderModal.83a60589.js";import{I as Se}from"./IconSvg.d5022c82.js";import{W as Ee}from"./WarningModal.14601faa.js";import{d as D}from"./ToastMessage.574c0fe0.js";import{C as De}from"./Checkbox.995e1545.js";import{a as m,j as o,F as V}from"./jsx-runtime.2e925369.js";import{S as Ce}from"./Skeleton.bf1489f0.js";import{B as C}from"./Button.77571428.js";import"./iframe.639af492.js";import"./useUserBundle.6ae2c7f8.js";import"./objectWithoutPropertiesLoose.d29fb19f.js";import"./withStyles.4f64abe1.js";import"./toConsumableArray.5f669646.js";import"./index.7f0167ac.js";import"./getEndpoint.0de7fccf.js";import"./SvgIcon.1f1b3522.js";import"./index.f252d424.js";import"./FormLabel.a635baa2.js";import"./index.06f4a415.js";import"./createWithBsPrefix.f7715523.js";import"./Alert.ad748791.js";import"./Fade.7bfbed49.js";import"./Transition.f54f11c8.js";import"./_Uint8Array.692793fe.js";import"./isObject.7e2c8eb3.js";import"./isArray.949e1480.js";import"./react-sizeme.aefa7601.js";import"./Arrow.c6e8b887.js";import"./RegularExpressions.b87376bf.js";import"./use-deep-compare-effect.esm.9d3fc03b.js";import"./useGetEntityChildren.f794a140.js";import"./useInfiniteQuery.ca68d3ac.js";import"./queryKeys.e0d3085f.js";import"./EntityChildren.50133102.js";import"./stateManager-845a3300.esm.4bc2dc68.js";import"./classCallCheck.8304ed06.js";import"./inherits.428c75c6.js";import"./react-intersection-observer.m.66de6abb.js";import"./SchemaDrivenAnnotationEditor.5d25491f.js";import"./isEmpty.12a3904b.js";import"./_getTag.260cb500.js";import"./_setToArray.78d992a5.js";import"./LoadingScreen.85210ad1.js";import"./useTheme.735ed160.js";import"./Modal.739750b1.js";import"./useWaitForDOMRef.088a2ede.js";import"./useWillUnmount.4a16e5cd.js";import"./removeClass.27874bcb.js";import"./hasClass.56fd144a.js";import"./useListState.7f5a3e64.js";import"./createSvgIcon.53013205.js";import"./groupBy.99950cdf.js";import"./hasIn.d2b152d7.js";import"./isSymbol.a6e5b306.js";import"./uniqueId.4eca3697.js";import"./_baseMap.f1b7afdf.js";import"./_baseIsEqual.38511a1d.js";import"./_cacheHas.e524ea96.js";import"./moment.81704e1d.js";import"./CalendarWithIconFormGroup.7818de9e.js";import"./index.5ef2ed87.js";import"./index.8cde812d.js";import"./useEntityBundle.e9e6c8f6.js";import"./EntityModal.2475de47.js";import"./DateFormatter.f0682240.js";import"./ExternalFileHandleInterface.54478499.js";import"./UserCard.ae999ba6.js";import"./IconCopy.b1eba79c.js";import"./Overlay.5ce67f19.js";import"./usePopperMarginModifiers.09a60569.js";import"./HelpPopover.34139a08.js";import"./MarkdownPopover.7bb92178.js";import"./MarkdownSynapse.e437f9ff.js";import"./factory.48843cfe.js";import"./sqlFunctions.9bad0aa7.js";import"./SynapseVideo.95742da0.js";import"./LockTwoTone.5189d348.js";import"./EntityIcon.a2940bdd.js";import"./Clear.53a62cf5.js";import"./cloneDeep.af76ad30.js";import"./pick.b50dba87.js";import"./_baseSlice.50189bc5.js";import"./Dropdown.edf6576c.js";import"./isRequiredForA11y.61bbc671.js";import"./Sort.f3dc5539.js";import"./EntityLink.b5b61ed0.js";import"./useFavorites.22d5a9c4.js";import"./times.b2c1df9a.js";import"./toInteger.9c26e41e.js";import"./toNumber.81238efb.js";import"./debounce.6a99f8f3.js";import"./utils.ebacc06c.js";import"./TypeUtils.a2c41307.js";import"./makeStyles.5f6bad01.js";import"./InfoOutlined.748401db.js";const ge=window.React.useState;function be(c){const[p,u]=ge(new Set(c));function f(...y){const a=new Set(p);for(const T of y)a.add(T);u(a)}function v(y){const a=new Set(p);a.delete(y),u(a)}function d(){u(new Set)}return{set:p,add:f,remove:v,clear:d}}const Re=window.React.useEffect,R=window.React.useState,w="Add Files",we="Remove Files",ve="No files in this Dataset",M="Save the Dataset to continue.",Te="Create a Version of this Dataset to freeze it in its current state",_e="Dataset Saved",z=42,Ne=350;function g(c){var L;const{entityId:p,onSave:u,onClose:f}=c,[v,d]=R(!1),[y,a]=R(!1),[T,A]=R(!1),[r,K]=R(),b=e=>{A(!0),K(e)},{data:I,refetch:H}=ue(p,void 0,{enabled:!r});Re(()=>{!r&&I&&(I.items==null&&(I.items=[]),b(I),A(!1))},[I,r]);const{set:l,add:O,remove:j,clear:_}=be(),F=!!(r&&r.items.length===l.size),{data:N}=fe(p),$=(L=N==null?void 0:N.path[1])==null?void 0:L.id,W=he({onSuccess:()=>{u?u():D(Te,"success",{title:_e})},onError:e=>{e.status===412?D("Re-retrieve the dataset to get the latest changes. Your current changes will be lost.","warning",{title:"Dataset Updated since Last Fetched",primaryButtonConfig:{text:"Retrieve Dataset",onClick:()=>{H()}}}):D(e.reason,"danger",{title:"An Error Occurred"})}}),G=r==null?void 0:r.items.map(e=>({...e,isSelected:l.has(e.entityId),setSelected:t=>t?O(e.entityId):j(e.entityId)}));function Y(e){b(t=>{if(t){const s=t.items.filter(i=>!e.find(E=>E.targetId===i.entityId)),n=e.filter(i=>t.items.find(E=>E.entityId===i.targetId)),h=e.filter(i=>!t.items.find(E=>E.entityId===i.targetId));let S=`${h.length} Item${h.length===1?"":"s"} added`;n.length>0?S+=` and ${n.length} Item${n.length===1?"":"s"} updated`:S+=" to Dataset",D(M,"info",{title:S});const Z=[...s,...n.map(i=>({entityId:i.targetId,versionNumber:i.targetVersionNumber})),...h.map(i=>({entityId:i.targetId,versionNumber:i.targetVersionNumber}))];return{...t,items:Z}}else return console.warn("Cannot add items to the Dataset because it is undefined. The Dataset may not have been fetched yet."),t}),_()}function U(){b(e=>({...e,items:e.items.filter(t=>!l.has(t.entityId))})),D(M,"info",{title:`${l.size} Item${l.size===1?"":"s"} removed from the Dataset`}),_()}function q(e,t){b(s=>({...s,items:s.items.map(n=>n.entityId===e?{entityId:e,versionNumber:t}:n)}))}const B=[{key:"errorState",width:30,cellRenderer:oe},{key:"isSelected",width:40,dataKey:"isSelected",headerRenderer:r?o(e=>{const{datasetToUpdate:t,clearSelectedIds:s,addSelectedId:n}=e,h=F;return t?o("div",{"data-testid":"Select All",style:{cursor:"pointer"},onClick:()=>{h?s():n(...t.items.map(S=>S.entityId))},children:o(De,{label:"",className:"SRC-pointer-events-none",checked:h,disabled:t.items.length===0,onChange:()=>{}})}):o(V,{})},{datasetToUpdate:r,selectedIds:l,clearSelectedIds:_,addSelectedId:O,allItemsAreSelected:F}):o(V,{}),cellRenderer:re},{key:"name",width:350,dataKey:"entityId",title:"Name",resizable:!0,cellRenderer:ie},{key:"status",width:80,dataKey:"entityId",resizable:!0,cellRenderer:ae},{key:"id",width:140,title:"ID",dataKey:"entityId",resizable:!0},{key:"version",width:150,title:"Version",dataKey:"entityId",cellRenderer:e=>o(me,{...e,toggleSelection:t=>{q(t.entityId,t.versionNumber)}})},{key:"createdOn",width:200,title:"Created On",dataKey:"entityId",resizable:!0,cellRenderer:ne},{key:"modifiedOn",width:200,title:"Modified On",dataKey:"entityId",resizable:!0,cellRenderer:se},{key:"modifiedBy",width:250,title:"Modified By",dataKey:"entityId",resizable:!0,cellRenderer:de},{key:"projectId",width:300,title:"Project",dataKey:"entityId",resizable:!0,cellRenderer:le}],x=B.reduce((e,t)=>e+t.width,0);function J(){return m("div",{className:"NoItemsPlaceholder",children:[o(P,{variant:"headline3",children:ve}),m(C,{className:"AddItemsButton",variant:"sds-primary",onClick:()=>d(!0),children:[o(Se,{options:{icon:"addCircleTwoTone"}}),o("span",{children:w})]})]})}return m("div",{className:"DatasetEditor bootstrap-4-backport",children:[o(Ie,{configuration:{projectId:$,selectMultiple:!0,initialScope:Q.ALL_PROJECTS,initialContainer:null,selectableTypes:[ye.FILE],mustSelectVersionNumber:!0},titlePopoverProps:{markdownText:"Use the left pane to browse Projects and Folders to find Files to add to this Dataset. Files in a Dataset can be added from multiple folders. You can also use Search to find and select Files.",helpUrl:"https://help.synapse.org/docs/Datasets.2611281979.html"},promptCopy:"Find Files located across one or more Folders to add to the Dataset.",show:v,onClose:()=>{d(!1)},title:w+" to Dataset",confirmButtonCopy:w,onConfirm:e=>{Y(e),d(!1)},onCancel:()=>d(!1)}),o(Ee,{title:"Unsaved Changes",modalBody:"Any unsaved changes will be lost. Are you sure you want to close the editor?",confirmButtonText:"Close Editor",onConfirm:()=>{f&&(a(!1),f())},show:y,onConfirmCallbackArgs:[],onCancel:()=>a(!1)}),m("div",{className:"DatasetEditorTopBottomPanel",children:[o("div",{className:"ItemCount",children:r?m(P,{variant:"headline3",children:[r.items.length===0?"No":r.items.length.toLocaleString()," ","File",r.items.length!==1&&"s"]}):o(Ce,{variant:"rect",width:200})}),o(C,{variant:"sds-primary",disabled:r==null,onClick:()=>d(!0),children:w}),o(C,{disabled:l.size===0,variant:"outline",onClick:U,children:we})]}),m("div",{className:"DatasetEditorTableContainer",children:[r?r.items.length===0?o(J,{}):o(X,{height:Ne,onResize:k,children:({height:e,width:t})=>o(ee,{classPrefix:"DatasetEditorTable",data:G,height:e,width:t>x?t:x,rowHeight:z,overscanRowCount:5,columns:B,rowClassName:"DatasetEditorRow",rowProps:({rowData:s})=>({"aria-selected":s.isSelected}),headerCellProps:{role:"columnheader"},onRowsRendered:k,onScroll:k})}):o(pe,{className:"DatasetItemsEditorSkeleton",numRows:8,numCols:6,rowHeight:`${z}px`}),o(ce,{id:te,className:"EntityBadgeTooltip",delayShow:100,place:"right",effect:"solid"})]}),m("div",{className:"DatasetEditorTopBottomPanel",children:[o(C,{variant:"outline",onClick:()=>{T?a(!0):f&&f()},children:"Cancel"}),o(C,{disabled:!r,variant:"sds-primary",onClick:()=>W.mutate(r),children:"Save"})]})]})}try{g.displayName="DatasetItemsEditor",g.__docgenInfo={description:"",displayName:"DatasetItemsEditor",props:{entityId:{defaultValue:null,description:"",name:"entityId",required:!0,type:{name:"string"}},onSave:{defaultValue:null,description:"",name:"onSave",required:!1,type:{name:"(() => void)"}},onClose:{defaultValue:null,description:"",name:"onClose",required:!1,type:{name:"(() => void)"}}}},typeof STORYBOOK_REACT_CLASSES!="undefined"&&(STORYBOOK_REACT_CLASSES["src/lib/containers/table/datasets/DatasetItemsEditor.tsx#DatasetItemsEditor"]={docgenInfo:g.__docgenInfo,name:"DatasetItemsEditor",path:"src/lib/containers/table/datasets/DatasetItemsEditor.tsx#DatasetItemsEditor"})}catch{}var Ao={parameters:{storySource:{source:`import React from 'react'
import { ComponentStory, ComponentMeta } from '@storybook/react'
import { DatasetItemsEditor } from './DatasetItemsEditor'

export default {
  title: 'Synapse/DatasetItemsEditor',
  component: DatasetItemsEditor,
} as ComponentMeta<typeof DatasetItemsEditor>

const Template: ComponentStory<typeof DatasetItemsEditor> = args => (
  <DatasetItemsEditor {...args} />
)

export const Demo = Template.bind({})
Demo.args = {
  entityId: 'syn26302617',
}
`,locationsMap:{demo:{startLoc:{col:60,line:10},endLoc:{col:1,line:12},startBody:{col:60,line:10},endBody:{col:1,line:12}}}}},title:"Synapse/DatasetItemsEditor",component:g};const ke=c=>o(g,{...c}),Ae=ke.bind({});Ae.args={entityId:"syn26302617"};const Oo=["Demo"];export{Ae as Demo,Oo as __namedExportsOrder,Ao as default};
//# sourceMappingURL=DatasetItemsEditor.stories.41b3e6ef.js.map
