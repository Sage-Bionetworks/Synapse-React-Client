{"version":3,"file":"UpsetPlot.stories.4960d3da.js","sources":["../../node_modules/@upsetjs/model/dist/index.js","../../node_modules/lz-string/libs/lz-string.js","../../node_modules/@upsetjs/react/dist/index.js","../../src/lib/containers/UpsetPlot.tsx"],"sourcesContent":["/**\n * @upsetjs/model\n * https://github.com/upsetjs/upsetjs\n *\n * Copyright (c) 2022 Samuel Gratzl <sam@sgratzl.com>\n */\n\nfunction len(a) {\r\n    return a instanceof Set ? a.size : a.length;\r\n}\r\nfunction setOverlapFactory(a, toElemKey) {\r\n    const elems = !toElemKey\r\n        ? a instanceof Set\r\n            ? a\r\n            : new Set(a)\r\n        : new Set((a instanceof Set ? Array.from(a) : a).map(toElemKey));\r\n    const setA = elems.size;\r\n    const same = {\r\n        setA,\r\n        setB: setA,\r\n        union: setA,\r\n        intersection: setA,\r\n    };\r\n    return (b) => {\r\n        if (b === a) {\r\n            return same;\r\n        }\r\n        let intersection = 0;\r\n        b.forEach((e) => {\r\n            if ((toElemKey && elems.has(toElemKey(e))) || (!toElemKey && elems.has(e))) {\r\n                intersection++;\r\n            }\r\n        });\r\n        const setB = len(b);\r\n        return {\r\n            setA,\r\n            setB,\r\n            intersection,\r\n            union: setA + setB - intersection,\r\n        };\r\n    };\r\n}\r\nfunction setOverlap(a, b, toElemKey) {\r\n    if (len(a) < len(b) || a instanceof Set) {\r\n        return setOverlapFactory(a, toElemKey)(b);\r\n    }\r\n    const r = setOverlapFactory(b, toElemKey)(a);\r\n    return Object.assign({}, r, {\r\n        setA: r.setB,\r\n        setB: r.setA,\r\n    });\r\n}\r\nfunction setElemOverlapFactory(a, toElemKey) {\r\n    const elems = !toElemKey\r\n        ? a instanceof Set\r\n            ? a\r\n            : new Set(a)\r\n        : new Set((a instanceof Set ? Array.from(a) : a).map(toElemKey));\r\n    const setA = Array.isArray(a) ? a : Array.from(a);\r\n    const same = {\r\n        setA,\r\n        setB: setA,\r\n        union: setA,\r\n        intersection: setA,\r\n    };\r\n    return (b) => {\r\n        if (b === a) {\r\n            return same;\r\n        }\r\n        const intersection = [];\r\n        const union = setA.slice();\r\n        b.forEach((e) => {\r\n            if ((toElemKey && elems.has(toElemKey(e))) || (!toElemKey && elems.has(e))) {\r\n                intersection.push(e);\r\n            }\r\n            else {\r\n                union.push(e);\r\n            }\r\n        });\r\n        return {\r\n            setA: setA,\r\n            setB: Array.isArray(b) ? b : Array.from(b),\r\n            intersection,\r\n            union,\r\n        };\r\n    };\r\n}\r\nfunction setElemOverlap(a, b, toElemKey) {\r\n    if (len(a) < len(b) || a instanceof Set) {\r\n        return setElemOverlapFactory(a, toElemKey)(b);\r\n    }\r\n    const r = setElemOverlapFactory(b, toElemKey)(a);\r\n    return Object.assign({}, r, {\r\n        setA: r.setB,\r\n        setB: r.setA,\r\n    });\r\n}\r\nfunction setElemIntersectionFactory(a, toElemKey) {\r\n    const arr = a instanceof Set ? Array.from(a) : a;\r\n    const elems = !toElemKey ? (a instanceof Set ? a : new Set(a)) : new Set(arr.map(toElemKey));\r\n    return (b) => {\r\n        if (b === a) {\r\n            return arr;\r\n        }\r\n        const intersection = [];\r\n        b.forEach((e) => {\r\n            if ((toElemKey && elems.has(toElemKey(e))) || (!toElemKey && elems.has(e))) {\r\n                intersection.push(e);\r\n            }\r\n        });\r\n        return intersection;\r\n    };\r\n}\n\nfunction isElemQuery(q) {\r\n    return Array.isArray(q.elems);\r\n}\r\nfunction isCalcQuery(q) {\r\n    return typeof q.overlap === 'function';\r\n}\r\nfunction isSetQuery(q) {\r\n    return q.set != null;\r\n}\r\nfunction queryOverlap(query, what, toElemKey) {\r\n    if (isCalcQuery(query)) {\r\n        return query.overlap;\r\n    }\r\n    if (isSetQuery(query) && query.set.overlap) {\r\n        return query.set.overlap;\r\n    }\r\n    const f = setOverlapFactory(isElemQuery(query) ? query.elems : query.set.elems, toElemKey);\r\n    return (s) => {\r\n        if (s.overlap && isElemQuery(query) && Array.isArray(query.elems)) {\r\n            return s.overlap(query.elems);\r\n        }\r\n        if (s.overlap && isSetQuery(query)) {\r\n            return s.overlap(query.set);\r\n        }\r\n        return f(s.elems)[what];\r\n    };\r\n}\r\nfunction queryElemOverlap(query, what, toElemKey) {\r\n    if (isCalcQuery(query)) {\r\n        return () => null;\r\n    }\r\n    if (what === 'intersection') {\r\n        const f = setElemIntersectionFactory(isElemQuery(query) ? query.elems : query.set.elems, toElemKey);\r\n        return (s) => f(s.elems);\r\n    }\r\n    const f = setElemOverlapFactory(isElemQuery(query) ? query.elems : query.set.elems, toElemKey);\r\n    return (s) => {\r\n        return f(s.elems)[what];\r\n    };\r\n}\n\nfunction isBaseSet(v) {\r\n    const vt = v;\r\n    return v != null && typeof vt.cardinality === 'number' && typeof v.name === 'string' && Array.isArray(v.elems);\r\n}\r\nfunction isSet(v) {\r\n    return isBaseSet(v) && v.type === 'set';\r\n}\r\nfunction isSetCombination(v) {\r\n    const vt = v;\r\n    return (isBaseSet(v) &&\r\n        ['composite', 'union', 'intersection', 'distinctIntersection'].includes(vt.type) &&\r\n        vt.sets instanceof Set &&\r\n        typeof vt.degree === 'number');\r\n}\r\nfunction isSetLike(v) {\r\n    return isSet(v) || isSetCombination(v);\r\n}\r\nfunction isGenerateSetCombinationOptions(v) {\r\n    const vt = v;\r\n    return v != null && (vt.type == null || ['intersection', 'union'].includes(vt.type));\r\n}\r\nfunction isUpSetQuery(v) {\r\n    const vt = v;\r\n    return (v != null &&\r\n        typeof vt.name === 'string' &&\r\n        typeof vt.color === 'string' &&\r\n        (isElemQuery(vt) || isSetQuery(vt) || isCalcQuery(vt)));\r\n}\n\nfunction byName(a, b) {\r\n    return a.name.localeCompare(b.name);\r\n}\r\nfunction byCardinality(a, b) {\r\n    return b.cardinality - a.cardinality;\r\n}\r\nfunction byDegree(a, b) {\r\n    return a.degree - b.degree;\r\n}\r\nfunction byComposite(func) {\r\n    return (a, b) => {\r\n        return func.reduce((acc, f) => (acc === 0 ? f(a, b) : acc), 0);\r\n    };\r\n}\r\nfunction negate(func) {\r\n    return (a, b) => -func(a, b);\r\n}\r\nfunction byGroup(sets) {\r\n    return (a, b) => {\r\n        const fixNotFound = (v) => (v < 0 ? Number.POSITIVE_INFINITY : v);\r\n        const aIndex = fixNotFound(sets.findIndex((s) => a.sets.has(s)));\r\n        const bIndex = fixNotFound(sets.findIndex((s) => b.sets.has(s)));\r\n        return aIndex - bIndex;\r\n    };\r\n}\n\nfunction fromSetName(sets, symbol = /[∩∪&|]/) {\r\n    const byName = new Map(sets.map((s) => [s.name, s]));\r\n    return (s) => {\r\n        return s.name.split(symbol).map((setName) => byName.get(setName.trim()));\r\n    };\r\n}\r\nfunction toOrder$1(sets, order) {\r\n    if (!order) {\r\n        return byName;\r\n    }\r\n    const arr = (Array.isArray(order) ? order : [order]);\r\n    if (arr.length === 0) {\r\n        return byName;\r\n    }\r\n    return byComposite(arr.map((o) => {\r\n        switch (o) {\r\n            case 'cardinality':\r\n            case 'cardinality:desc':\r\n                return byCardinality;\r\n            case 'cardinality:asc':\r\n                return negate(byCardinality);\r\n            case 'name:desc':\r\n                return negate(byName);\r\n            case 'degree':\r\n            case 'degree:asc':\r\n                return byDegree;\r\n            case 'degree:desc':\r\n                return negate(byDegree);\r\n            case 'group':\r\n            case 'group:asc':\r\n                return byGroup(sets);\r\n            case 'group:desc':\r\n                return negate(byGroup(sets));\r\n            default:\r\n                return byName;\r\n        }\r\n    }));\r\n}\r\nfunction postprocessCombinations(sets, combinations, options = {}) {\r\n    let r = combinations;\r\n    if (options.order) {\r\n        r = r.sort(toOrder$1(sets, options.order));\r\n    }\r\n    if (options.limit != null) {\r\n        return r.slice(0, options.limit);\r\n    }\r\n    return r;\r\n}\r\nfunction asCombination(set, type, toSets) {\r\n    const sets = toSets(set);\r\n    return Object.assign({\r\n        type,\r\n        cardinality: set.elems.length,\r\n        sets: new Set(sets),\r\n        degree: sets.length,\r\n    }, set);\r\n}\r\nfunction asCombinations(sets, type, toSets) {\r\n    return sets.map((set) => asCombination(set, type, toSets));\r\n}\n\nconst SET_JOINERS = {\r\n    distinctIntersection: ' ∩ ',\r\n    intersection: ' ∩ ',\r\n    union: ' ∪ ',\r\n    composite: ',',\r\n};\n\nfunction parseColor(color) {\r\n    if (!color) {\r\n        return [255, 255, 255];\r\n    }\r\n    const hex = color.match(/#([\\da-f]{2})([\\da-f]{2})([\\da-f]{2})/i);\r\n    if (hex) {\r\n        return [Number.parseInt(hex[1], 16), Number.parseInt(hex[2], 16), Number.parseInt(hex[3], 16)];\r\n    }\r\n    const rgb = color.match(/\\(([\\d]+)[, ]([\\d]+)[, ]([\\d]+)\\)/i);\r\n    if (rgb) {\r\n        return [Number.parseInt(rgb[1], 10), Number.parseInt(rgb[2], 10), Number.parseInt(rgb[3], 10)];\r\n    }\r\n    return [255, 255, 255];\r\n}\r\nfunction mergeColors(colors) {\r\n    if (colors.length === 1) {\r\n        return colors[0];\r\n    }\r\n    if (colors.every((d) => d == null)) {\r\n        return undefined;\r\n    }\r\n    const rgb = colors.map(parseColor);\r\n    const r = Math.floor(rgb.reduce((acc, v) => acc + v[0], 0) / rgb.length);\r\n    const g = Math.floor(rgb.reduce((acc, v) => acc + v[1], 0) / rgb.length);\r\n    const b = Math.floor(rgb.reduce((acc, v) => acc + v[2], 0) / rgb.length);\r\n    return `#${r.toString(16)}${g.toString(16)}${b.toString(16)}`;\r\n}\n\nfunction generateName$1(combo, setIndex, joiner) {\r\n    const sorted = Array.from(combo).sort((a, b) => setIndex.get(a) - setIndex.get(b));\r\n    return sorted.length === 1 ? sorted[0].name : `(${sorted.map((d) => d.name).join(joiner)})`;\r\n}\r\nfunction generateSet(type, name, combo, elems, mergeColors) {\r\n    return {\r\n        type: combo.size === 0 ? 'composite' : type,\r\n        elems,\r\n        color: mergeColors(Array.from(combo).map((s) => s.color)),\r\n        sets: combo,\r\n        name,\r\n        cardinality: elems.length,\r\n        degree: combo.size,\r\n    };\r\n}\r\nfunction mergeIntersection(a, b, lookup, toKey, setIndex, type, mergeColors) {\r\n    const merged = new Set(a.sets);\r\n    b.sets.forEach((s) => merged.add(s));\r\n    const name = generateName$1(merged, setIndex, SET_JOINERS[type]);\r\n    if (a.cardinality === 0 || b.cardinality === 0) {\r\n        return generateSet(type, name, merged, [], mergeColors);\r\n    }\r\n    let small = a;\r\n    let big = b;\r\n    if (a.cardinality > b.cardinality) {\r\n        small = b;\r\n        big = a;\r\n    }\r\n    const keySet = new Set();\r\n    const bigLookup = lookup.get(big);\r\n    const elems = [];\r\n    const l = small.elems.length;\r\n    for (let i = 0; i < l; i++) {\r\n        const e = small.elems[i];\r\n        const key = toKey(e);\r\n        if (!bigLookup.has(key)) {\r\n            continue;\r\n        }\r\n        keySet.add(key);\r\n        elems.push(e);\r\n    }\r\n    const r = generateSet(type, name, merged, elems, mergeColors);\r\n    lookup.set(r, keySet);\r\n    return r;\r\n}\r\nfunction mergeUnion(a, b, lookup, toKey, setIndex, type, mergeColors) {\r\n    const merged = new Set(a.sets);\r\n    b.sets.forEach((s) => merged.add(s));\r\n    const name = generateName$1(merged, setIndex, SET_JOINERS[type]);\r\n    if (a.cardinality === 0) {\r\n        const r = generateSet(type, name, merged, b.elems, mergeColors);\r\n        lookup.set(r, lookup.get(b));\r\n        return r;\r\n    }\r\n    if (b.cardinality === 0) {\r\n        const r = generateSet(type, name, merged, a.elems, mergeColors);\r\n        lookup.set(r, lookup.get(a));\r\n        return r;\r\n    }\r\n    let small = a;\r\n    let big = b;\r\n    if (a.cardinality > b.cardinality) {\r\n        small = b;\r\n        big = a;\r\n    }\r\n    const keySet = new Set(lookup.get(big));\r\n    const bigLookup = lookup.get(big);\r\n    const elems = big.elems.slice();\r\n    small.elems.forEach((e) => {\r\n        const key = toKey(e);\r\n        if (bigLookup.has(key)) {\r\n            return;\r\n        }\r\n        keySet.add(key);\r\n        elems.push(e);\r\n    });\r\n    const r = generateSet(type, name, merged, elems, mergeColors);\r\n    lookup.set(r, keySet);\r\n    return r;\r\n}\r\nfunction generateEmptySet(type, notPartOfAnySet, allElements, lookup, toKey, mergeColors) {\r\n    if (typeof notPartOfAnySet === 'number') {\r\n        return {\r\n            type: 'composite',\r\n            elems: [],\r\n            color: mergeColors ? mergeColors([]) : undefined,\r\n            sets: new Set(),\r\n            name: '()',\r\n            cardinality: notPartOfAnySet,\r\n            overlap(s) {\r\n                return s === this || (isSetLike(s) && s.name === this.name && s.cardinality === this.cardinality)\r\n                    ? this.cardinality\r\n                    : 0;\r\n            },\r\n            degree: 0,\r\n        };\r\n    }\r\n    if (Array.isArray(notPartOfAnySet)) {\r\n        return generateSet(type, '()', new Set(), notPartOfAnySet, mergeColors);\r\n    }\r\n    const lookupArr = Array.from(lookup.values());\r\n    const elems = allElements.filter((e) => {\r\n        const k = toKey(e);\r\n        return lookupArr.every((s) => !s.has(k));\r\n    });\r\n    return generateSet(type, '()', new Set(), elems, mergeColors);\r\n}\r\nfunction generateCombinations(sets, options = {}) {\r\n    const { type = 'intersection', min = 0, max = Number.POSITIVE_INFINITY, empty = false, elems: allElements = [], notPartOfAnySet, toElemKey, mergeColors: mergeColors$1 = mergeColors, } = options;\r\n    const combinations = [];\r\n    const setIndex = new Map(sets.map((s, i) => [s, i]));\r\n    const setElems = new Map(sets.map((s) => [s, toElemKey ? new Set(s.elems.map(toElemKey)) : new Set(s.elems)]));\r\n    const setDirectElems = toElemKey ? null : setElems;\r\n    const setKeyElems = toElemKey ? setElems : null;\r\n    const calc = type === 'union' ? mergeUnion : mergeIntersection;\r\n    function push(s) {\r\n        if (s.degree < min || s.degree > max || (s.cardinality === 0 && !empty)) {\r\n            return;\r\n        }\r\n        if (type !== 'distinctIntersection') {\r\n            combinations.push(s);\r\n            return;\r\n        }\r\n        const others = sets.filter((d) => !s.sets.has(d));\r\n        let elems = [];\r\n        if (toElemKey) {\r\n            const othersSets = others.map((o) => setKeyElems.get(o));\r\n            elems = s.elems.filter((e) => {\r\n                const key = toElemKey(e);\r\n                return othersSets.every((o) => !o.has(key));\r\n            });\r\n        }\r\n        else {\r\n            const othersSets = others.map((o) => setDirectElems.get(o));\r\n            elems = s.elems.filter((e) => othersSets.every((o) => !o.has(e)));\r\n        }\r\n        if (elems.length === s.cardinality) {\r\n            combinations.push(s);\r\n            return;\r\n        }\r\n        const sDistinct = generateSet(type, s.name, s.sets, elems, mergeColors$1);\r\n        if (sDistinct.cardinality === 0 && !empty) {\r\n            return;\r\n        }\r\n        combinations.push(sDistinct);\r\n    }\r\n    function generateLevel(arr, degree, lookup, toKey) {\r\n        if (degree > max) {\r\n            return;\r\n        }\r\n        const l = arr.length;\r\n        for (let i = 0; i < l; i++) {\r\n            const a = arr[i];\r\n            const sub = [];\r\n            for (let j = i + 1; j < l; j++) {\r\n                const b = arr[j];\r\n                const ab = calc(a, b, lookup, toKey, setIndex, type, mergeColors$1);\r\n                push(ab);\r\n                if (type === 'union' || ab.cardinality > 0 || empty) {\r\n                    sub.push(ab);\r\n                }\r\n            }\r\n            if (sub.length > 1) {\r\n                generateLevel(sub, degree + 1, lookup, toKey);\r\n            }\r\n        }\r\n    }\r\n    if (min <= 0) {\r\n        if (toElemKey) {\r\n            push(generateEmptySet(type, notPartOfAnySet, allElements, setKeyElems, toElemKey, mergeColors$1));\r\n        }\r\n        else {\r\n            push(generateEmptySet(type, notPartOfAnySet, allElements, setDirectElems, (v) => v, mergeColors$1));\r\n        }\r\n    }\r\n    const degree1 = sets.map((s) => {\r\n        const r = generateSet(type, s.name, new Set([s]), s.elems, mergeColors$1);\r\n        setElems.set(r, setElems.get(s));\r\n        push(r);\r\n        return r;\r\n    });\r\n    if (toElemKey) {\r\n        generateLevel(degree1, 2, setKeyElems, toElemKey);\r\n    }\r\n    else {\r\n        generateLevel(degree1, 2, setDirectElems, (v) => v);\r\n    }\r\n    return postprocessCombinations(sets, combinations, options);\r\n}\n\nfunction asSet(set) {\r\n    return Object.assign({\r\n        type: 'set',\r\n        cardinality: set.elems.length,\r\n    }, set);\r\n}\r\nfunction toOrder(order) {\r\n    if (!order) {\r\n        return byName;\r\n    }\r\n    switch (order) {\r\n        case 'cardinality':\r\n        case 'cardinality:desc':\r\n            return byComposite([byCardinality, byName]);\r\n        case 'cardinality:asc':\r\n            return byComposite([negate(byCardinality), byName]);\r\n        case 'name:desc':\r\n            return negate(byName);\r\n        default:\r\n            return byName;\r\n    }\r\n}\r\nfunction postprocessSets(sets, options = {}) {\r\n    let r = sets;\r\n    if (options.order) {\r\n        const order = toOrder(options.order);\r\n        r = r.slice().sort(order);\r\n    }\r\n    if (options.limit != null) {\r\n        return r.slice(0, options.limit);\r\n    }\r\n    return r;\r\n}\r\nfunction asSets(sets, options = {}) {\r\n    return postprocessSets(sets.map(asSet), options);\r\n}\n\nfunction extractFromExpression(combinations, accOrOptions, o = {}) {\r\n    var _a, _b, _c;\r\n    const acc = typeof accOrOptions === 'function' ? accOrOptions : (e) => e.sets;\r\n    const options = (_a = (typeof accOrOptions !== 'function' ? accOrOptions : o)) !== null && _a !== void 0 ? _a : {};\r\n    const type = (_b = options.type) !== null && _b !== void 0 ? _b : 'intersection';\r\n    const joiner = (_c = options.joiner) !== null && _c !== void 0 ? _c : SET_JOINERS[type];\r\n    const sets = [];\r\n    const setLookup = new Map();\r\n    const cs = combinations.map((c) => {\r\n        const containedSets = acc(c);\r\n        const containedSetsObjects = containedSets.map((s) => {\r\n            if (setLookup.has(s)) {\r\n                return setLookup.get(s);\r\n            }\r\n            const set = {\r\n                cardinality: 0,\r\n                elems: [],\r\n                name: s,\r\n                type: 'set',\r\n            };\r\n            sets.push(set);\r\n            setLookup.set(set.name, set);\r\n            return set;\r\n        });\r\n        if (type === 'distinctIntersection') {\r\n            for (const s of containedSetsObjects) {\r\n                s.cardinality += c.cardinality;\r\n            }\r\n        }\r\n        else if (containedSets.length === 1) {\r\n            Object.assign(containedSetsObjects[0], {\r\n                cardinality: c.cardinality,\r\n            }, c);\r\n        }\r\n        else if (type === 'intersection') {\r\n            for (const s of containedSetsObjects) {\r\n                s.cardinality = Math.max(s.cardinality, c.cardinality);\r\n            }\r\n        }\r\n        else if (type === 'union') {\r\n            for (const s of containedSetsObjects) {\r\n                s.cardinality = Math.min(s.cardinality, c.cardinality);\r\n            }\r\n        }\r\n        const name = containedSets.join(joiner);\r\n        return Object.assign({\r\n            type,\r\n            elems: [],\r\n            name,\r\n        }, c, {\r\n            cardinality: c.cardinality,\r\n            degree: containedSets.length,\r\n            sets: new Set(containedSetsObjects),\r\n        });\r\n    });\r\n    const sortedSets = postprocessSets(sets, {\r\n        order: options.setOrder,\r\n    });\r\n    const sortedCombinations = postprocessCombinations(sortedSets, cs, {\r\n        order: options.combinationOrder,\r\n    });\r\n    return {\r\n        sets: sortedSets,\r\n        combinations: sortedCombinations,\r\n    };\r\n}\n\nfunction extractSets(elements, accOrOptions, o = {}) {\r\n    var _a;\r\n    const acc = typeof accOrOptions === 'function' ? accOrOptions : (e) => e.sets;\r\n    const options = (_a = (typeof accOrOptions !== 'function' ? accOrOptions : o)) !== null && _a !== void 0 ? _a : {};\r\n    const sets = Object.create(null);\r\n    elements.forEach((elem) => {\r\n        acc(elem).forEach((set) => {\r\n            const s = typeof set === 'string' ? set : String(set);\r\n            const r = sets[s];\r\n            if (r == null) {\r\n                sets[s] = [elem];\r\n            }\r\n            else {\r\n                r.push(elem);\r\n            }\r\n        });\r\n    });\r\n    return postprocessSets(Object.entries(sets).map(([set, elems]) => {\r\n        const r = {\r\n            type: 'set',\r\n            elems,\r\n            name: String(set),\r\n            cardinality: elems.length,\r\n        };\r\n        return r;\r\n    }), options);\r\n}\n\nfunction createTree(byDegree, getOrCreateCombination) {\r\n    const children = new Map();\r\n    byDegree\r\n        .slice()\r\n        .reverse()\r\n        .forEach((csOfDegree) => {\r\n        if (csOfDegree.length === 0 || csOfDegree[0].degree === 1) {\r\n            return;\r\n        }\r\n        csOfDegree.forEach((c) => {\r\n            const sets = Array.from(c.sets).map((d) => d.name);\r\n            for (let i = 0; i < sets.length; i++) {\r\n                const subSet = sets.slice();\r\n                subSet.splice(i, 1);\r\n                const parent = getOrCreateCombination(subSet);\r\n                if (children.has(parent)) {\r\n                    children.get(parent).push(c);\r\n                }\r\n                else {\r\n                    children.set(parent, [c]);\r\n                }\r\n            }\r\n        });\r\n    });\r\n    return children;\r\n}\r\nfunction extractCombinations(elements, accOrOptions, o = {}) {\r\n    var _a, _b, _c, _d;\r\n    const acc = typeof accOrOptions === 'function' ? accOrOptions : (e) => e.sets;\r\n    const options = (_a = (typeof accOrOptions !== 'function' ? accOrOptions : o)) !== null && _a !== void 0 ? _a : {};\r\n    const type = (_b = options.type) !== null && _b !== void 0 ? _b : 'intersection';\r\n    const sets = (_c = options.sets) !== null && _c !== void 0 ? _c : extractSets(elements, acc, {\r\n        limit: options.setLimit,\r\n        order: options.setOrder,\r\n    });\r\n    if (type === 'union') {\r\n        return {\r\n            sets,\r\n            combinations: generateCombinations(sets, {\r\n                type: 'union',\r\n                limit: options.combinationLimit,\r\n                order: options.combinationOrder,\r\n            }),\r\n        };\r\n    }\r\n    const setLookup = Object.create(null);\r\n    sets.forEach((set, i) => {\r\n        setLookup[set.name] = [set, i];\r\n    });\r\n    const isSortedAlphabetically = sets\r\n        .map((d) => d.name)\r\n        .sort()\r\n        .every((d, i) => sets[i].name === d);\r\n    const bySet = isSortedAlphabetically\r\n        ? undefined\r\n        : (a, b) => {\r\n            var _a, _b, _c, _d;\r\n            const ai = (_b = (_a = setLookup[a]) === null || _a === void 0 ? void 0 : _a[1]) !== null && _b !== void 0 ? _b : -1;\r\n            const bi = (_d = (_c = setLookup[b]) === null || _c === void 0 ? void 0 : _c[1]) !== null && _d !== void 0 ? _d : -1;\r\n            return ai - bi;\r\n        };\r\n    const validSet = options.sets == null && options.setLimit == null ? null : new Set(sets.map((d) => d.name));\r\n    const joiner = (_d = options.joiner) !== null && _d !== void 0 ? _d : SET_JOINERS[type];\r\n    const cs = [];\r\n    const csLookup = Object.create(null);\r\n    const byDegree = Array(sets.length + 1)\r\n        .fill(0)\r\n        .map((_) => []);\r\n    function genName(setsOfElem) {\r\n        switch (setsOfElem.length) {\r\n            case 0:\r\n                return '()';\r\n            case 1:\r\n                return setsOfElem[0];\r\n            default:\r\n                const sorted = setsOfElem.slice().sort(bySet);\r\n                const joined = sorted.join(joiner);\r\n                return '(' + joined + ')';\r\n        }\r\n    }\r\n    function genKey(setsOfElem) {\r\n        switch (setsOfElem.length) {\r\n            case 0:\r\n                return '';\r\n            case 1:\r\n                return setsOfElem[0];\r\n            case 2: {\r\n                if ((bySet != null && bySet(setsOfElem[0], setsOfElem[1]) > 0) ||\r\n                    (bySet == null && setsOfElem[1] > setsOfElem[0])) {\r\n                    return setsOfElem[1] + '&' + setsOfElem[0];\r\n                }\r\n                return setsOfElem[0] + '&' + setsOfElem[1];\r\n            }\r\n            default:\r\n                const sorted = setsOfElem.slice().sort(bySet);\r\n                return sorted.join('&');\r\n        }\r\n    }\r\n    function getOrCreateCombination(setsOfElem) {\r\n        const key = genKey(setsOfElem);\r\n        const entry = csLookup[key];\r\n        if (entry) {\r\n            return entry;\r\n        }\r\n        const newEntry = {\r\n            type,\r\n            name: genName(setsOfElem),\r\n            degree: setsOfElem.length,\r\n            sets: new Set(setsOfElem.map((s) => setLookup[s][0])),\r\n            cardinality: 0,\r\n            elems: [],\r\n        };\r\n        csLookup[key] = newEntry;\r\n        cs.push(newEntry);\r\n        byDegree[newEntry.degree].push(newEntry);\r\n        return newEntry;\r\n    }\r\n    elements.forEach((elem) => {\r\n        let setsOfElem = acc(elem);\r\n        if (validSet) {\r\n            setsOfElem = setsOfElem.filter((d) => validSet.has(d));\r\n        }\r\n        const c = getOrCreateCombination(setsOfElem);\r\n        c.elems.push(elem);\r\n        c.cardinality++;\r\n    });\r\n    const finalize = () => {\r\n        return {\r\n            sets,\r\n            combinations: postprocessCombinations(sets, cs, {\r\n                order: options.combinationOrder,\r\n                limit: options.combinationLimit,\r\n            }),\r\n        };\r\n    };\r\n    if (type === 'distinctIntersection') {\r\n        return finalize();\r\n    }\r\n    const children = createTree(byDegree, getOrCreateCombination);\r\n    function visit(node, visited, agg) {\r\n        var _a;\r\n        if (visited.has(node)) {\r\n            return;\r\n        }\r\n        visited.add(node);\r\n        if (node.elems.length < 1000) {\r\n            agg[0].push(...node.elems);\r\n        }\r\n        else {\r\n            agg.push(node.elems);\r\n        }\r\n        ((_a = children.get(node)) !== null && _a !== void 0 ? _a : []).forEach((child) => visit(child, visited, agg));\r\n    }\r\n    byDegree.slice(1).forEach((level) => {\r\n        level.forEach((node) => {\r\n            var _a;\r\n            const visited = new Set();\r\n            const agg = [node.elems];\r\n            ((_a = children.get(node)) !== null && _a !== void 0 ? _a : []).forEach((child) => {\r\n                visit(child, visited, agg);\r\n            });\r\n            const elems = agg.length === 1 ? agg[0] : agg.flat();\r\n            Object.assign(node, { elems, cardinality: elems.length });\r\n        });\r\n    });\r\n    return finalize();\r\n}\n\nfunction toKey(s) {\r\n    return `${s.name}:${s.type}#${s.cardinality}`;\r\n}\n\nfunction isUniverse(s) {\r\n    return s.sets.size === 0;\r\n}\r\nfunction common(a, b, toKey$1 = toKey) {\r\n    const r = {\r\n        done: null,\r\n        aKey: '',\r\n        bKey: '',\r\n        aIsSet: false,\r\n        bIsSet: false,\r\n        toKey: toKey$1,\r\n    };\r\n    if (a === b) {\r\n        r.done = a.cardinality;\r\n        return r;\r\n    }\r\n    if (a.cardinality === 0 || b.cardinality === 0) {\r\n        r.done = 0;\r\n        return r;\r\n    }\r\n    r.aKey = toKey$1(a);\r\n    r.bKey = toKey$1(b);\r\n    if (r.aKey === r.bKey) {\r\n        r.done = a.cardinality;\r\n        return r;\r\n    }\r\n    r.aIsSet = isSet(a);\r\n    r.bIsSet = isSet(b);\r\n    if ((!r.aIsSet && isUniverse(a)) || (!r.bIsSet && isUniverse(b))) {\r\n        r.done = 0;\r\n        return r;\r\n    }\r\n    return r;\r\n}\r\nfunction aInB(b, r) {\r\n    if (r.bIsSet || !r.aIsSet) {\r\n        return false;\r\n    }\r\n    return Array.from(b.sets)\r\n        .map(r.toKey)\r\n        .includes(r.aKey);\r\n}\r\nfunction bInA(a, r) {\r\n    if (!r.bIsSet || r.aIsSet) {\r\n        return false;\r\n    }\r\n    return Array.from(a.sets)\r\n        .map(r.toKey)\r\n        .includes(r.bKey);\r\n}\r\nfunction keyedCombinations(combinations, toKey$1 = toKey) {\r\n    return combinations.map((c) => {\r\n        const s = Array.from(c.sets).map(toKey$1).sort();\r\n        return {\r\n            key: s.join('&'),\r\n            s,\r\n            sets: new Set(s),\r\n            degree: c.degree,\r\n            cardinality: c.cardinality,\r\n        };\r\n    });\r\n}\r\nfunction combinedKey(a, b, r) {\r\n    const sets = new Set();\r\n    if (r.aIsSet) {\r\n        sets.add(r.aKey);\r\n    }\r\n    else {\r\n        for (const s of Array.from(a.sets)) {\r\n            sets.add(r.toKey(s));\r\n        }\r\n    }\r\n    if (r.bIsSet) {\r\n        sets.add(r.bKey);\r\n    }\r\n    else {\r\n        for (const s of Array.from(b.sets)) {\r\n            sets.add(r.toKey(s));\r\n        }\r\n    }\r\n    return Array.from(sets).sort().join('&');\r\n}\r\nfunction generateDistinctOverlapFunction(combinations, fallback, toKey$1 = toKey) {\r\n    const combinationsBySet = new Map();\r\n    for (const c of keyedCombinations(combinations, toKey$1)) {\r\n        for (const s of c.s) {\r\n            if (combinationsBySet.has(s)) {\r\n                combinationsBySet.get(s).push(c);\r\n            }\r\n            else {\r\n                combinationsBySet.set(s, [c]);\r\n            }\r\n        }\r\n    }\r\n    return (a, b) => {\r\n        const r = common(a, b, toKey$1);\r\n        if (r.done != null) {\r\n            return r.done;\r\n        }\r\n        if (!r.aIsSet && !r.bIsSet) {\r\n            return 0;\r\n        }\r\n        if (r.aIsSet && !r.bIsSet) {\r\n            return aInB(b, r) ? b.cardinality : 0;\r\n        }\r\n        if (!r.aIsSet && r.bIsSet) {\r\n            return bInA(a, r) ? a.cardinality : 0;\r\n        }\r\n        const hasA = combinationsBySet.get(r.aKey);\r\n        const hasB = combinationsBySet.get(r.bKey);\r\n        if (!hasA || !hasB) {\r\n            return fallback(a, b);\r\n        }\r\n        if (hasA.length < hasB.length) {\r\n            return hasA.reduce((acc, c) => acc + (c.sets.has(r.bKey) ? c.cardinality : 0), 0);\r\n        }\r\n        return hasB.reduce((acc, c) => acc + (c.sets.has(r.aKey) ? c.cardinality : 0), 0);\r\n    };\r\n}\r\nfunction generateIntersectionOverlapFunction(combinations, fallback, toKey$1 = toKey) {\r\n    const combinationsByKey = new Map(keyedCombinations(combinations, toKey$1).map((d) => [d.key, d.cardinality]));\r\n    return (a, b) => {\r\n        const r = common(a, b, toKey$1);\r\n        if (r.done != null) {\r\n            return r.done;\r\n        }\r\n        if (r.aIsSet && !r.bIsSet && aInB(b, r)) {\r\n            return b.cardinality;\r\n        }\r\n        if (!r.aIsSet && r.bIsSet && bInA(a, r)) {\r\n            return a.cardinality;\r\n        }\r\n        const key = combinedKey(a, b, r);\r\n        if (!combinationsByKey.has(key)) {\r\n            return fallback(a, b);\r\n        }\r\n        return combinationsByKey.get(key);\r\n    };\r\n}\r\nfunction generateUnionOverlapFunction(combinations, fallback, toKey$1 = toKey) {\r\n    const combinationsByKey = new Map(keyedCombinations(combinations, toKey$1).map((d) => [d.key, d.cardinality]));\r\n    return (a, b) => {\r\n        const r = common(a, b, toKey$1);\r\n        if (r.done != null) {\r\n            return r.done;\r\n        }\r\n        if (r.aIsSet && !r.bIsSet && aInB(b, r)) {\r\n            return a.cardinality;\r\n        }\r\n        if (!r.aIsSet && r.bIsSet && bInA(a, r)) {\r\n            return b.cardinality;\r\n        }\r\n        const key = combinedKey(a, b, r);\r\n        if (!combinationsByKey.has(key)) {\r\n            return fallback(a, b);\r\n        }\r\n        return a.cardinality + b.cardinality - combinationsByKey.get(key);\r\n    };\r\n}\r\nfunction generateOverlapFunction(combinations, fallback, toKey$1 = toKey) {\r\n    if (combinations.length === 0) {\r\n        return fallback;\r\n    }\r\n    const firstType = combinations[0].type;\r\n    if (combinations.some((s) => s.type !== firstType)) {\r\n        return fallback;\r\n    }\r\n    switch (firstType) {\r\n        case 'union':\r\n            return generateUnionOverlapFunction(combinations, fallback, toKey$1);\r\n        case 'intersection':\r\n            return generateIntersectionOverlapFunction(combinations, fallback, toKey$1);\r\n        case 'distinctIntersection':\r\n            return generateDistinctOverlapFunction(combinations, fallback, toKey$1);\r\n    }\r\n    return fallback;\r\n}\n\nfunction compressLine(line) {\r\n    if (line.length === 0) {\r\n        return '';\r\n    }\r\n    const r = [];\r\n    let start = line[0];\r\n    let len = 1;\r\n    for (let i = 1; i < line.length; i++) {\r\n        const v = line[i];\r\n        if (v === start) {\r\n            len++;\r\n        }\r\n        else {\r\n            if (len > 1) {\r\n                r.push(`${start}=${len - 1}`);\r\n            }\r\n            else if (start === 0) {\r\n                r.push('');\r\n            }\r\n            else {\r\n                r.push(start.toString());\r\n            }\r\n            start = v;\r\n            len = 1;\r\n        }\r\n    }\r\n    if (len > 1) {\r\n        r.push(`${start}=${len}`);\r\n    }\r\n    else if (start === 0) {\r\n        r.push('');\r\n    }\r\n    else {\r\n        r.push(start.toString());\r\n    }\r\n    return r.join(',');\r\n}\r\nfunction decompressLine(line) {\r\n    if (line.length === 0) {\r\n        return [];\r\n    }\r\n    return line\r\n        .split(',')\r\n        .map((v) => {\r\n        if (v === '') {\r\n            return 0;\r\n        }\r\n        if (v.includes('=')) {\r\n            const [value, length] = v.split('=').map((v) => Number.parseInt(v, 10));\r\n            return Array(length + 1).fill(value);\r\n        }\r\n        return Number.parseInt(v, 10);\r\n    })\r\n        .flat();\r\n}\r\nfunction compressMatrix(matrix) {\r\n    if (matrix.length === 0) {\r\n        return '';\r\n    }\r\n    const rows = matrix.length;\r\n    const flat = matrix.flat();\r\n    return `${rows};${compressLine(flat)}`;\r\n}\r\nfunction decompressMatrix(matrix) {\r\n    if (matrix.length === 0) {\r\n        return [];\r\n    }\r\n    const [rowsInfo, data] = matrix.split(';');\r\n    const rows = Number.parseInt(rowsInfo, 10);\r\n    const values = decompressLine(data);\r\n    const r = [];\r\n    let acc = 0;\r\n    for (let i = rows; i > 0; i--) {\r\n        r.push(values.slice(acc, acc + i));\r\n        acc += i;\r\n    }\r\n    return r;\r\n}\r\nfunction generateOverlapLookup(sets, combinations, { toElemKey, what = 'intersection', compress = 'auto' } = {}) {\r\n    const data = sets.concat(combinations);\r\n    function overlapF(set) {\r\n        if (set.overlap) {\r\n            return set.overlap;\r\n        }\r\n        const f = setOverlapFactory(set.elems, toElemKey);\r\n        return (v) => {\r\n            if (v.overlap) {\r\n                return v.overlap(set);\r\n            }\r\n            return f(v.elems)[what];\r\n        };\r\n    }\r\n    const matrix = data.map((set, i) => {\r\n        const overlap = overlapF(set);\r\n        const r = [];\r\n        for (let j = i + 1; j < data.length; j++) {\r\n            r.push(overlap(data[j]));\r\n        }\r\n        return r;\r\n    });\r\n    matrix.pop();\r\n    if (compress === 'no') {\r\n        return matrix;\r\n    }\r\n    const compressed = compressMatrix(matrix);\r\n    if (compress === 'yes') {\r\n        return compressed;\r\n    }\r\n    const encodedLength = JSON.stringify(matrix).length;\r\n    const compressedLength = compressed.length + 2;\r\n    return compressedLength < encodedLength * 0.6 ? compressed : matrix;\r\n}\r\nfunction generateOverlapLookupFunction(matrix, sets, combinations, toKey$1 = toKey) {\r\n    const lookup = typeof matrix == 'string' ? decompressMatrix(matrix) : matrix;\r\n    const setIndex = new Map(sets.map((set, i) => [toKey$1(set), i]));\r\n    const combinationIndex = new Map(combinations.map((set, i) => [toKey$1(set), i + sets.length]));\r\n    const compute = (a, b) => {\r\n        if (a === b) {\r\n            return a.cardinality;\r\n        }\r\n        const aKey = toKey$1(a);\r\n        const bKey = toKey$1(b);\r\n        const aIndex = setIndex.has(aKey) ? setIndex.get(aKey) : combinationIndex.get(aKey);\r\n        const bIndex = setIndex.has(bKey) ? setIndex.get(bKey) : combinationIndex.get(bKey);\r\n        if (aIndex === bIndex) {\r\n            return a.cardinality;\r\n        }\r\n        const row = Math.min(aIndex, bIndex);\r\n        const col = Math.max(aIndex, bIndex) - row - 1;\r\n        if (row < 0 || row >= lookup.length || col < 0 || col >= lookup[row].length) {\r\n            return 0;\r\n        }\r\n        return lookup[row][col];\r\n    };\r\n    return {\r\n        setIndex,\r\n        compute,\r\n        combinationIndex,\r\n    };\r\n}\n\nconst bandScale = (domain, size, padding) => {\r\n    const blocks = domain.length + padding;\r\n    const step = size / Math.max(1, blocks);\r\n    const start = size - step * domain.length;\r\n    const lookup = new Map(domain.map((d, i) => [d, i]));\r\n    const bandwidth = step / (1 + padding);\r\n    const scale = (v) => {\r\n        const index = lookup.get(v);\r\n        if (index == null) {\r\n            return undefined;\r\n        }\r\n        return start + step * index;\r\n    };\r\n    scale.bandwidth = () => bandwidth;\r\n    return scale;\r\n};\n\nfunction hasOverlap(positions, heights, stride = 1) {\r\n    for (let i = 0; i < positions.length - stride; i += stride) {\r\n        const pos_i = positions[i];\r\n        const pos_n = positions[i + 1];\r\n        if (pos_i < pos_n) {\r\n            const right = pos_i + heights[i] / 2;\r\n            const left = pos_n - heights[i + 1] / 2;\r\n            if (right > left) {\r\n                return true;\r\n            }\r\n        }\r\n        else {\r\n            const left = pos_i - heights[i] / 2;\r\n            const right = pos_n + heights[i + 1] / 2;\r\n            if (right > left) {\r\n                return true;\r\n            }\r\n        }\r\n    }\r\n    return false;\r\n}\r\nfunction ensureLast(ticks, max, scale, heightPerTick, toStr) {\r\n    let last = ticks[ticks.length - 1];\r\n    if (!last.label) {\r\n        for (let j = ticks.length - 2; j > 0; --j) {\r\n            if (ticks[j].label) {\r\n                last = ticks[j];\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    if (last.value < max) {\r\n        const pos_l = scale(last.value);\r\n        const pos_max = scale(max);\r\n        if (pos_l < pos_max) {\r\n            const right = pos_l + heightPerTick(last.value) / 2;\r\n            const left = pos_max - heightPerTick(max) / 2;\r\n            if (right < left) {\r\n                ticks.push({ value: max, label: toStr(max) });\r\n            }\r\n        }\r\n        else {\r\n            const left = pos_l - heightPerTick(last.value) / 2;\r\n            const right = pos_max + heightPerTick(max) / 2;\r\n            if (right < left) {\r\n                ticks.push({ value: max, label: toStr(max) });\r\n            }\r\n        }\r\n    }\r\n    return ticks;\r\n}\r\nfunction genTicks(values, toStr = String, stride = 1) {\r\n    return values.map((v, i) => ({\r\n        value: v,\r\n        label: stride === 1 || i % stride === 0 ? toStr(v) : undefined,\r\n    }));\r\n}\r\nfunction checkValues(values, scale, heightPerTick, max, toStr) {\r\n    const positions = values.map((v) => scale(v));\r\n    const heights = values.map((v) => heightPerTick(v));\r\n    if (!hasOverlap(positions, heights)) {\r\n        return ensureLast(genTicks(values, toStr), max, scale, heightPerTick, toStr);\r\n    }\r\n    if (!hasOverlap(positions, heights, 2)) {\r\n        return ensureLast(genTicks(values, toStr), max, scale, heightPerTick, toStr);\r\n    }\r\n    return null;\r\n}\n\nfunction toStr$1(v) {\r\n    return v.toLocaleString();\r\n}\r\nfunction niceFactors(max, maxCount = 11) {\r\n    const digits = Math.max(0, Math.floor(Math.log10(max) - 0.5));\r\n    const factor = Math.pow(10, digits);\r\n    const factors = [1, 2, 5];\r\n    const r = factors.map((f) => f * factor);\r\n    if (digits > 0) {\r\n        r.unshift(factors[factors.length - 1] * Math.pow(10, digits - 1));\r\n    }\r\n    r.push(factors[0] * Math.pow(10, digits + 1));\r\n    const lower = Math.ceil(max / maxCount);\r\n    return r.filter((d) => d >= lower && d <= max);\r\n}\r\nfunction range$1(max, inc = 1) {\r\n    const values = [];\r\n    for (let v = 0; v <= max; v += inc) {\r\n        values.push(v);\r\n    }\r\n    return values;\r\n}\r\nfunction distributeTicks$1(max, maxCount, scale, heightPerTick) {\r\n    if (maxCount <= 0) {\r\n        return [];\r\n    }\r\n    const factors = niceFactors(max, maxCount);\r\n    for (let i = 0; i < factors.length; i++) {\r\n        const values = range$1(max, factors[i]);\r\n        const r = checkValues(values, scale, heightPerTick, max, toStr$1);\r\n        if (r) {\r\n            return r;\r\n        }\r\n    }\r\n    return genTicks([0, max], toStr$1);\r\n}\r\nconst linearScale = (max, range, options) => {\r\n    const size = range[1] - range[0];\r\n    const domain = max;\r\n    const scale = (v) => {\r\n        const cv = Math.max(0, Math.min(v, domain));\r\n        const n = cv / domain;\r\n        return range[0] + n * size;\r\n    };\r\n    scale.ticks = (count = 10) => {\r\n        if (options.orientation === 'vertical') {\r\n            const heightPerTick = Math.ceil(options.fontSizeHint * 1.4);\r\n            return distributeTicks$1(max, count + 1, scale, () => heightPerTick);\r\n        }\r\n        const widthPerChar = options.fontSizeHint / 1.4;\r\n        return distributeTicks$1(max, count + 1, scale, (v) => Math.ceil(toStr$1(v).length * widthPerChar));\r\n    };\r\n    scale.tickFormat = () => toStr$1;\r\n    return scale;\r\n};\n\nfunction toStr(v) {\r\n    const orders = ['', 'k', 'M', 'G'];\r\n    const order = Math.max(0, Math.min(Math.floor(Math.log10(v) / 3), orders.length - 1));\r\n    const vi = Math.round(v / Math.pow(10, order * 3 - 1)) / 10;\r\n    return `${vi.toLocaleString()}${orders[order]}`;\r\n}\r\nfunction range(max, factor) {\r\n    const values = [];\r\n    const inc = Math.pow(10, factor);\r\n    for (let v = 1; v <= max; v *= inc) {\r\n        values.push(v);\r\n    }\r\n    return values;\r\n}\r\nfunction generateInnerTicks(max, factor) {\r\n    const values = [];\r\n    const inc = 10;\r\n    for (let v = 1, i = 0; v <= max; v *= inc, i++) {\r\n        values.push({\r\n            value: v,\r\n            label: factor === 1 || i % factor === 0 ? toStr(v) : undefined,\r\n        });\r\n        for (let vv = v + v; vv < v * inc && vv < max; vv += v * factor) {\r\n            values.push({ value: vv });\r\n        }\r\n    }\r\n    return values;\r\n}\r\nfunction distributeTicks(max, maxCount, scale, heightPerTick) {\r\n    if (maxCount <= 0) {\r\n        return [];\r\n    }\r\n    for (const factor of [1, 2, 5]) {\r\n        const values = range(max, factor);\r\n        const r = checkValues(values, scale, heightPerTick, max, toStr);\r\n        if (r) {\r\n            return ensureLast(generateInnerTicks(max, factor), max, scale, heightPerTick, toStr);\r\n        }\r\n    }\r\n    return genTicks([0, max], toStr);\r\n}\r\nconst logScale = (max, range, options) => {\r\n    const size = range[1] - range[0];\r\n    const domain = max < 1 ? 1 : Math.log10(max);\r\n    const scale = (v) => {\r\n        const cv = Math.max(0, Math.min(v, domain));\r\n        const n = cv <= 1 ? 0 : Math.log10(cv) / domain;\r\n        return range[0] + n * size;\r\n    };\r\n    scale.ticks = (count = 10) => {\r\n        if (options.orientation === 'vertical') {\r\n            const heightPerTick = Math.ceil(options.fontSizeHint * 1.4);\r\n            return distributeTicks(max, count + 1, scale, () => heightPerTick);\r\n        }\r\n        const widthPerChar = options.fontSizeHint / 1.4;\r\n        return distributeTicks(max, count + 1, scale, (v) => Math.ceil(toStr(v).length * widthPerChar));\r\n    };\r\n    scale.tickFormat = () => toStr;\r\n    return scale;\r\n};\n\nfunction compressIndicesArray(arr) {\r\n    if (arr.length === 0) {\r\n        return '';\r\n    }\r\n    const encoded = [];\r\n    let startIndex = 0;\r\n    const push = (i) => {\r\n        if (i === startIndex + 1) {\r\n            encoded.push(arr[startIndex].toString());\r\n        }\r\n        else if (i === startIndex + 2 && i < 10) {\r\n            encoded.push(`${arr[startIndex]},${arr[startIndex + 1]}`);\r\n        }\r\n        else {\r\n            encoded.push(`${arr[startIndex]}+${i - startIndex - 1}`);\r\n        }\r\n        return i;\r\n    };\r\n    for (let i = 1; i < arr.length; i++) {\r\n        const expected = arr[i - 1] + 1;\r\n        const v = arr[i];\r\n        if (v !== expected) {\r\n            startIndex = push(i);\r\n            startIndex = i;\r\n        }\r\n    }\r\n    push(arr.length);\r\n    return encoded.join(',');\r\n}\r\nfunction toIndicesArray(arr, toIndex, { sortAble, compress = 'auto' } = {}) {\r\n    if (arr.length === 0) {\r\n        return [];\r\n    }\r\n    const base = arr.map((v) => toIndex(v));\r\n    if (compress === 'no') {\r\n        return base;\r\n    }\r\n    if (sortAble) {\r\n        base.sort((a, b) => a - b);\r\n    }\r\n    const encoded = compressIndicesArray(base);\r\n    const baseLength = JSON.stringify(base).length;\r\n    const encodedLength = encoded.length + 2;\r\n    if (encodedLength < baseLength * 0.6 ||\r\n        baseLength - encodedLength > 50 ||\r\n        (compress === 'yes' && encodedLength < baseLength)) {\r\n        return encoded;\r\n    }\r\n    return base;\r\n}\r\nfunction fromIndicesArray(indices, elements) {\r\n    if (typeof indices === 'string') {\r\n        if (indices.length === 0) {\r\n            return [];\r\n        }\r\n        return indices\r\n            .split(',')\r\n            .map((s) => {\r\n            if (s.includes('+')) {\r\n                const [start, length] = s.split('+').map((si) => Number.parseInt(si, 10));\r\n                return elements.slice(start, start + length + 1);\r\n            }\r\n            return elements[Number.parseInt(s, 10)];\r\n        })\r\n            .flat();\r\n    }\r\n    return indices.map((i) => elements[i]);\r\n}\n\nfunction withColor(v, s) {\r\n    if (s.color) {\r\n        v.color = s.color;\r\n    }\r\n    return v;\r\n}\n\nfunction fromDump(dump, elems, options = {}) {\r\n    const sets = dump.sets.map((set) => asSet(Object.assign(Object.assign({}, set), { elems: fromIndicesArray(set.elems, elems) })));\r\n    const gen = () => {\r\n        var _a;\r\n        return generateCombinations(sets, Object.assign({ type: 'intersection', elems, toElemKey: options.toElemKey }, (_a = dump.combinationOptions) !== null && _a !== void 0 ? _a : {}));\r\n    };\r\n    const combinations = dump.combinations\r\n        ? dump.combinations.map((c) => asCombination(Object.assign(Object.assign({}, c), { elems: fromIndicesArray(c.elems, elems) }), c.type, (v) => v.sets.map((i) => sets[i])))\r\n        : gen();\r\n    function fromSetRef(ref) {\r\n        if (ref.type === 'set') {\r\n            return sets[ref.index];\r\n        }\r\n        return combinations[ref.index];\r\n    }\r\n    return {\r\n        sets,\r\n        combinations,\r\n        selection: dump.selection\r\n            ? typeof dump.selection === 'string' || Array.isArray(dump.selection)\r\n                ? fromIndicesArray(dump.selection, elems)\r\n                : fromSetRef(dump.selection)\r\n            : undefined,\r\n        queries: dump.queries.map((query) => {\r\n            if (query.set) {\r\n                return {\r\n                    name: query.name,\r\n                    color: query.color,\r\n                    set: fromSetRef(query.set),\r\n                };\r\n            }\r\n            return {\r\n                name: query.name,\r\n                color: query.color,\r\n                elems: fromIndicesArray(query.elems, elems),\r\n            };\r\n        }),\r\n    };\r\n}\r\nfunction toDump(data, config = {}) {\r\n    var _a;\r\n    const indicesOptions = Object.assign({ sortAble: true }, config);\r\n    const toKey$1 = (_a = config.toKey) !== null && _a !== void 0 ? _a : toKey;\r\n    const bySetKey = new Map(data.sets.map((s, i) => [toKey$1(s), i]));\r\n    const byCombinationKey = new Map(data.combinations.map((s, i) => [toKey$1(s), i]));\r\n    const toSetRef = (s) => {\r\n        if (s.type === 'set') {\r\n            return {\r\n                type: s.type,\r\n                index: bySetKey.get(toKey$1(s)),\r\n            };\r\n        }\r\n        const index = byCombinationKey.get(toKey$1(s));\r\n        if (index == null || index < 0) {\r\n            return toIndicesArray(s.elems, data.toElemIndex, indicesOptions);\r\n        }\r\n        return {\r\n            type: s.type,\r\n            index,\r\n        };\r\n    };\r\n    const setLookup = data.sets.map((s, i) => ({\r\n        key: toKey$1(s),\r\n        i,\r\n    }));\r\n    return {\r\n        sets: data.sets.map((set) => withColor({\r\n            name: set.name,\r\n            cardinality: set.cardinality,\r\n            elems: toIndicesArray(set.elems, data.toElemIndex, indicesOptions),\r\n        }, set)),\r\n        combinations: config.compress === 'no'\r\n            ? data.combinations.map((c) => {\r\n                const setKeys = new Set(Array.from(c.sets).map(toKey$1));\r\n                return withColor({\r\n                    name: c.name,\r\n                    type: c.type,\r\n                    cardinality: c.cardinality,\r\n                    degree: c.degree,\r\n                    sets: setLookup.filter(({ key }) => setKeys.has(key)).map(({ i }) => i),\r\n                    elems: toIndicesArray(c.elems, data.toElemIndex, indicesOptions),\r\n                }, c);\r\n            })\r\n            : undefined,\r\n        combinationOptions: data.combinationOptions,\r\n        selection: data.selection\r\n            ? Array.isArray(data.selection)\r\n                ? toIndicesArray(data.selection, data.toElemIndex, indicesOptions)\r\n                : toSetRef(data.selection)\r\n            : undefined,\r\n        queries: data.queries.map((query) => {\r\n            const elems = isSetQuery(query)\r\n                ? toSetRef(query.set)\r\n                : toIndicesArray(Array.from(query.elems), data.toElemIndex, indicesOptions);\r\n            return {\r\n                name: query.name,\r\n                color: query.color,\r\n                set: typeof elems === 'string' || Array.isArray(elems) ? undefined : elems,\r\n                elems: typeof elems === 'string' || Array.isArray(elems) ? elems : undefined,\r\n            };\r\n        }),\r\n    };\r\n}\n\nfunction generateName(sets, type) {\r\n    if (sets.length === 1) {\r\n        return sets[0].name;\r\n    }\r\n    return `(${sets.map((set) => set.name).join(SET_JOINERS[type])})`;\r\n}\r\nfunction toStaticDump(data, config = {}) {\r\n    var _a;\r\n    const toKey$1 = (_a = config.toKey) !== null && _a !== void 0 ? _a : toKey;\r\n    const bySetKey = new Map(data.sets.map((s, i) => [toKey$1(s), i]));\r\n    const byCombinationKey = new Map(data.combinations.map((s, i) => [toKey$1(s), i]));\r\n    const toSelectionSetRef = (s) => {\r\n        if (isSetLike(s)) {\r\n            if (s.type === 'set') {\r\n                return {\r\n                    type: s.type,\r\n                    index: bySetKey.get(toKey$1(s)),\r\n                };\r\n            }\r\n            const index = byCombinationKey.get(toKey$1(s));\r\n            if (index != null && index >= 0) {\r\n                return {\r\n                    type: s.type,\r\n                    index,\r\n                };\r\n            }\r\n        }\r\n        const overlapF = setOverlapFactory(isSetLike(s) ? s.elems : s);\r\n        return data.sets\r\n            .map((set) => overlapF(set.elems).intersection)\r\n            .concat(data.combinations.map((set) => overlapF(set.elems).intersection));\r\n    };\r\n    const setIndex = new Map(data.sets.map((set, i) => [toKey$1(set), i]));\r\n    const overlaps = generateOverlapLookup(data.sets, data.combinations, config);\r\n    const shortNames = config.compress === 'yes';\r\n    const compressCombination = (set) => {\r\n        const partOf = Array.from(set.sets)\r\n            .map((s) => setIndex.get(toKey$1(s)))\r\n            .sort((a, b) => a - b);\r\n        const r = {\r\n            c: set.cardinality,\r\n            s: partOf.reduce((acc, i) => acc + Math.pow(2, i), 0),\r\n        };\r\n        if (set.name !==\r\n            generateName(partOf.map((i) => data.sets[i]), set.type)) {\r\n            r.n = set.name;\r\n        }\r\n        if (set.type !== 'intersection') {\r\n            r.type = set.type[0];\r\n        }\r\n        if (set.color) {\r\n            r.cc = set.color;\r\n        }\r\n        return r;\r\n    };\r\n    return {\r\n        sets: shortNames\r\n            ? data.sets.map((set) => ({ n: set.name, cc: set.color, c: set.cardinality }))\r\n            : data.sets.map((set) => withColor({ name: set.name, cardinality: set.cardinality }, set)),\r\n        combinations: shortNames\r\n            ? data.combinations.map(compressCombination)\r\n            : data.combinations.map((set) => withColor({\r\n                name: set.name,\r\n                cardinality: set.cardinality,\r\n                type: set.type,\r\n                sets: Array.from(set.sets)\r\n                    .map((s) => setIndex.get(toKey$1(s)))\r\n                    .sort((a, b) => a - b),\r\n            }, set)),\r\n        overlaps,\r\n        selection: data.selection ? toSelectionSetRef(data.selection) : undefined,\r\n        queries: data.queries.map((query) => {\r\n            if (isSetQuery(query)) {\r\n                const ref = toSelectionSetRef(query.set);\r\n                if (Array.isArray(ref)) {\r\n                    return {\r\n                        name: query.name,\r\n                        color: query.color,\r\n                        overlaps: ref,\r\n                    };\r\n                }\r\n                return {\r\n                    name: query.name,\r\n                    color: query.color,\r\n                    set: ref,\r\n                };\r\n            }\r\n            const overlapF = setOverlapFactory(query.elems);\r\n            const overlaps = data.sets\r\n                .map((set) => overlapF(set.elems).intersection)\r\n                .concat(data.combinations.map((set) => overlapF(set.elems).intersection));\r\n            return {\r\n                name: query.name,\r\n                color: query.color,\r\n                overlaps,\r\n            };\r\n        }),\r\n    };\r\n}\r\nfunction isCompressed(s) {\r\n    return typeof s.c === 'number';\r\n}\r\nfunction isCompressedSet(s) {\r\n    return typeof s.c === 'number';\r\n}\r\nfunction fromStaticDump(dump, config = {}) {\r\n    var _a;\r\n    const toKey$1 = (_a = config.toKey) !== null && _a !== void 0 ? _a : toKey;\r\n    let computeF = () => 0;\r\n    function withOverlap(s) {\r\n        s.overlap = (b) => computeF(s, b);\r\n        return s;\r\n    }\r\n    const sets = dump.sets.map((set) => withOverlap({\r\n        name: isCompressedSet(set) ? set.n : set.name,\r\n        cardinality: isCompressedSet(set) ? set.c : set.cardinality,\r\n        type: 'set',\r\n        elems: [],\r\n    }));\r\n    const fromBit = (v) => {\r\n        return sets.filter((_, i) => {\r\n            const position = Math.pow(2, i);\r\n            return (v & position) === position;\r\n        });\r\n    };\r\n    const combinations = dump.combinations.map((set) => {\r\n        var _a, _b;\r\n        const partOf = isCompressed(set) ? fromBit(set.s) : set.sets.map((i) => sets[i]);\r\n        const lookup = {\r\n            i: 'intersection',\r\n            u: 'union',\r\n            c: 'composite',\r\n            d: 'distinctIntersection',\r\n        };\r\n        const type = lookup[((_a = set.type) !== null && _a !== void 0 ? _a : 'i')[0]];\r\n        return withOverlap({\r\n            name: isCompressed(set) ? (_b = set.n) !== null && _b !== void 0 ? _b : generateName(partOf, type) : set.name,\r\n            cardinality: isCompressed(set) ? set.c : set.cardinality,\r\n            type,\r\n            degree: partOf.length,\r\n            sets: new Set(partOf),\r\n            elems: [],\r\n        });\r\n    });\r\n    const { setIndex, combinationIndex, compute } = generateOverlapLookupFunction(dump.overlaps, sets, combinations, toKey$1);\r\n    computeF = compute;\r\n    function fromSetRef(ref) {\r\n        if (ref.type === 'set') {\r\n            return sets[ref.index];\r\n        }\r\n        return combinations[ref.index];\r\n    }\r\n    function generateOverlap(lookup) {\r\n        return (v) => {\r\n            const key = toKey$1(v);\r\n            const index = setIndex.has(key) ? setIndex.get(key) : combinationIndex.get(key);\r\n            return index == null || index < 0 || index >= lookup.length ? 0 : lookup[index];\r\n        };\r\n    }\r\n    return {\r\n        sets,\r\n        combinations,\r\n        selection: dump.selection\r\n            ? Array.isArray(dump.selection)\r\n                ? generateOverlap(dump.selection)\r\n                : fromSetRef(dump.selection)\r\n            : undefined,\r\n        queries: dump.queries.map((query) => {\r\n            if (query.set) {\r\n                return {\r\n                    name: query.name,\r\n                    color: query.color,\r\n                    set: fromSetRef(query.set),\r\n                };\r\n            }\r\n            return {\r\n                name: query.name,\r\n                color: query.color,\r\n                overlap: generateOverlap(query.overlaps),\r\n            };\r\n        }),\r\n    };\r\n}\n\nexport { SET_JOINERS, asCombination, asCombinations, asSet, asSets, bandScale, extractCombinations, extractFromExpression, extractSets, fromDump, fromIndicesArray, fromSetName, fromStaticDump, generateCombinations, generateDistinctOverlapFunction, generateIntersectionOverlapFunction, generateOverlapFunction, generateOverlapLookup, generateOverlapLookupFunction, generateUnionOverlapFunction, isCalcQuery, isElemQuery, isGenerateSetCombinationOptions, isSet, isSetCombination, isSetLike, isSetQuery, isUpSetQuery, linearScale, logScale, mergeColors, parseColor, queryElemOverlap, queryOverlap, setElemIntersectionFactory, setElemOverlap, setElemOverlapFactory, setOverlap, setOverlapFactory, toDump, toIndicesArray, toKey, toStaticDump };\n//# sourceMappingURL=index.js.map\n","// Copyright (c) 2013 Pieroxy <pieroxy@pieroxy.net>\n// This work is free. You can redistribute it and/or modify it\n// under the terms of the WTFPL, Version 2\n// For more information see LICENSE.txt or http://www.wtfpl.net/\n//\n// For more information, the home page:\n// http://pieroxy.net/blog/pages/lz-string/testing.html\n//\n// LZ-based compression algorithm, version 1.4.4\nvar LZString = (function() {\n\n// private property\nvar f = String.fromCharCode;\nvar keyStrBase64 = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\nvar keyStrUriSafe = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+-$\";\nvar baseReverseDic = {};\n\nfunction getBaseValue(alphabet, character) {\n  if (!baseReverseDic[alphabet]) {\n    baseReverseDic[alphabet] = {};\n    for (var i=0 ; i<alphabet.length ; i++) {\n      baseReverseDic[alphabet][alphabet.charAt(i)] = i;\n    }\n  }\n  return baseReverseDic[alphabet][character];\n}\n\nvar LZString = {\n  compressToBase64 : function (input) {\n    if (input == null) return \"\";\n    var res = LZString._compress(input, 6, function(a){return keyStrBase64.charAt(a);});\n    switch (res.length % 4) { // To produce valid Base64\n    default: // When could this happen ?\n    case 0 : return res;\n    case 1 : return res+\"===\";\n    case 2 : return res+\"==\";\n    case 3 : return res+\"=\";\n    }\n  },\n\n  decompressFromBase64 : function (input) {\n    if (input == null) return \"\";\n    if (input == \"\") return null;\n    return LZString._decompress(input.length, 32, function(index) { return getBaseValue(keyStrBase64, input.charAt(index)); });\n  },\n\n  compressToUTF16 : function (input) {\n    if (input == null) return \"\";\n    return LZString._compress(input, 15, function(a){return f(a+32);}) + \" \";\n  },\n\n  decompressFromUTF16: function (compressed) {\n    if (compressed == null) return \"\";\n    if (compressed == \"\") return null;\n    return LZString._decompress(compressed.length, 16384, function(index) { return compressed.charCodeAt(index) - 32; });\n  },\n\n  //compress into uint8array (UCS-2 big endian format)\n  compressToUint8Array: function (uncompressed) {\n    var compressed = LZString.compress(uncompressed);\n    var buf=new Uint8Array(compressed.length*2); // 2 bytes per character\n\n    for (var i=0, TotalLen=compressed.length; i<TotalLen; i++) {\n      var current_value = compressed.charCodeAt(i);\n      buf[i*2] = current_value >>> 8;\n      buf[i*2+1] = current_value % 256;\n    }\n    return buf;\n  },\n\n  //decompress from uint8array (UCS-2 big endian format)\n  decompressFromUint8Array:function (compressed) {\n    if (compressed===null || compressed===undefined){\n        return LZString.decompress(compressed);\n    } else {\n        var buf=new Array(compressed.length/2); // 2 bytes per character\n        for (var i=0, TotalLen=buf.length; i<TotalLen; i++) {\n          buf[i]=compressed[i*2]*256+compressed[i*2+1];\n        }\n\n        var result = [];\n        buf.forEach(function (c) {\n          result.push(f(c));\n        });\n        return LZString.decompress(result.join(''));\n\n    }\n\n  },\n\n\n  //compress into a string that is already URI encoded\n  compressToEncodedURIComponent: function (input) {\n    if (input == null) return \"\";\n    return LZString._compress(input, 6, function(a){return keyStrUriSafe.charAt(a);});\n  },\n\n  //decompress from an output of compressToEncodedURIComponent\n  decompressFromEncodedURIComponent:function (input) {\n    if (input == null) return \"\";\n    if (input == \"\") return null;\n    input = input.replace(/ /g, \"+\");\n    return LZString._decompress(input.length, 32, function(index) { return getBaseValue(keyStrUriSafe, input.charAt(index)); });\n  },\n\n  compress: function (uncompressed) {\n    return LZString._compress(uncompressed, 16, function(a){return f(a);});\n  },\n  _compress: function (uncompressed, bitsPerChar, getCharFromInt) {\n    if (uncompressed == null) return \"\";\n    var i, value,\n        context_dictionary= {},\n        context_dictionaryToCreate= {},\n        context_c=\"\",\n        context_wc=\"\",\n        context_w=\"\",\n        context_enlargeIn= 2, // Compensate for the first entry which should not count\n        context_dictSize= 3,\n        context_numBits= 2,\n        context_data=[],\n        context_data_val=0,\n        context_data_position=0,\n        ii;\n\n    for (ii = 0; ii < uncompressed.length; ii += 1) {\n      context_c = uncompressed.charAt(ii);\n      if (!Object.prototype.hasOwnProperty.call(context_dictionary,context_c)) {\n        context_dictionary[context_c] = context_dictSize++;\n        context_dictionaryToCreate[context_c] = true;\n      }\n\n      context_wc = context_w + context_c;\n      if (Object.prototype.hasOwnProperty.call(context_dictionary,context_wc)) {\n        context_w = context_wc;\n      } else {\n        if (Object.prototype.hasOwnProperty.call(context_dictionaryToCreate,context_w)) {\n          if (context_w.charCodeAt(0)<256) {\n            for (i=0 ; i<context_numBits ; i++) {\n              context_data_val = (context_data_val << 1);\n              if (context_data_position == bitsPerChar-1) {\n                context_data_position = 0;\n                context_data.push(getCharFromInt(context_data_val));\n                context_data_val = 0;\n              } else {\n                context_data_position++;\n              }\n            }\n            value = context_w.charCodeAt(0);\n            for (i=0 ; i<8 ; i++) {\n              context_data_val = (context_data_val << 1) | (value&1);\n              if (context_data_position == bitsPerChar-1) {\n                context_data_position = 0;\n                context_data.push(getCharFromInt(context_data_val));\n                context_data_val = 0;\n              } else {\n                context_data_position++;\n              }\n              value = value >> 1;\n            }\n          } else {\n            value = 1;\n            for (i=0 ; i<context_numBits ; i++) {\n              context_data_val = (context_data_val << 1) | value;\n              if (context_data_position ==bitsPerChar-1) {\n                context_data_position = 0;\n                context_data.push(getCharFromInt(context_data_val));\n                context_data_val = 0;\n              } else {\n                context_data_position++;\n              }\n              value = 0;\n            }\n            value = context_w.charCodeAt(0);\n            for (i=0 ; i<16 ; i++) {\n              context_data_val = (context_data_val << 1) | (value&1);\n              if (context_data_position == bitsPerChar-1) {\n                context_data_position = 0;\n                context_data.push(getCharFromInt(context_data_val));\n                context_data_val = 0;\n              } else {\n                context_data_position++;\n              }\n              value = value >> 1;\n            }\n          }\n          context_enlargeIn--;\n          if (context_enlargeIn == 0) {\n            context_enlargeIn = Math.pow(2, context_numBits);\n            context_numBits++;\n          }\n          delete context_dictionaryToCreate[context_w];\n        } else {\n          value = context_dictionary[context_w];\n          for (i=0 ; i<context_numBits ; i++) {\n            context_data_val = (context_data_val << 1) | (value&1);\n            if (context_data_position == bitsPerChar-1) {\n              context_data_position = 0;\n              context_data.push(getCharFromInt(context_data_val));\n              context_data_val = 0;\n            } else {\n              context_data_position++;\n            }\n            value = value >> 1;\n          }\n\n\n        }\n        context_enlargeIn--;\n        if (context_enlargeIn == 0) {\n          context_enlargeIn = Math.pow(2, context_numBits);\n          context_numBits++;\n        }\n        // Add wc to the dictionary.\n        context_dictionary[context_wc] = context_dictSize++;\n        context_w = String(context_c);\n      }\n    }\n\n    // Output the code for w.\n    if (context_w !== \"\") {\n      if (Object.prototype.hasOwnProperty.call(context_dictionaryToCreate,context_w)) {\n        if (context_w.charCodeAt(0)<256) {\n          for (i=0 ; i<context_numBits ; i++) {\n            context_data_val = (context_data_val << 1);\n            if (context_data_position == bitsPerChar-1) {\n              context_data_position = 0;\n              context_data.push(getCharFromInt(context_data_val));\n              context_data_val = 0;\n            } else {\n              context_data_position++;\n            }\n          }\n          value = context_w.charCodeAt(0);\n          for (i=0 ; i<8 ; i++) {\n            context_data_val = (context_data_val << 1) | (value&1);\n            if (context_data_position == bitsPerChar-1) {\n              context_data_position = 0;\n              context_data.push(getCharFromInt(context_data_val));\n              context_data_val = 0;\n            } else {\n              context_data_position++;\n            }\n            value = value >> 1;\n          }\n        } else {\n          value = 1;\n          for (i=0 ; i<context_numBits ; i++) {\n            context_data_val = (context_data_val << 1) | value;\n            if (context_data_position == bitsPerChar-1) {\n              context_data_position = 0;\n              context_data.push(getCharFromInt(context_data_val));\n              context_data_val = 0;\n            } else {\n              context_data_position++;\n            }\n            value = 0;\n          }\n          value = context_w.charCodeAt(0);\n          for (i=0 ; i<16 ; i++) {\n            context_data_val = (context_data_val << 1) | (value&1);\n            if (context_data_position == bitsPerChar-1) {\n              context_data_position = 0;\n              context_data.push(getCharFromInt(context_data_val));\n              context_data_val = 0;\n            } else {\n              context_data_position++;\n            }\n            value = value >> 1;\n          }\n        }\n        context_enlargeIn--;\n        if (context_enlargeIn == 0) {\n          context_enlargeIn = Math.pow(2, context_numBits);\n          context_numBits++;\n        }\n        delete context_dictionaryToCreate[context_w];\n      } else {\n        value = context_dictionary[context_w];\n        for (i=0 ; i<context_numBits ; i++) {\n          context_data_val = (context_data_val << 1) | (value&1);\n          if (context_data_position == bitsPerChar-1) {\n            context_data_position = 0;\n            context_data.push(getCharFromInt(context_data_val));\n            context_data_val = 0;\n          } else {\n            context_data_position++;\n          }\n          value = value >> 1;\n        }\n\n\n      }\n      context_enlargeIn--;\n      if (context_enlargeIn == 0) {\n        context_enlargeIn = Math.pow(2, context_numBits);\n        context_numBits++;\n      }\n    }\n\n    // Mark the end of the stream\n    value = 2;\n    for (i=0 ; i<context_numBits ; i++) {\n      context_data_val = (context_data_val << 1) | (value&1);\n      if (context_data_position == bitsPerChar-1) {\n        context_data_position = 0;\n        context_data.push(getCharFromInt(context_data_val));\n        context_data_val = 0;\n      } else {\n        context_data_position++;\n      }\n      value = value >> 1;\n    }\n\n    // Flush the last char\n    while (true) {\n      context_data_val = (context_data_val << 1);\n      if (context_data_position == bitsPerChar-1) {\n        context_data.push(getCharFromInt(context_data_val));\n        break;\n      }\n      else context_data_position++;\n    }\n    return context_data.join('');\n  },\n\n  decompress: function (compressed) {\n    if (compressed == null) return \"\";\n    if (compressed == \"\") return null;\n    return LZString._decompress(compressed.length, 32768, function(index) { return compressed.charCodeAt(index); });\n  },\n\n  _decompress: function (length, resetValue, getNextValue) {\n    var dictionary = [],\n        next,\n        enlargeIn = 4,\n        dictSize = 4,\n        numBits = 3,\n        entry = \"\",\n        result = [],\n        i,\n        w,\n        bits, resb, maxpower, power,\n        c,\n        data = {val:getNextValue(0), position:resetValue, index:1};\n\n    for (i = 0; i < 3; i += 1) {\n      dictionary[i] = i;\n    }\n\n    bits = 0;\n    maxpower = Math.pow(2,2);\n    power=1;\n    while (power!=maxpower) {\n      resb = data.val & data.position;\n      data.position >>= 1;\n      if (data.position == 0) {\n        data.position = resetValue;\n        data.val = getNextValue(data.index++);\n      }\n      bits |= (resb>0 ? 1 : 0) * power;\n      power <<= 1;\n    }\n\n    switch (next = bits) {\n      case 0:\n          bits = 0;\n          maxpower = Math.pow(2,8);\n          power=1;\n          while (power!=maxpower) {\n            resb = data.val & data.position;\n            data.position >>= 1;\n            if (data.position == 0) {\n              data.position = resetValue;\n              data.val = getNextValue(data.index++);\n            }\n            bits |= (resb>0 ? 1 : 0) * power;\n            power <<= 1;\n          }\n        c = f(bits);\n        break;\n      case 1:\n          bits = 0;\n          maxpower = Math.pow(2,16);\n          power=1;\n          while (power!=maxpower) {\n            resb = data.val & data.position;\n            data.position >>= 1;\n            if (data.position == 0) {\n              data.position = resetValue;\n              data.val = getNextValue(data.index++);\n            }\n            bits |= (resb>0 ? 1 : 0) * power;\n            power <<= 1;\n          }\n        c = f(bits);\n        break;\n      case 2:\n        return \"\";\n    }\n    dictionary[3] = c;\n    w = c;\n    result.push(c);\n    while (true) {\n      if (data.index > length) {\n        return \"\";\n      }\n\n      bits = 0;\n      maxpower = Math.pow(2,numBits);\n      power=1;\n      while (power!=maxpower) {\n        resb = data.val & data.position;\n        data.position >>= 1;\n        if (data.position == 0) {\n          data.position = resetValue;\n          data.val = getNextValue(data.index++);\n        }\n        bits |= (resb>0 ? 1 : 0) * power;\n        power <<= 1;\n      }\n\n      switch (c = bits) {\n        case 0:\n          bits = 0;\n          maxpower = Math.pow(2,8);\n          power=1;\n          while (power!=maxpower) {\n            resb = data.val & data.position;\n            data.position >>= 1;\n            if (data.position == 0) {\n              data.position = resetValue;\n              data.val = getNextValue(data.index++);\n            }\n            bits |= (resb>0 ? 1 : 0) * power;\n            power <<= 1;\n          }\n\n          dictionary[dictSize++] = f(bits);\n          c = dictSize-1;\n          enlargeIn--;\n          break;\n        case 1:\n          bits = 0;\n          maxpower = Math.pow(2,16);\n          power=1;\n          while (power!=maxpower) {\n            resb = data.val & data.position;\n            data.position >>= 1;\n            if (data.position == 0) {\n              data.position = resetValue;\n              data.val = getNextValue(data.index++);\n            }\n            bits |= (resb>0 ? 1 : 0) * power;\n            power <<= 1;\n          }\n          dictionary[dictSize++] = f(bits);\n          c = dictSize-1;\n          enlargeIn--;\n          break;\n        case 2:\n          return result.join('');\n      }\n\n      if (enlargeIn == 0) {\n        enlargeIn = Math.pow(2, numBits);\n        numBits++;\n      }\n\n      if (dictionary[c]) {\n        entry = dictionary[c];\n      } else {\n        if (c === dictSize) {\n          entry = w + w.charAt(0);\n        } else {\n          return null;\n        }\n      }\n      result.push(entry);\n\n      // Add w+entry[0] to the dictionary.\n      dictionary[dictSize++] = w + entry.charAt(0);\n      enlargeIn--;\n\n      w = entry;\n\n      if (enlargeIn == 0) {\n        enlargeIn = Math.pow(2, numBits);\n        numBits++;\n      }\n\n    }\n  }\n};\n  return LZString;\n})();\n\nif (typeof define === 'function' && define.amd) {\n  define(function () { return LZString; });\n} else if( typeof module !== 'undefined' && module != null ) {\n  module.exports = LZString\n}\n","/**\n * @upsetjs/react\n * https://github.com/upsetjs/upsetjs\n *\n * Copyright (c) 2022 Samuel Gratzl <sam@sgratzl.com>\n */\n\nimport React, { useRef, useState, useLayoutEffect, useMemo, useCallback } from 'react';\nimport { toKey, toDump, isElemQuery, isSetQuery, isSetLike as isSetLike$1, toStaticDump, setElemOverlapFactory, setOverlapFactory, generateCombinations, generateOverlapFunction, bandScale as bandScale$1, linearScale, logScale, queryOverlap, queryElemOverlap, generateDistinctOverlapFunction, isSet, isSetCombination, isGenerateSetCombinationOptions, isUpSetQuery } from '@upsetjs/model';\nexport * from '@upsetjs/model';\nimport LZString from 'lz-string';\n\n/**\r\n * @upsetjs/react\r\n * https://github.com/upsetjs/upsetjs\r\n *\r\n * Copyright (c) 2021 Samuel Gratzl <sam@sgratzl.com>\r\n */\r\nfunction extractStyleId(node) {\r\n    return Array.from(node.classList)\r\n        .find((d) => d.startsWith('root-'))\r\n        .slice('root-'.length);\r\n}\r\nfunction extractTitle(node, styleId) {\r\n    var _a, _b;\r\n    return (_b = (_a = node.querySelector(`titleTextStyle-${styleId}`)) === null || _a === void 0 ? void 0 : _a.textContent) !== null && _b !== void 0 ? _b : 'UpSetJS';\r\n}\r\nfunction extractDescription(node, styleId) {\r\n    var _a, _b;\r\n    return (_b = (_a = node.querySelector(`descTextStyle-${styleId}`)) === null || _a === void 0 ? void 0 : _a.textContent) !== null && _b !== void 0 ? _b : '';\r\n}\n\n/**\r\n * @upsetjs/react\r\n * https://github.com/upsetjs/upsetjs\r\n *\r\n * Copyright (c) 2021 Samuel Gratzl <sam@sgratzl.com>\r\n */\r\nconst EMPTY_OBJECT = {};\r\nconst EMPTY_ARRAY$2 = [];\r\nconst DEFAULT_FONT_SIZES = {\r\n    setLabel: '16px',\r\n    axisTick: '10px',\r\n    chartLabel: '16px',\r\n    barLabel: '10px',\r\n    legend: '10px',\r\n    description: '16px',\r\n    title: '24px',\r\n    valueLabel: '12px',\r\n    exportLabel: '10px',\r\n};\r\nconst DEFAULT_WIDTH_RATIO = [0.18, 0.12, 0.7];\r\nconst DEFAULT_HEIGHT_RATIO = [0.6, 0.4];\r\nconst DEFAULT_COMBINATIONS = {\r\n    type: 'intersection',\r\n    order: ['cardinality:desc', 'name:asc'],\r\n};\r\nconst FONT_SIZES_KEYS = /* #__PURE__ */ Object.keys(DEFAULT_FONT_SIZES);\r\nconst MULTI_STYLE_KEYS = [\r\n    'axisTick',\r\n    'bar',\r\n    'barLabel',\r\n    'chartLabel',\r\n    'dot',\r\n    'legend',\r\n    'title',\r\n    'description',\r\n    'setLabel',\r\n    'set',\r\n    'valueLabel',\r\n];\r\nconst EXPORT_OPTION_KEYS = ['dump', 'png', 'share', 'svg', 'vega'];\r\nconst OVERFLOW_OPACITY_FACTOR = [0.7, 0.4];\r\nconst OVERFLOW_PADDING_FACTOR = [0.15, 0.3];\n\nvar sets$6 = [\n];\nvar intersections$5 = [\n];\nvar bb$5 = {\n\tx: 0,\n\ty: 0,\n\twidth: 10,\n\theight: 10\n};\nvar venn0 = {\n\tsets: sets$6,\n\tintersections: intersections$5,\n\tbb: bb$5\n};\n\nvar sets$5 = [\n\t{\n\t\tcx: 0,\n\t\tcy: 0,\n\t\tr: 5,\n\t\ttext: {\n\t\t\tx: 3.5,\n\t\t\ty: -4\n\t\t},\n\t\talign: \"start\",\n\t\tverticalAlign: \"bottom\"\n\t}\n];\nvar intersections$4 = [\n\t{\n\t\tsets: [\n\t\t\t0\n\t\t],\n\t\tx1: 0,\n\t\ty1: 5,\n\t\tarcs: [\n\t\t\t{\n\t\t\t\tmode: \"i\",\n\t\t\t\tref: 0,\n\t\t\t\tx2: 0,\n\t\t\t\ty2: -5,\n\t\t\t\tsweep: false,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tmode: \"i\",\n\t\t\t\tref: 0,\n\t\t\t\tx2: 0,\n\t\t\t\ty2: 5,\n\t\t\t\tsweep: false,\n\t\t\t\tlarge: false\n\t\t\t}\n\t\t],\n\t\ttext: {\n\t\t\tx: 0,\n\t\t\ty: 0\n\t\t}\n\t}\n];\nvar bb$4 = {\n\tx: -5,\n\ty: -5,\n\twidth: 10,\n\theight: 10\n};\nvar venn1 = {\n\tsets: sets$5,\n\tintersections: intersections$4,\n\tbb: bb$4\n};\n\nvar sets$4 = [\n\t{\n\t\tcx: -4,\n\t\tcy: 0,\n\t\tr: 5,\n\t\ttext: {\n\t\t\tx: -7.5,\n\t\t\ty: 4\n\t\t},\n\t\talign: \"end\",\n\t\tverticalAlign: \"top\"\n\t},\n\t{\n\t\tcx: 4,\n\t\tcy: 0,\n\t\tr: 5,\n\t\ttext: {\n\t\t\tx: 7.5,\n\t\t\ty: -4\n\t\t},\n\t\talign: \"start\",\n\t\tverticalAlign: \"bottom\"\n\t}\n];\nvar intersections$3 = [\n\t{\n\t\tsets: [\n\t\t\t0\n\t\t],\n\t\tx1: 0,\n\t\ty1: -3,\n\t\tarcs: [\n\t\t\t{\n\t\t\t\tmode: \"i\",\n\t\t\t\tref: 0,\n\t\t\t\tx2: 0,\n\t\t\t\ty2: 3,\n\t\t\t\tsweep: false,\n\t\t\t\tlarge: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tmode: \"o\",\n\t\t\t\tref: 1,\n\t\t\t\tx2: 0,\n\t\t\t\ty2: -3,\n\t\t\t\tsweep: true,\n\t\t\t\tlarge: false\n\t\t\t}\n\t\t],\n\t\ttext: {\n\t\t\tx: -4,\n\t\t\ty: 0\n\t\t}\n\t},\n\t{\n\t\tsets: [\n\t\t\t1\n\t\t],\n\t\tx1: 0,\n\t\ty1: 3,\n\t\tarcs: [\n\t\t\t{\n\t\t\t\tmode: \"i\",\n\t\t\t\tref: 1,\n\t\t\t\tx2: 0,\n\t\t\t\ty2: -3,\n\t\t\t\tsweep: false,\n\t\t\t\tlarge: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tmode: \"o\",\n\t\t\t\tref: 0,\n\t\t\t\tx2: 0,\n\t\t\t\ty2: 3,\n\t\t\t\tsweep: true,\n\t\t\t\tlarge: false\n\t\t\t}\n\t\t],\n\t\ttext: {\n\t\t\tx: 4,\n\t\t\ty: 0\n\t\t}\n\t},\n\t{\n\t\tsets: [\n\t\t\t0,\n\t\t\t1\n\t\t],\n\t\tx1: 0,\n\t\ty1: 3,\n\t\tarcs: [\n\t\t\t{\n\t\t\t\tmode: \"i\",\n\t\t\t\tref: 0,\n\t\t\t\tx2: 0,\n\t\t\t\ty2: -3,\n\t\t\t\tsweep: false,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tmode: \"i\",\n\t\t\t\tref: 1,\n\t\t\t\tx2: 0,\n\t\t\t\ty2: 3,\n\t\t\t\tsweep: false,\n\t\t\t\tlarge: false\n\t\t\t}\n\t\t],\n\t\ttext: {\n\t\t\tx: 0,\n\t\t\ty: 0\n\t\t}\n\t}\n];\nvar bb$3 = {\n\tx: -9,\n\ty: -5,\n\twidth: 18,\n\theight: 10\n};\nvar venn2 = {\n\tsets: sets$4,\n\tintersections: intersections$3,\n\tbb: bb$3\n};\n\nvar sets$3 = [\n\t{\n\t\tcx: -3.464,\n\t\tcy: -2,\n\t\tr: 5,\n\t\ttext: {\n\t\t\tx: -7,\n\t\t\ty: -6\n\t\t},\n\t\talign: \"end\",\n\t\tverticalAlign: \"bottom\"\n\t},\n\t{\n\t\tcx: 3.464,\n\t\tcy: -2,\n\t\tr: 5,\n\t\ttext: {\n\t\t\tx: 7,\n\t\t\ty: -6\n\t\t},\n\t\talign: \"start\",\n\t\tverticalAlign: \"bottom\"\n\t},\n\t{\n\t\tcx: 0,\n\t\tcy: 4,\n\t\tr: 5,\n\t\ttext: {\n\t\t\tx: 4,\n\t\t\ty: 7.5\n\t\t},\n\t\talign: \"start\",\n\t\tverticalAlign: \"top\"\n\t}\n];\nvar intersections$2 = [\n\t{\n\t\tsets: [\n\t\t\t0\n\t\t],\n\t\tx1: -4.855,\n\t\ty1: 2.803,\n\t\tarcs: [\n\t\t\t{\n\t\t\t\tmode: \"o\",\n\t\t\t\tref: 2,\n\t\t\t\tx2: -1.39,\n\t\t\t\ty2: -0.803,\n\t\t\t\tsweep: true,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tmode: \"o\",\n\t\t\t\tref: 1,\n\t\t\t\tx2: 0,\n\t\t\t\ty2: -5.606,\n\t\t\t\tsweep: true,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tmode: \"i\",\n\t\t\t\tref: 0,\n\t\t\t\tx2: -4.855,\n\t\t\t\ty2: 2.803,\n\t\t\t\tsweep: false,\n\t\t\t\tlarge: true\n\t\t\t}\n\t\t],\n\t\ttext: {\n\t\t\tx: -4.216,\n\t\t\ty: -2.434\n\t\t}\n\t},\n\t{\n\t\tsets: [\n\t\t\t1\n\t\t],\n\t\tx1: 0,\n\t\ty1: -5.606,\n\t\tarcs: [\n\t\t\t{\n\t\t\t\tmode: \"o\",\n\t\t\t\tref: 0,\n\t\t\t\tx2: 1.39,\n\t\t\t\ty2: -0.803,\n\t\t\t\tsweep: true,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tmode: \"o\",\n\t\t\t\tref: 2,\n\t\t\t\tx2: 4.855,\n\t\t\t\ty2: 2.803,\n\t\t\t\tsweep: true,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tmode: \"i\",\n\t\t\t\tref: 1,\n\t\t\t\tx2: 0,\n\t\t\t\ty2: -5.606,\n\t\t\t\tsweep: false,\n\t\t\t\tlarge: true\n\t\t\t}\n\t\t],\n\t\ttext: {\n\t\t\tx: 4.216,\n\t\t\ty: -2.434\n\t\t}\n\t},\n\t{\n\t\tsets: [\n\t\t\t2\n\t\t],\n\t\tx1: -4.855,\n\t\ty1: 2.803,\n\t\tarcs: [\n\t\t\t{\n\t\t\t\tmode: \"o\",\n\t\t\t\tref: 0,\n\t\t\t\tx2: 0,\n\t\t\t\ty2: 1.606,\n\t\t\t\tsweep: false,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tmode: \"o\",\n\t\t\t\tref: 1,\n\t\t\t\tx2: 4.855,\n\t\t\t\ty2: 2.803,\n\t\t\t\tsweep: false,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tmode: \"i\",\n\t\t\t\tref: 2,\n\t\t\t\tx2: -4.855,\n\t\t\t\ty2: 2.803,\n\t\t\t\tsweep: true,\n\t\t\t\tlarge: true\n\t\t\t}\n\t\t],\n\t\ttext: {\n\t\t\tx: 0,\n\t\t\ty: 4.869\n\t\t}\n\t},\n\t{\n\t\tsets: [\n\t\t\t0,\n\t\t\t1\n\t\t],\n\t\tx1: 0,\n\t\ty1: -5.606,\n\t\tarcs: [\n\t\t\t{\n\t\t\t\tmode: \"i\",\n\t\t\t\tref: 1,\n\t\t\t\tx2: -1.39,\n\t\t\t\ty2: -0.803,\n\t\t\t\tsweep: false,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tmode: \"o\",\n\t\t\t\tref: 2,\n\t\t\t\tx2: 1.39,\n\t\t\t\ty2: -0.803,\n\t\t\t\tsweep: true,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tmode: \"i\",\n\t\t\t\tref: 0,\n\t\t\t\tx2: 0,\n\t\t\t\ty2: -5.606,\n\t\t\t\tsweep: false,\n\t\t\t\tlarge: false\n\t\t\t}\n\t\t],\n\t\ttext: {\n\t\t\tx: 0,\n\t\t\ty: -2.404\n\t\t}\n\t},\n\t{\n\t\tsets: [\n\t\t\t0,\n\t\t\t2\n\t\t],\n\t\tx1: -4.855,\n\t\ty1: 2.803,\n\t\tarcs: [\n\t\t\t{\n\t\t\t\tmode: \"i\",\n\t\t\t\tref: 2,\n\t\t\t\tx2: -1.39,\n\t\t\t\ty2: -0.803,\n\t\t\t\tsweep: true,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tmode: \"o\",\n\t\t\t\tref: 1,\n\t\t\t\tx2: 0,\n\t\t\t\ty2: 1.606,\n\t\t\t\tsweep: false,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tmode: \"i\",\n\t\t\t\tref: 0,\n\t\t\t\tx2: -4.855,\n\t\t\t\ty2: 2.803,\n\t\t\t\tsweep: true,\n\t\t\t\tlarge: false\n\t\t\t}\n\t\t],\n\t\ttext: {\n\t\t\tx: -2.082,\n\t\t\ty: 1.202\n\t\t}\n\t},\n\t{\n\t\tsets: [\n\t\t\t1,\n\t\t\t2\n\t\t],\n\t\tx1: 4.855,\n\t\ty1: 2.803,\n\t\tarcs: [\n\t\t\t{\n\t\t\t\tmode: \"i\",\n\t\t\t\tref: 2,\n\t\t\t\tx2: 1.39,\n\t\t\t\ty2: -0.803,\n\t\t\t\tsweep: false,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tmode: \"o\",\n\t\t\t\tref: 0,\n\t\t\t\tx2: 0,\n\t\t\t\ty2: 1.606,\n\t\t\t\tsweep: true,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tmode: \"i\",\n\t\t\t\tref: 1,\n\t\t\t\tx2: 4.855,\n\t\t\t\ty2: 2.803,\n\t\t\t\tsweep: false,\n\t\t\t\tlarge: false\n\t\t\t}\n\t\t],\n\t\ttext: {\n\t\t\tx: 2.082,\n\t\t\ty: 1.202\n\t\t}\n\t},\n\t{\n\t\tsets: [\n\t\t\t0,\n\t\t\t1,\n\t\t\t2\n\t\t],\n\t\tx1: 1.39,\n\t\ty1: -0.803,\n\t\tarcs: [\n\t\t\t{\n\t\t\t\tmode: \"i\",\n\t\t\t\tref: 0,\n\t\t\t\tx2: 0,\n\t\t\t\ty2: 1.606,\n\t\t\t\tsweep: true,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tmode: \"i\",\n\t\t\t\tref: 1,\n\t\t\t\tx2: -1.39,\n\t\t\t\ty2: -0.803,\n\t\t\t\tsweep: true,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tmode: \"i\",\n\t\t\t\tref: 2,\n\t\t\t\tx2: 1.39,\n\t\t\t\ty2: -0.803,\n\t\t\t\tsweep: true,\n\t\t\t\tlarge: false\n\t\t\t}\n\t\t],\n\t\ttext: {\n\t\t\tx: 0,\n\t\t\ty: 0\n\t\t}\n\t}\n];\nvar bb$2 = {\n\tx: -8.464,\n\ty: -7,\n\twidth: 16.928,\n\theight: 16\n};\nvar venn3 = {\n\tsets: sets$3,\n\tintersections: intersections$2,\n\tbb: bb$2\n};\n\nvar sets$2 = [\n\t{\n\t\tcx: 0.439,\n\t\tcy: -1.061,\n\t\trx: 2.5,\n\t\try: 5,\n\t\trotation: 45,\n\t\ttext: {\n\t\t\tx: 4.5,\n\t\t\ty: -4.5\n\t\t},\n\t\talign: \"start\",\n\t\tverticalAlign: \"bottom\"\n\t},\n\t{\n\t\tcx: 2.561,\n\t\tcy: 1.061,\n\t\trx: 2.5,\n\t\try: 5,\n\t\trotation: 45,\n\t\ttext: {\n\t\t\tx: 4,\n\t\t\ty: 3.75\n\t\t},\n\t\talign: \"start\",\n\t\tverticalAlign: \"top\"\n\t},\n\t{\n\t\tcx: -2.561,\n\t\tcy: 1.061,\n\t\trx: 2.5,\n\t\try: 5,\n\t\trotation: -45,\n\t\ttext: {\n\t\t\tx: -4,\n\t\t\ty: 3.7\n\t\t},\n\t\talign: \"end\",\n\t\tverticalAlign: \"top\"\n\t},\n\t{\n\t\tcx: -0.439,\n\t\tcy: -1.061,\n\t\trx: 2.5,\n\t\try: 5,\n\t\trotation: -45,\n\t\ttext: {\n\t\t\tx: -4.5,\n\t\t\ty: -4.5\n\t\t},\n\t\talign: \"end\",\n\t\tverticalAlign: \"bottom\"\n\t}\n];\nvar intersections$1 = [\n\t{\n\t\tsets: [\n\t\t\t0\n\t\t],\n\t\tx1: 0,\n\t\ty1: -3.94,\n\t\tarcs: [\n\t\t\t{\n\t\t\t\tref: 0,\n\t\t\t\tmode: \"i\",\n\t\t\t\tx2: 4.328,\n\t\t\t\ty2: -2.828,\n\t\t\t\tsweep: true,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tref: 1,\n\t\t\t\tmode: \"o\",\n\t\t\t\tx2: 2.179,\n\t\t\t\ty2: -1.858,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tref: 3,\n\t\t\t\tmode: \"o\",\n\t\t\t\tx2: 0,\n\t\t\t\ty2: -3.94,\n\t\t\t\tlarge: false\n\t\t\t}\n\t\t],\n\t\ttext: {\n\t\t\tx: 2.914,\n\t\t\ty: -3.536\n\t\t}\n\t},\n\t{\n\t\tsets: [\n\t\t\t1\n\t\t],\n\t\tx1: 4.328,\n\t\ty1: -2.828,\n\t\tarcs: [\n\t\t\t{\n\t\t\t\tref: 1,\n\t\t\t\tmode: \"i\",\n\t\t\t\tx2: 0,\n\t\t\t\ty2: 5.006,\n\t\t\t\tsweep: true,\n\t\t\t\tlarge: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tref: 2,\n\t\t\t\tmode: \"o\",\n\t\t\t\tx2: 1.328,\n\t\t\t\ty2: 2.828\n\t\t\t},\n\t\t\t{\n\t\t\t\tref: 3,\n\t\t\t\tmode: \"o\",\n\t\t\t\tx2: 3.108,\n\t\t\t\ty2: -0.328\n\t\t\t},\n\t\t\t{\n\t\t\t\tref: 0,\n\t\t\t\tmode: \"o\",\n\t\t\t\tx2: 4.328,\n\t\t\t\ty2: -2.828\n\t\t\t}\n\t\t],\n\t\ttext: {\n\t\t\tx: 5.036,\n\t\t\ty: -1.414\n\t\t}\n\t},\n\t{\n\t\tsets: [\n\t\t\t2\n\t\t],\n\t\tx1: 0,\n\t\ty1: 5.006,\n\t\tarcs: [\n\t\t\t{\n\t\t\t\tref: 2,\n\t\t\t\tmode: \"i\",\n\t\t\t\tx2: -4.328,\n\t\t\t\ty2: -2.828,\n\t\t\t\tsweep: true,\n\t\t\t\tlarge: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tref: 3,\n\t\t\t\tmode: \"o\",\n\t\t\t\tx2: -3.108,\n\t\t\t\ty2: -0.328\n\t\t\t},\n\t\t\t{\n\t\t\t\tref: 0,\n\t\t\t\tmode: \"o\",\n\t\t\t\tx2: -1.328,\n\t\t\t\ty2: 2.828\n\t\t\t},\n\t\t\t{\n\t\t\t\tref: 1,\n\t\t\t\tmode: \"o\",\n\t\t\t\tx2: 0,\n\t\t\t\ty2: 5.006\n\t\t\t}\n\t\t],\n\t\ttext: {\n\t\t\tx: -5.036,\n\t\t\ty: -1.414\n\t\t}\n\t},\n\t{\n\t\tsets: [\n\t\t\t3\n\t\t],\n\t\tx1: -4.328,\n\t\ty1: -2.828,\n\t\tarcs: [\n\t\t\t{\n\t\t\t\tref: 3,\n\t\t\t\tmode: \"i\",\n\t\t\t\tx2: 0,\n\t\t\t\ty2: -3.94,\n\t\t\t\tsweep: true,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tref: 0,\n\t\t\t\tmode: \"o\",\n\t\t\t\tx2: -2.179,\n\t\t\t\ty2: -1.858,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tref: 2,\n\t\t\t\tmode: \"o\",\n\t\t\t\tx2: -4.328,\n\t\t\t\ty2: -2.828,\n\t\t\t\tlarge: false\n\t\t\t}\n\t\t],\n\t\ttext: {\n\t\t\tx: -2.914,\n\t\t\ty: -3.536\n\t\t}\n\t},\n\t{\n\t\tsets: [\n\t\t\t0,\n\t\t\t1\n\t\t],\n\t\tx1: 4.328,\n\t\ty1: -2.828,\n\t\tarcs: [\n\t\t\t{\n\t\t\t\tref: 1,\n\t\t\t\tmode: \"i\",\n\t\t\t\tx2: 3.108,\n\t\t\t\ty2: -0.328,\n\t\t\t\tsweep: true,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tref: 3,\n\t\t\t\tmode: \"o\",\n\t\t\t\tx2: 2.179,\n\t\t\t\ty2: -1.858,\n\t\t\t\tsweep: false,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tref: 0,\n\t\t\t\tmode: \"i\",\n\t\t\t\tx2: 4.328,\n\t\t\t\ty2: -2.828,\n\t\t\t\tsweep: true,\n\t\t\t\tlarge: false\n\t\t\t}\n\t\t],\n\t\ttext: {\n\t\t\tx: 3.205,\n\t\t\ty: -1.672\n\t\t}\n\t},\n\t{\n\t\tsets: [\n\t\t\t0,\n\t\t\t2\n\t\t],\n\t\tx1: -1.328,\n\t\ty1: 2.828,\n\t\tarcs: [\n\t\t\t{\n\t\t\t\tref: 0,\n\t\t\t\tmode: \"i\",\n\t\t\t\tx2: -3.108,\n\t\t\t\ty2: -0.328,\n\t\t\t\tsweep: true,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tref: 3,\n\t\t\t\tmode: \"o\",\n\t\t\t\tx2: -0.969,\n\t\t\t\ty2: 1.755,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tref: 1,\n\t\t\t\tmode: \"o\",\n\t\t\t\tx2: -1.328,\n\t\t\t\ty2: 2.828,\n\t\t\t\tlarge: false\n\t\t\t}\n\t\t],\n\t\ttext: {\n\t\t\tx: -2.212,\n\t\t\ty: 1.591\n\t\t}\n\t},\n\t{\n\t\tsets: [\n\t\t\t0,\n\t\t\t3\n\t\t],\n\t\tx1: 0,\n\t\ty1: -3.94,\n\t\tarcs: [\n\t\t\t{\n\t\t\t\tref: 3,\n\t\t\t\tmode: \"i\",\n\t\t\t\tx2: 2.179,\n\t\t\t\ty2: -1.858,\n\t\t\t\tsweep: true,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tref: 1,\n\t\t\t\tmode: \"o\",\n\t\t\t\tx2: 0,\n\t\t\t\ty2: 0.188,\n\t\t\t\tsweep: false,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tref: 2,\n\t\t\t\tmode: \"o\",\n\t\t\t\tx2: -2.179,\n\t\t\t\ty2: -1.858,\n\t\t\t\tsweep: false,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tref: 0,\n\t\t\t\tmode: \"i\",\n\t\t\t\tx2: 0,\n\t\t\t\ty2: -3.94,\n\t\t\t\tsweep: true\n\t\t\t}\n\t\t],\n\t\ttext: {\n\t\t\tx: 0,\n\t\t\ty: -1.87\n\t\t}\n\t},\n\t{\n\t\tsets: [\n\t\t\t1,\n\t\t\t2\n\t\t],\n\t\tx1: 1.328,\n\t\ty1: 2.828,\n\t\tarcs: [\n\t\t\t{\n\t\t\t\tref: 2,\n\t\t\t\tmode: \"i\",\n\t\t\t\tx2: 0,\n\t\t\t\ty2: 5.006,\n\t\t\t\tsweep: true,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tref: 1,\n\t\t\t\tmode: \"i\",\n\t\t\t\tx2: -1.328,\n\t\t\t\ty2: 2.828,\n\t\t\t\tsweep: true,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tref: 0,\n\t\t\t\tmode: \"o\",\n\t\t\t\tx2: 0,\n\t\t\t\ty2: 2.346,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tref: 3,\n\t\t\t\tmode: \"o\",\n\t\t\t\tx2: 1.328,\n\t\t\t\ty2: 2.828\n\t\t\t}\n\t\t],\n\t\ttext: {\n\t\t\tx: 0,\n\t\t\ty: 3.393\n\t\t}\n\t},\n\t{\n\t\tsets: [\n\t\t\t1,\n\t\t\t3\n\t\t],\n\t\tx1: 3.108,\n\t\ty1: -0.328,\n\t\tarcs: [\n\t\t\t{\n\t\t\t\tref: 3,\n\t\t\t\tmode: \"i\",\n\t\t\t\tx2: 1.328,\n\t\t\t\ty2: 2.828,\n\t\t\t\tsweep: true,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tref: 2,\n\t\t\t\tmode: \"o\",\n\t\t\t\tx2: 0.969,\n\t\t\t\ty2: 1.755,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tref: 1,\n\t\t\t\tmode: \"i\",\n\t\t\t\tx2: 3.108,\n\t\t\t\ty2: -0.328,\n\t\t\t\tlarge: false\n\t\t\t}\n\t\t],\n\t\ttext: {\n\t\t\tx: 2.212,\n\t\t\ty: 1.591\n\t\t}\n\t},\n\t{\n\t\tsets: [\n\t\t\t2,\n\t\t\t3\n\t\t],\n\t\tx1: -3.108,\n\t\ty1: -0.328,\n\t\tarcs: [\n\t\t\t{\n\t\t\t\tref: 3,\n\t\t\t\tmode: \"i\",\n\t\t\t\tx2: -4.328,\n\t\t\t\ty2: -2.828,\n\t\t\t\tsweep: true,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tref: 2,\n\t\t\t\tmode: \"i\",\n\t\t\t\tx2: -2.179,\n\t\t\t\ty2: -1.858,\n\t\t\t\tsweep: true,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tref: 0,\n\t\t\t\tmode: \"o\",\n\t\t\t\tx2: -3.108,\n\t\t\t\ty2: -0.328,\n\t\t\t\tlarge: false\n\t\t\t}\n\t\t],\n\t\ttext: {\n\t\t\tx: -3.205,\n\t\t\ty: -1.672\n\t\t}\n\t},\n\t{\n\t\tsets: [\n\t\t\t0,\n\t\t\t1,\n\t\t\t2\n\t\t],\n\t\tx1: 0,\n\t\ty1: 2.346,\n\t\tarcs: [\n\t\t\t{\n\t\t\t\tref: 0,\n\t\t\t\tmode: \"i\",\n\t\t\t\tx2: -1.328,\n\t\t\t\ty2: 2.828,\n\t\t\t\tsweep: true,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tref: 1,\n\t\t\t\tmode: \"i\",\n\t\t\t\tx2: -0.969,\n\t\t\t\ty2: 1.755,\n\t\t\t\tsweep: true,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tref: 3,\n\t\t\t\tmode: \"o\",\n\t\t\t\tx2: 0,\n\t\t\t\ty2: 2.346,\n\t\t\t\tlarge: false\n\t\t\t}\n\t\t],\n\t\ttext: {\n\t\t\tx: -0.766,\n\t\t\ty: 2.31\n\t\t}\n\t},\n\t{\n\t\tsets: [\n\t\t\t0,\n\t\t\t1,\n\t\t\t3\n\t\t],\n\t\tx1: 2.179,\n\t\ty1: -1.858,\n\t\tarcs: [\n\t\t\t{\n\t\t\t\tref: 3,\n\t\t\t\tmode: \"i\",\n\t\t\t\tx2: 3.108,\n\t\t\t\ty2: -0.328,\n\t\t\t\tsweep: true,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tref: 0,\n\t\t\t\tmode: \"i\",\n\t\t\t\tx2: 0.969,\n\t\t\t\ty2: 1.755,\n\t\t\t\tsweep: true,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tref: 2,\n\t\t\t\tmode: \"o\",\n\t\t\t\tx2: 0,\n\t\t\t\ty2: 0.188,\n\t\t\t\tsweep: false,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tref: 1,\n\t\t\t\tmode: \"i\",\n\t\t\t\tx2: 2.179,\n\t\t\t\ty2: -1.858,\n\t\t\t\tsweep: true\n\t\t\t}\n\t\t],\n\t\ttext: {\n\t\t\tx: 1.558,\n\t\t\ty: -0.056\n\t\t}\n\t},\n\t{\n\t\tsets: [\n\t\t\t0,\n\t\t\t2,\n\t\t\t3\n\t\t],\n\t\tx1: -0.969,\n\t\ty1: 1.755,\n\t\tarcs: [\n\t\t\t{\n\t\t\t\tref: 3,\n\t\t\t\tmode: \"i\",\n\t\t\t\tx2: -3.108,\n\t\t\t\ty2: -0.328,\n\t\t\t\tsweep: true,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tref: 0,\n\t\t\t\tmode: \"i\",\n\t\t\t\tx2: -2.179,\n\t\t\t\ty2: -1.858,\n\t\t\t\tsweep: true,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tref: 2,\n\t\t\t\tmode: \"i\",\n\t\t\t\tx2: 0,\n\t\t\t\ty2: 0.188,\n\t\t\t\tsweep: true,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tref: 1,\n\t\t\t\tmode: \"o\",\n\t\t\t\tx2: -0.969,\n\t\t\t\ty2: 1.755\n\t\t\t}\n\t\t],\n\t\ttext: {\n\t\t\tx: -1.558,\n\t\t\ty: -0.056\n\t\t}\n\t},\n\t{\n\t\tsets: [\n\t\t\t1,\n\t\t\t2,\n\t\t\t3\n\t\t],\n\t\tx1: 1.328,\n\t\ty1: 2.828,\n\t\tarcs: [\n\t\t\t{\n\t\t\t\tref: 3,\n\t\t\t\tmode: \"i\",\n\t\t\t\tx2: 0,\n\t\t\t\ty2: 2.346,\n\t\t\t\tsweep: true,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tref: 0,\n\t\t\t\tmode: \"o\",\n\t\t\t\tx2: 0.969,\n\t\t\t\ty2: 1.755,\n\t\t\t\tsweep: false,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tref: 2,\n\t\t\t\tmode: \"i\",\n\t\t\t\tx2: 1.328,\n\t\t\t\ty2: 2.828,\n\t\t\t\tsweep: true,\n\t\t\t\tlarge: false\n\t\t\t}\n\t\t],\n\t\ttext: {\n\t\t\tx: 0.766,\n\t\t\ty: 2.31\n\t\t}\n\t},\n\t{\n\t\tsets: [\n\t\t\t0,\n\t\t\t1,\n\t\t\t2,\n\t\t\t3\n\t\t],\n\t\tx1: 0,\n\t\ty1: 0.188,\n\t\tarcs: [\n\t\t\t{\n\t\t\t\tref: 2,\n\t\t\t\tmode: \"i\",\n\t\t\t\tx2: 0.969,\n\t\t\t\ty2: 1.755,\n\t\t\t\tsweep: true,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tref: 0,\n\t\t\t\tmode: \"i\",\n\t\t\t\tx2: 0,\n\t\t\t\ty2: 2.346,\n\t\t\t\tsweep: true,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tref: 3,\n\t\t\t\tmode: \"i\",\n\t\t\t\tx2: -0.969,\n\t\t\t\ty2: 1.755,\n\t\t\t\tsweep: true,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tref: 1,\n\t\t\t\tmode: \"i\",\n\t\t\t\tx2: 0,\n\t\t\t\ty2: 0.188,\n\t\t\t\tsweep: true\n\t\t\t}\n\t\t],\n\t\ttext: {\n\t\t\tx: 0,\n\t\t\ty: 1.43\n\t\t}\n\t}\n];\nvar bb$1 = {\n\tx: -6.5,\n\ty: -5,\n\twidth: 13,\n\theight: 10\n};\nvar venn4 = {\n\tsets: sets$2,\n\tintersections: intersections$1,\n\tbb: bb$1\n};\n\nvar sets$1 = [\n\t{\n\t\tcx: 0.5,\n\t\tcy: -1,\n\t\trx: 2.5,\n\t\try: 5,\n\t\trotation: 0,\n\t\ttext: {\n\t\t\tx: 2.25,\n\t\t\ty: -5\n\t\t},\n\t\talign: \"start\",\n\t\tverticalAlign: \"bottom\"\n\t},\n\t{\n\t\tcx: 1.106,\n\t\tcy: 0.167,\n\t\trx: 2.5,\n\t\try: 5,\n\t\trotation: 72,\n\t\ttext: {\n\t\t\tx: 4.5,\n\t\t\ty: 1.5\n\t\t},\n\t\talign: \"start\",\n\t\tverticalAlign: \"top\"\n\t},\n\t{\n\t\tcx: 0.183,\n\t\tcy: 1.103,\n\t\trx: 2.5,\n\t\try: 5,\n\t\trotation: 144,\n\t\ttext: {\n\t\t\tx: 4,\n\t\t\ty: 4\n\t\t},\n\t\talign: \"start\",\n\t\tverticalAlign: \"bottom\"\n\t},\n\t{\n\t\tcx: -0.992,\n\t\tcy: 0.515,\n\t\trx: 2.5,\n\t\try: 5,\n\t\trotation: 216,\n\t\ttext: {\n\t\t\tx: -4.7,\n\t\t\ty: 2\n\t\t},\n\t\talign: \"end\",\n\t\tverticalAlign: \"bottom\"\n\t},\n\t{\n\t\tcx: -0.797,\n\t\tcy: -0.785,\n\t\trx: 2.5,\n\t\try: 5,\n\t\trotation: 288,\n\t\ttext: {\n\t\t\tx: -4,\n\t\t\ty: -3.6\n\t\t},\n\t\talign: \"end\",\n\t\tverticalAlign: \"bottom\"\n\t}\n];\nvar intersections = [\n\t{\n\t\tsets: [\n\t\t\t0\n\t\t],\n\t\tx1: -1.653,\n\t\ty1: -3.541,\n\t\tarcs: [\n\t\t\t{\n\t\t\t\tref: 0,\n\t\t\t\tmode: \"i\",\n\t\t\t\tx2: 2.857,\n\t\t\t\ty2: -2.666,\n\t\t\t\tsweep: true,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tref: 1,\n\t\t\t\tmode: \"o\",\n\t\t\t\tx2: 2.5,\n\t\t\t\ty2: -2.648,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tref: 3,\n\t\t\t\tmode: \"o\",\n\t\t\t\tx2: -0.495,\n\t\t\t\ty2: -3.303,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tref: 4,\n\t\t\t\tmode: \"o\",\n\t\t\t\tx2: -1.653,\n\t\t\t\ty2: -3.541\n\t\t\t}\n\t\t],\n\t\ttext: {\n\t\t\tx: 0.5,\n\t\t\ty: -5\n\t\t}\n\t},\n\t{\n\t\tsets: [\n\t\t\t1\n\t\t],\n\t\tx1: 2.857,\n\t\ty1: -2.666,\n\t\tarcs: [\n\t\t\t{\n\t\t\t\tref: 1,\n\t\t\t\tmode: \"i\",\n\t\t\t\tx2: 3.419,\n\t\t\t\ty2: 1.893,\n\t\t\t\tsweep: true,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tref: 2,\n\t\t\t\tmode: \"o\",\n\t\t\t\tx2: 3.291,\n\t\t\t\ty2: 1.559,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tref: 4,\n\t\t\t\tmode: \"o\",\n\t\t\t\tx2: 2.988,\n\t\t\t\ty2: -1.492,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tref: 0,\n\t\t\t\tmode: \"o\",\n\t\t\t\tx2: 2.857,\n\t\t\t\ty2: -2.666\n\t\t\t}\n\t\t],\n\t\ttext: {\n\t\t\tx: 4.91,\n\t\t\ty: -1.07\n\t\t}\n\t},\n\t{\n\t\tsets: [\n\t\t\t2\n\t\t],\n\t\tx1: 3.419,\n\t\ty1: 1.893,\n\t\tarcs: [\n\t\t\t{\n\t\t\t\tref: 2,\n\t\t\t\tmode: \"i\",\n\t\t\t\tx2: -0.744,\n\t\t\t\ty2: 3.837,\n\t\t\t\tsweep: true,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tref: 3,\n\t\t\t\tmode: \"o\",\n\t\t\t\tx2: -0.466,\n\t\t\t\ty2: 3.612,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tref: 0,\n\t\t\t\tmode: \"o\",\n\t\t\t\tx2: 2.342,\n\t\t\t\ty2: 2.381,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tref: 1,\n\t\t\t\tmode: \"o\",\n\t\t\t\tx2: 3.419,\n\t\t\t\ty2: 1.893\n\t\t\t}\n\t\t],\n\t\ttext: {\n\t\t\tx: 2.534,\n\t\t\ty: 4.339\n\t\t}\n\t},\n\t{\n\t\tsets: [\n\t\t\t3\n\t\t],\n\t\tx1: -0.744,\n\t\ty1: 3.837,\n\t\tarcs: [\n\t\t\t{\n\t\t\t\tref: 3,\n\t\t\t\tmode: \"i\",\n\t\t\t\tx2: -3.879,\n\t\t\t\ty2: 0.478,\n\t\t\t\tsweep: true,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tref: 4,\n\t\t\t\tmode: \"o\",\n\t\t\t\tx2: -3.579,\n\t\t\t\ty2: 0.673,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tref: 1,\n\t\t\t\tmode: \"o\",\n\t\t\t\tx2: -1.54,\n\t\t\t\ty2: 2.963,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tref: 2,\n\t\t\t\tmode: \"o\",\n\t\t\t\tx2: -0.744,\n\t\t\t\ty2: 3.837\n\t\t\t}\n\t\t],\n\t\ttext: {\n\t\t\tx: -3.343,\n\t\t\ty: 3.751\n\t\t}\n\t},\n\t{\n\t\tsets: [\n\t\t\t4\n\t\t],\n\t\tx1: -3.879,\n\t\ty1: 0.478,\n\t\tarcs: [\n\t\t\t{\n\t\t\t\tref: 4,\n\t\t\t\tmode: \"i\",\n\t\t\t\tx2: -1.653,\n\t\t\t\ty2: -3.541,\n\t\t\t\tsweep: true,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tref: 0,\n\t\t\t\tmode: \"o\",\n\t\t\t\tx2: -1.746,\n\t\t\t\ty2: -3.196,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tref: 2,\n\t\t\t\tmode: \"o\",\n\t\t\t\tx2: -3.294,\n\t\t\t\ty2: -0.549,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tref: 3,\n\t\t\t\tmode: \"o\",\n\t\t\t\tx2: -3.879,\n\t\t\t\ty2: 0.478\n\t\t\t}\n\t\t],\n\t\ttext: {\n\t\t\tx: -4.601,\n\t\t\ty: -2.021\n\t\t}\n\t},\n\t{\n\t\tsets: [\n\t\t\t0,\n\t\t\t1\n\t\t],\n\t\tx1: 2.5,\n\t\ty1: -2.648,\n\t\tarcs: [\n\t\t\t{\n\t\t\t\tref: 1,\n\t\t\t\tmode: \"i\",\n\t\t\t\tx2: 2.857,\n\t\t\t\ty2: -2.666,\n\t\t\t\tsweep: true,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tref: 0,\n\t\t\t\tmode: \"i\",\n\t\t\t\tx2: 2.988,\n\t\t\t\ty2: -1.492,\n\t\t\t\tsweep: true,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tref: 4,\n\t\t\t\tmode: \"o\",\n\t\t\t\tx2: 2.572,\n\t\t\t\ty2: -1.839,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tref: 3,\n\t\t\t\tmode: \"o\",\n\t\t\t\tx2: 2.5,\n\t\t\t\ty2: -2.648\n\t\t\t}\n\t\t],\n\t\ttext: {\n\t\t\tx: 2.741,\n\t\t\ty: -2.152\n\t\t}\n\t},\n\t{\n\t\tsets: [\n\t\t\t0,\n\t\t\t2\n\t\t],\n\t\tx1: 2.342,\n\t\ty1: 2.381,\n\t\tarcs: [\n\t\t\t{\n\t\t\t\tref: 0,\n\t\t\t\tmode: \"i\",\n\t\t\t\tx2: -0.466,\n\t\t\t\ty2: 3.612,\n\t\t\t\tsweep: true,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tref: 3,\n\t\t\t\tmode: \"o\",\n\t\t\t\tx2: 0.257,\n\t\t\t\ty2: 2.922,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tref: 1,\n\t\t\t\tmode: \"o\",\n\t\t\t\tx2: 2.342,\n\t\t\t\ty2: 2.381,\n\t\t\t\tlarge: false\n\t\t\t}\n\t\t],\n\t\ttext: {\n\t\t\tx: 0.5,\n\t\t\ty: 3.5\n\t\t}\n\t},\n\t{\n\t\tsets: [\n\t\t\t0,\n\t\t\t3\n\t\t],\n\t\tx1: -0.495,\n\t\ty1: -3.303,\n\t\tarcs: [\n\t\t\t{\n\t\t\t\tref: 3,\n\t\t\t\tmode: \"i\",\n\t\t\t\tx2: 2.5,\n\t\t\t\ty2: -2.648,\n\t\t\t\tsweep: true,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tref: 1,\n\t\t\t\tmode: \"o\",\n\t\t\t\tx2: 1.51,\n\t\t\t\ty2: -2.515,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tref: 4,\n\t\t\t\tmode: \"o\",\n\t\t\t\tx2: -0.495,\n\t\t\t\ty2: -3.303,\n\t\t\t\tlarge: false\n\t\t\t}\n\t\t],\n\t\ttext: {\n\t\t\tx: 1.653,\n\t\t\ty: -3.125\n\t\t}\n\t},\n\t{\n\t\tsets: [\n\t\t\t0,\n\t\t\t4\n\t\t],\n\t\tx1: -1.653,\n\t\ty1: -3.541,\n\t\tarcs: [\n\t\t\t{\n\t\t\t\tref: 4,\n\t\t\t\tmode: \"i\",\n\t\t\t\tx2: -0.495,\n\t\t\t\ty2: -3.303,\n\t\t\t\tsweep: true,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tref: 3,\n\t\t\t\tmode: \"o\",\n\t\t\t\tx2: -0.954,\n\t\t\t\ty2: -3.015,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tref: 2,\n\t\t\t\tmode: \"o\",\n\t\t\t\tx2: -1.746,\n\t\t\t\ty2: -3.196,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tref: 0,\n\t\t\t\tmode: \"i\",\n\t\t\t\tx2: -1.653,\n\t\t\t\ty2: -3.541\n\t\t\t}\n\t\t],\n\t\ttext: {\n\t\t\tx: -1.199,\n\t\t\ty: -3.272\n\t\t}\n\t},\n\t{\n\t\tsets: [\n\t\t\t1,\n\t\t\t2\n\t\t],\n\t\tx1: 3.291,\n\t\ty1: 1.559,\n\t\tarcs: [\n\t\t\t{\n\t\t\t\tref: 2,\n\t\t\t\tmode: \"i\",\n\t\t\t\tx2: 3.419,\n\t\t\t\ty2: 1.893,\n\t\t\t\tsweep: true,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tref: 1,\n\t\t\t\tmode: \"i\",\n\t\t\t\tx2: 2.342,\n\t\t\t\ty2: 2.381,\n\t\t\t\tsweep: true,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tref: 0,\n\t\t\t\tmode: \"o\",\n\t\t\t\tx2: 2.544,\n\t\t\t\ty2: 1.878,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tref: 4,\n\t\t\t\tmode: \"o\",\n\t\t\t\tx2: 3.291,\n\t\t\t\ty2: 1.559\n\t\t\t}\n\t\t],\n\t\ttext: {\n\t\t\tx: 2.894,\n\t\t\ty: 1.942\n\t\t}\n\t},\n\t{\n\t\tsets: [\n\t\t\t1,\n\t\t\t3\n\t\t],\n\t\tx1: -1.54,\n\t\ty1: 2.963,\n\t\tarcs: [\n\t\t\t{\n\t\t\t\tref: 1,\n\t\t\t\tmode: \"i\",\n\t\t\t\tx2: -3.579,\n\t\t\t\ty2: 0.673,\n\t\t\t\tsweep: true,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tref: 4,\n\t\t\t\tmode: \"o\",\n\t\t\t\tx2: -2.7,\n\t\t\t\ty2: 1.147,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tref: 2,\n\t\t\t\tmode: \"o\",\n\t\t\t\tx2: -1.54,\n\t\t\t\ty2: 2.963,\n\t\t\t\tlarge: false\n\t\t\t}\n\t\t],\n\t\ttext: {\n\t\t\tx: -3.174,\n\t\t\ty: 1.557\n\t\t}\n\t},\n\t{\n\t\tsets: [\n\t\t\t1,\n\t\t\t4\n\t\t],\n\t\tx1: 2.988,\n\t\ty1: -1.492,\n\t\tarcs: [\n\t\t\t{\n\t\t\t\tref: 4,\n\t\t\t\tmode: \"i\",\n\t\t\t\tx2: 3.291,\n\t\t\t\ty2: 1.559,\n\t\t\t\tsweep: true,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tref: 2,\n\t\t\t\tmode: \"o\",\n\t\t\t\tx2: 2.858,\n\t\t\t\ty2: 0.659,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tref: 0,\n\t\t\t\tmode: \"o\",\n\t\t\t\tx2: 2.988,\n\t\t\t\ty2: -1.492,\n\t\t\t\tlarge: false\n\t\t\t}\n\t\t],\n\t\ttext: {\n\t\t\tx: 3.483,\n\t\t\ty: 0.606\n\t\t}\n\t},\n\t{\n\t\tsets: [\n\t\t\t2,\n\t\t\t3\n\t\t],\n\t\tx1: -0.466,\n\t\ty1: 3.612,\n\t\tarcs: [\n\t\t\t{\n\t\t\t\tref: 3,\n\t\t\t\tmode: \"i\",\n\t\t\t\tx2: -0.744,\n\t\t\t\ty2: 3.837,\n\t\t\t\tsweep: true,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tref: 2,\n\t\t\t\tmode: \"i\",\n\t\t\t\tx2: -1.54,\n\t\t\t\ty2: 2.963,\n\t\t\t\tsweep: true,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tref: 1,\n\t\t\t\tmode: \"o\",\n\t\t\t\tx2: -1,\n\t\t\t\ty2: 3,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tref: 0,\n\t\t\t\tmode: \"o\",\n\t\t\t\tx2: -0.466,\n\t\t\t\ty2: 3.612\n\t\t\t}\n\t\t],\n\t\ttext: {\n\t\t\tx: -0.953,\n\t\t\ty: 3.352\n\t\t}\n\t},\n\t{\n\t\tsets: [\n\t\t\t2,\n\t\t\t4\n\t\t],\n\t\tx1: -3.294,\n\t\ty1: -0.549,\n\t\tarcs: [\n\t\t\t{\n\t\t\t\tref: 2,\n\t\t\t\tmode: \"i\",\n\t\t\t\tx2: -1.746,\n\t\t\t\ty2: -3.196,\n\t\t\t\tsweep: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tref: 0,\n\t\t\t\tmode: \"o\",\n\t\t\t\tx2: -1.925,\n\t\t\t\ty2: -2.213\n\t\t\t},\n\t\t\t{\n\t\t\t\tref: 3,\n\t\t\t\tmode: \"o\",\n\t\t\t\tx2: -3.294,\n\t\t\t\ty2: -0.549\n\t\t\t}\n\t\t],\n\t\ttext: {\n\t\t\tx: -2.462,\n\t\t\ty: -2.538\n\t\t}\n\t},\n\t{\n\t\tsets: [\n\t\t\t3,\n\t\t\t4\n\t\t],\n\t\tx1: -3.579,\n\t\ty1: 0.673,\n\t\tarcs: [\n\t\t\t{\n\t\t\t\tref: 4,\n\t\t\t\tmode: \"i\",\n\t\t\t\tx2: -3.879,\n\t\t\t\ty2: 0.478,\n\t\t\t\tsweep: true,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tref: 3,\n\t\t\t\tmode: \"i\",\n\t\t\t\tx2: -3.294,\n\t\t\t\ty2: -0.549,\n\t\t\t\tsweep: true,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tref: 2,\n\t\t\t\tmode: \"o\",\n\t\t\t\tx2: -3.162,\n\t\t\t\ty2: -0.024,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tref: 1,\n\t\t\t\tmode: \"o\",\n\t\t\t\tx2: -3.579,\n\t\t\t\ty2: 0.673\n\t\t\t}\n\t\t],\n\t\ttext: {\n\t\t\tx: -3.483,\n\t\t\ty: 0.13\n\t\t}\n\t},\n\t{\n\t\tsets: [\n\t\t\t0,\n\t\t\t1,\n\t\t\t2\n\t\t],\n\t\tx1: 2.544,\n\t\ty1: 1.878,\n\t\tarcs: [\n\t\t\t{\n\t\t\t\tref: 0,\n\t\t\t\tmode: \"i\",\n\t\t\t\tx2: 2.342,\n\t\t\t\ty2: 2.381,\n\t\t\t\tsweep: true,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tref: 1,\n\t\t\t\tmode: \"i\",\n\t\t\t\tx2: 0.257,\n\t\t\t\ty2: 2.922,\n\t\t\t\tsweep: true,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tref: 3,\n\t\t\t\tmode: \"o\",\n\t\t\t\tx2: 0.983,\n\t\t\t\ty2: 2.049,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tref: 4,\n\t\t\t\tmode: \"o\",\n\t\t\t\tx2: 2.544,\n\t\t\t\ty2: 1.878\n\t\t\t}\n\t\t],\n\t\ttext: {\n\t\t\tx: 1.457,\n\t\t\ty: 2.331\n\t\t}\n\t},\n\t{\n\t\tsets: [\n\t\t\t0,\n\t\t\t1,\n\t\t\t3\n\t\t],\n\t\tx1: 1.51,\n\t\ty1: -2.515,\n\t\tarcs: [\n\t\t\t{\n\t\t\t\tref: 1,\n\t\t\t\tmode: \"i\",\n\t\t\t\tx2: 2.5,\n\t\t\t\ty2: -2.648,\n\t\t\t\tsweep: true,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tref: 3,\n\t\t\t\tmode: \"i\",\n\t\t\t\tx2: 2.572,\n\t\t\t\ty2: -1.839,\n\t\t\t\tsweep: true,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tref: 4,\n\t\t\t\tmode: \"o\",\n\t\t\t\tx2: 1.51,\n\t\t\t\ty2: -2.515,\n\t\t\t\tlarge: false\n\t\t\t}\n\t\t],\n\t\ttext: {\n\t\t\tx: 2.194,\n\t\t\ty: -2.334\n\t\t}\n\t},\n\t{\n\t\tsets: [\n\t\t\t0,\n\t\t\t1,\n\t\t\t4\n\t\t],\n\t\tx1: 2.572,\n\t\ty1: -1.839,\n\t\tarcs: [\n\t\t\t{\n\t\t\t\tref: 4,\n\t\t\t\tmode: \"i\",\n\t\t\t\tx2: 2.988,\n\t\t\t\ty2: -1.492,\n\t\t\t\tsweep: true,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tref: 0,\n\t\t\t\tmode: \"i\",\n\t\t\t\tx2: 2.858,\n\t\t\t\ty2: 0.659,\n\t\t\t\tsweep: true,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tref: 2,\n\t\t\t\tmode: \"o\",\n\t\t\t\tx2: 2.253,\n\t\t\t\ty2: -0.302,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tref: 3,\n\t\t\t\tmode: \"o\",\n\t\t\t\tx2: 2.572,\n\t\t\t\ty2: -1.839\n\t\t\t}\n\t\t],\n\t\ttext: {\n\t\t\tx: 2.667,\n\t\t\ty: -0.665\n\t\t}\n\t},\n\t{\n\t\tsets: [\n\t\t\t0,\n\t\t\t2,\n\t\t\t3\n\t\t],\n\t\tx1: 0.257,\n\t\ty1: 2.922,\n\t\tarcs: [\n\t\t\t{\n\t\t\t\tref: 3,\n\t\t\t\tmode: \"i\",\n\t\t\t\tx2: -0.466,\n\t\t\t\ty2: 3.612,\n\t\t\t\tsweep: true,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tref: 0,\n\t\t\t\tmode: \"i\",\n\t\t\t\tx2: -1,\n\t\t\t\ty2: 3,\n\t\t\t\tsweep: true,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tref: 1,\n\t\t\t\tmode: \"o\",\n\t\t\t\tx2: 0.257,\n\t\t\t\ty2: 2.922,\n\t\t\t\tlarge: false\n\t\t\t}\n\t\t],\n\t\ttext: {\n\t\t\tx: -0.403,\n\t\t\ty: 3.178\n\t\t}\n\t},\n\t{\n\t\tsets: [\n\t\t\t0,\n\t\t\t2,\n\t\t\t4\n\t\t],\n\t\tx1: -1.746,\n\t\ty1: -3.196,\n\t\tarcs: [\n\t\t\t{\n\t\t\t\tref: 2,\n\t\t\t\tmode: \"i\",\n\t\t\t\tx2: -0.954,\n\t\t\t\ty2: -3.015,\n\t\t\t\tsweep: true,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tref: 3,\n\t\t\t\tmode: \"o\",\n\t\t\t\tx2: -1.925,\n\t\t\t\ty2: -2.213,\n\t\t\t\tsweep: false,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tref: 0,\n\t\t\t\tmode: \"i\",\n\t\t\t\tx2: -1.746,\n\t\t\t\ty2: -3.196,\n\t\t\t\tsweep: true,\n\t\t\t\tlarge: false\n\t\t\t}\n\t\t],\n\t\ttext: {\n\t\t\tx: -1.542,\n\t\t\ty: -2.808\n\t\t}\n\t},\n\t{\n\t\tsets: [\n\t\t\t0,\n\t\t\t3,\n\t\t\t4\n\t\t],\n\t\tx1: -0.495,\n\t\ty1: -3.303,\n\t\tarcs: [\n\t\t\t{\n\t\t\t\tref: 4,\n\t\t\t\tmode: \"i\",\n\t\t\t\tx2: 1.51,\n\t\t\t\ty2: -2.515,\n\t\t\t\tsweep: true,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tref: 1,\n\t\t\t\tmode: \"o\",\n\t\t\t\tx2: 0.409,\n\t\t\t\ty2: -2.236,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tref: 2,\n\t\t\t\tmode: \"o\",\n\t\t\t\tx2: -0.954,\n\t\t\t\ty2: -3.015,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tref: 3,\n\t\t\t\tmode: \"i\",\n\t\t\t\tx2: -0.495,\n\t\t\t\ty2: -3.303\n\t\t\t}\n\t\t],\n\t\ttext: {\n\t\t\tx: 0.192,\n\t\t\ty: -2.742\n\t\t}\n\t},\n\t{\n\t\tsets: [\n\t\t\t1,\n\t\t\t2,\n\t\t\t3\n\t\t],\n\t\tx1: -1.54,\n\t\ty1: 2.963,\n\t\tarcs: [\n\t\t\t{\n\t\t\t\tref: 2,\n\t\t\t\tmode: \"i\",\n\t\t\t\tx2: -2.7,\n\t\t\t\ty2: 1.147,\n\t\t\t\tsweep: true,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tref: 4,\n\t\t\t\tmode: \"o\",\n\t\t\t\tx2: -1.645,\n\t\t\t\ty2: 1.568,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tref: 0,\n\t\t\t\tmode: \"o\",\n\t\t\t\tx2: -1,\n\t\t\t\ty2: 3,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tref: 1,\n\t\t\t\tmode: \"i\",\n\t\t\t\tx2: -1.54,\n\t\t\t\ty2: 2.963\n\t\t\t}\n\t\t],\n\t\ttext: {\n\t\t\tx: -1.767,\n\t\t\ty: 2.106\n\t\t}\n\t},\n\t{\n\t\tsets: [\n\t\t\t1,\n\t\t\t2,\n\t\t\t4\n\t\t],\n\t\tx1: 2.858,\n\t\ty1: 0.659,\n\t\tarcs: [\n\t\t\t{\n\t\t\t\tref: 2,\n\t\t\t\tmode: \"i\",\n\t\t\t\tx2: 3.291,\n\t\t\t\ty2: 1.559,\n\t\t\t\tsweep: true,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tref: 4,\n\t\t\t\tmode: \"i\",\n\t\t\t\tx2: 2.544,\n\t\t\t\ty2: 1.878,\n\t\t\t\tsweep: true,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tref: 0,\n\t\t\t\tmode: \"o\",\n\t\t\t\tx2: 2.858,\n\t\t\t\ty2: 0.659,\n\t\t\t\tlarge: false\n\t\t\t}\n\t\t],\n\t\ttext: {\n\t\t\tx: 2.898,\n\t\t\ty: 1.365\n\t\t}\n\t},\n\t{\n\t\tsets: [\n\t\t\t1,\n\t\t\t3,\n\t\t\t4\n\t\t],\n\t\tx1: -2.7,\n\t\ty1: 1.147,\n\t\tarcs: [\n\t\t\t{\n\t\t\t\tref: 4,\n\t\t\t\tmode: \"i\",\n\t\t\t\tx2: -3.579,\n\t\t\t\ty2: 0.673,\n\t\t\t\tsweep: true,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tref: 1,\n\t\t\t\tmode: \"i\",\n\t\t\t\tx2: -3.162,\n\t\t\t\ty2: -0.024,\n\t\t\t\tsweep: true,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tref: 2,\n\t\t\t\tmode: \"o\",\n\t\t\t\tx2: -2.7,\n\t\t\t\ty2: 1.147,\n\t\t\t\tlarge: false\n\t\t\t}\n\t\t],\n\t\ttext: {\n\t\t\tx: -3.147,\n\t\t\ty: 0.599\n\t\t}\n\t},\n\t{\n\t\tsets: [\n\t\t\t2,\n\t\t\t3,\n\t\t\t4\n\t\t],\n\t\tx1: -3.294,\n\t\ty1: -0.549,\n\t\tarcs: [\n\t\t\t{\n\t\t\t\tref: 3,\n\t\t\t\tmode: \"i\",\n\t\t\t\tx2: -1.925,\n\t\t\t\ty2: -2.213,\n\t\t\t\tsweep: true,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tref: 0,\n\t\t\t\tmode: \"o\",\n\t\t\t\tx2: -2,\n\t\t\t\ty2: -1.08,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tref: 1,\n\t\t\t\tmode: \"o\",\n\t\t\t\tx2: -3.162,\n\t\t\t\ty2: -0.024,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tref: 2,\n\t\t\t\tmode: \"i\",\n\t\t\t\tx2: -3.294,\n\t\t\t\ty2: -0.549\n\t\t\t}\n\t\t],\n\t\ttext: {\n\t\t\tx: -2.548,\n\t\t\ty: -1.029\n\t\t}\n\t},\n\t{\n\t\tsets: [\n\t\t\t0,\n\t\t\t1,\n\t\t\t2,\n\t\t\t3\n\t\t],\n\t\tx1: 0.983,\n\t\ty1: 2.049,\n\t\tarcs: [\n\t\t\t{\n\t\t\t\tref: 3,\n\t\t\t\tmode: \"i\",\n\t\t\t\tx2: 0.257,\n\t\t\t\ty2: 2.922,\n\t\t\t\tsweep: true,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tref: 1,\n\t\t\t\tmode: \"i\",\n\t\t\t\tx2: -1,\n\t\t\t\ty2: 3,\n\t\t\t\tsweep: true,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tref: 0,\n\t\t\t\tmode: \"i\",\n\t\t\t\tx2: -1.645,\n\t\t\t\ty2: 1.568,\n\t\t\t\tsweep: true,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tref: 4,\n\t\t\t\tmode: \"o\",\n\t\t\t\tx2: 0.983,\n\t\t\t\ty2: 2.049\n\t\t\t}\n\t\t],\n\t\ttext: {\n\t\t\tx: -0.407,\n\t\t\ty: 2.31\n\t\t}\n\t},\n\t{\n\t\tsets: [\n\t\t\t0,\n\t\t\t1,\n\t\t\t2,\n\t\t\t4\n\t\t],\n\t\tx1: 2.253,\n\t\ty1: -0.302,\n\t\tarcs: [\n\t\t\t{\n\t\t\t\tref: 2,\n\t\t\t\tmode: \"i\",\n\t\t\t\tx2: 2.858,\n\t\t\t\ty2: 0.659,\n\t\t\t\tsweep: true,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tref: 0,\n\t\t\t\tmode: \"i\",\n\t\t\t\tx2: 2.544,\n\t\t\t\ty2: 1.878,\n\t\t\t\tsweep: true,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tref: 4,\n\t\t\t\tmode: \"i\",\n\t\t\t\tx2: 0.983,\n\t\t\t\ty2: 2.049,\n\t\t\t\tsweep: true,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tref: 3,\n\t\t\t\tmode: \"o\",\n\t\t\t\tx2: 2.253,\n\t\t\t\ty2: -0.302\n\t\t\t}\n\t\t],\n\t\ttext: {\n\t\t\tx: 2.071,\n\t\t\ty: 1.101\n\t\t}\n\t},\n\t{\n\t\tsets: [\n\t\t\t0,\n\t\t\t1,\n\t\t\t3,\n\t\t\t4\n\t\t],\n\t\tx1: 1.51,\n\t\ty1: -2.515,\n\t\tarcs: [\n\t\t\t{\n\t\t\t\tref: 4,\n\t\t\t\tmode: \"i\",\n\t\t\t\tx2: 2.572,\n\t\t\t\ty2: -1.839,\n\t\t\t\tsweep: true,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tref: 3,\n\t\t\t\tmode: \"i\",\n\t\t\t\tx2: 2.253,\n\t\t\t\ty2: -0.302,\n\t\t\t\tsweep: true,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tref: 2,\n\t\t\t\tmode: \"o\",\n\t\t\t\tx2: 0.409,\n\t\t\t\ty2: -2.236,\n\t\t\t\tsweep: false,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tref: 1,\n\t\t\t\tmode: \"i\",\n\t\t\t\tx2: 1.51,\n\t\t\t\ty2: -2.515,\n\t\t\t\tsweep: true\n\t\t\t}\n\t\t],\n\t\ttext: {\n\t\t\tx: 1.687,\n\t\t\ty: -1.63\n\t\t}\n\t},\n\t{\n\t\tsets: [\n\t\t\t0,\n\t\t\t2,\n\t\t\t3,\n\t\t\t4\n\t\t],\n\t\tx1: -2,\n\t\ty1: -1.08,\n\t\tarcs: [\n\t\t\t{\n\t\t\t\tref: 0,\n\t\t\t\tmode: \"i\",\n\t\t\t\tx2: -1.925,\n\t\t\t\ty2: -2.213,\n\t\t\t\tsweep: true,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tref: 3,\n\t\t\t\tmode: \"i\",\n\t\t\t\tx2: -0.954,\n\t\t\t\ty2: -3.015,\n\t\t\t\tsweep: true,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tref: 2,\n\t\t\t\tmode: \"i\",\n\t\t\t\tx2: 0.409,\n\t\t\t\ty2: -2.236,\n\t\t\t\tsweep: true,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tref: 1,\n\t\t\t\tmode: \"o\",\n\t\t\t\tx2: -2,\n\t\t\t\ty2: -1.08\n\t\t\t}\n\t\t],\n\t\ttext: {\n\t\t\tx: -1.028,\n\t\t\ty: -2.108\n\t\t}\n\t},\n\t{\n\t\tsets: [\n\t\t\t1,\n\t\t\t2,\n\t\t\t3,\n\t\t\t4\n\t\t],\n\t\tx1: -1.645,\n\t\ty1: 1.568,\n\t\tarcs: [\n\t\t\t{\n\t\t\t\tref: 4,\n\t\t\t\tmode: \"i\",\n\t\t\t\tx2: -2.7,\n\t\t\t\ty2: 1.147,\n\t\t\t\tsweep: true,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tref: 2,\n\t\t\t\tmode: \"i\",\n\t\t\t\tx2: -3.162,\n\t\t\t\ty2: -0.024,\n\t\t\t\tsweep: true,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tref: 1,\n\t\t\t\tmode: \"i\",\n\t\t\t\tx2: -2,\n\t\t\t\ty2: -1.08,\n\t\t\t\tsweep: true,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tref: 0,\n\t\t\t\tmode: \"o\",\n\t\t\t\tx2: -1.645,\n\t\t\t\ty2: 1.568\n\t\t\t}\n\t\t],\n\t\ttext: {\n\t\t\tx: -2.323,\n\t\t\ty: 0.327\n\t\t}\n\t},\n\t{\n\t\tsets: [\n\t\t\t0,\n\t\t\t1,\n\t\t\t2,\n\t\t\t3,\n\t\t\t4\n\t\t],\n\t\tx1: 0.409,\n\t\ty1: -2.236,\n\t\tarcs: [\n\t\t\t{\n\t\t\t\tref: 2,\n\t\t\t\tmode: \"i\",\n\t\t\t\tx2: 2.253,\n\t\t\t\ty2: -0.302,\n\t\t\t\tsweep: true,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tref: 3,\n\t\t\t\tmode: \"i\",\n\t\t\t\tx2: 0.983,\n\t\t\t\ty2: 2.049,\n\t\t\t\tsweep: true,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tref: 4,\n\t\t\t\tmode: \"i\",\n\t\t\t\tx2: -1.645,\n\t\t\t\ty2: 1.568,\n\t\t\t\tsweep: true,\n\t\t\t\tlarge: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tref: 0,\n\t\t\t\tmode: \"i\",\n\t\t\t\tx2: -2,\n\t\t\t\ty2: -1.08,\n\t\t\t\tsweep: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tref: 1,\n\t\t\t\tmode: \"i\",\n\t\t\t\tx2: 0.409,\n\t\t\t\ty2: -2.236,\n\t\t\t\tsweep: true\n\t\t\t}\n\t\t],\n\t\ttext: {\n\t\t\tx: 0,\n\t\t\ty: 0\n\t\t}\n\t}\n];\nvar bb = {\n\tx: -5.5,\n\ty: -6,\n\twidth: 11.6,\n\theight: 11.8\n};\nvar venn5 = {\n\tsets: sets$1,\n\tintersections: intersections,\n\tbb: bb\n};\n\n/**\r\n * @upsetjs/react\r\n * https://github.com/upsetjs/upsetjs\r\n *\r\n * Copyright (c) 2021 Samuel Gratzl <sam@sgratzl.com>\r\n */\r\nfunction isEllipse(d) {\r\n    return typeof d.rx === 'number';\r\n}\n\n/**\r\n * @upsetjs/react\r\n * https://github.com/upsetjs/upsetjs\r\n *\r\n * Copyright (c) 2021 Samuel Gratzl <sam@sgratzl.com>\r\n */\r\nconst vennDiagramLayout = {\r\n    maxSets: 5,\r\n    compute(sets, _combinations, width, height) {\r\n        return layoutImpl(sets.length, width, height);\r\n    },\r\n};\r\nfunction layoutImpl(sets, width, height) {\r\n    const lookup = [venn0, venn1, venn2, venn3, venn4, venn5];\r\n    const r = lookup[Math.min(lookup.length - 1, sets)];\r\n    const f = Math.min(width / r.bb.width, height / r.bb.height);\r\n    const x = f * -r.bb.x + (width - f * r.bb.width) / 2;\r\n    const y = f * -r.bb.y + (height - f * r.bb.height) / 2;\r\n    const mx = (v) => x + f * v;\r\n    const my = (v) => y + f * v;\r\n    return {\r\n        sets: r.sets.map((c) => Object.assign({}, c, {\r\n            cx: mx(c.cx),\r\n            cy: my(c.cy),\r\n            text: {\r\n                x: mx(c.text.x),\r\n                y: my(c.text.y),\r\n            },\r\n        }, isEllipse(c)\r\n            ? {\r\n                rx: c.rx * f,\r\n                ry: c.ry * f,\r\n            }\r\n            : {\r\n                r: c.r * f,\r\n            })),\r\n        intersections: r.intersections.map((c) => ({\r\n            text: {\r\n                x: mx(c.text.x),\r\n                y: my(c.text.y),\r\n            },\r\n            x1: mx(c.x1),\r\n            y1: my(c.y1),\r\n            sets: c.sets,\r\n            arcs: c.arcs.map((a) => Object.assign({}, a, {\r\n                x2: mx(a.x2),\r\n                y2: my(a.y2),\r\n            })),\r\n        })),\r\n    };\r\n}\n\n/**\r\n * @upsetjs/react\r\n * https://github.com/upsetjs/upsetjs\r\n *\r\n * Copyright (c) 2021 Samuel Gratzl <sam@sgratzl.com>\r\n */\r\nconst lightTheme = {\r\n    selectionColor: '#ffa500',\r\n    color: '#000000',\r\n    hasSelectionColor: '',\r\n    opacity: 1,\r\n    hasSelectionOpacity: -1,\r\n    textColor: '#000000',\r\n    hoverHintColor: '#cccccc',\r\n    notMemberColor: '#d3d3d3',\r\n    alternatingBackgroundColor: 'rgba(0,0,0,0.05)',\r\n    valueTextColor: '#000000',\r\n    strokeColor: '#000000',\r\n    backgroundColor: '#ffffff',\r\n    filled: false,\r\n};\r\nconst darkTheme = {\r\n    selectionColor: '#ffa500',\r\n    color: '#cccccc',\r\n    hasSelectionColor: '',\r\n    opacity: 1,\r\n    hasSelectionOpacity: -1,\r\n    textColor: '#ffffff',\r\n    hoverHintColor: '#d9d9d9',\r\n    notMemberColor: '#666666',\r\n    alternatingBackgroundColor: 'rgba(255, 255, 255, 0.2)',\r\n    valueTextColor: '#ffffff',\r\n    strokeColor: '#ffffff',\r\n    backgroundColor: '#303030',\r\n    filled: false,\r\n};\r\nconst vegaTheme = {\r\n    selectionColor: '#4c78a8',\r\n    color: '#4c78a8',\r\n    hasSelectionColor: '#c9d6e5',\r\n    opacity: 1,\r\n    hasSelectionOpacity: -1,\r\n    textColor: '#000000',\r\n    hoverHintColor: '#cccccc',\r\n    notMemberColor: '#d3d3d3',\r\n    alternatingBackgroundColor: 'rgba(0,0,0,0.05)',\r\n    valueTextColor: '#000000',\r\n    strokeColor: '#000000',\r\n    backgroundColor: '#ffffff',\r\n    filled: true,\r\n};\r\nfunction getDefaultTheme(theme) {\r\n    return theme === 'vega' ? vegaTheme : theme === 'dark' ? darkTheme : lightTheme;\r\n}\r\nfunction areCombinations$1(combinations) {\r\n    return Array.isArray(combinations);\r\n}\r\nfunction styleFactory(rules) {\r\n    return React.createElement(\"style\", null, rules);\r\n}\r\n// eslint-disable-next-line @typescript-eslint/ban-types\r\nfunction fillGeneric(base, \r\n// eslint-disable-next-line @typescript-eslint/ban-types\r\nprops, others = {}) {\r\n    const theme = getDefaultTheme(props.theme);\r\n    return Object.assign(base, {\r\n        queryLegend: props.queries != null && props.queries.length > 0,\r\n        theme: 'light',\r\n        padding: 20,\r\n        selection: null,\r\n        title: '',\r\n        description: '',\r\n        fontFamily: 'sans-serif',\r\n        queries: EMPTY_ARRAY$2,\r\n        exportButtons: true,\r\n        className: '',\r\n        fontSizes: DEFAULT_FONT_SIZES,\r\n        classNames: EMPTY_OBJECT,\r\n        style: EMPTY_OBJECT,\r\n        styles: EMPTY_OBJECT,\r\n        toKey,\r\n        tooltips: true,\r\n        styleFactory,\r\n    }, theme, props, others, props.fontSizes\r\n        ? {\r\n            fontSizes: Object.assign({}, DEFAULT_FONT_SIZES, props.fontSizes),\r\n        }\r\n        : EMPTY_OBJECT);\r\n}\r\n/**\r\n * helper methods to fill up partial UpSet.js properties with their default values\r\n */\r\nfunction fillDefaultsG(props) {\r\n    return fillGeneric({\r\n        barPadding: 0.3,\r\n        dotPadding: 0.7,\r\n        combinations: DEFAULT_COMBINATIONS,\r\n        combinationName: props.combinations != null && !areCombinations$1(props.combinations) && props.combinations.type === 'union'\r\n            ? 'Union Size'\r\n            : 'Intersection Size',\r\n        barLabelOffset: 2,\r\n        setNameAxisOffset: 'auto',\r\n        combinationNameAxisOffset: 'auto',\r\n        setName: 'Set Size',\r\n        widthRatios: DEFAULT_WIDTH_RATIO,\r\n        heightRatios: DEFAULT_HEIGHT_RATIO,\r\n        setLabelAlignment: 'center',\r\n        numericScale: 'linear',\r\n        bandScale: 'band',\r\n        childrenFactories: EMPTY_OBJECT,\r\n        setAddons: EMPTY_ARRAY$2,\r\n        combinationAddons: EMPTY_ARRAY$2,\r\n        setAddonPadding: 1,\r\n        combinationAddonPadding: 1,\r\n        emptySelection: true,\r\n    }, props);\r\n}\r\nfunction valueFormat(v) {\r\n    return v.toLocaleString();\r\n}\r\nfunction fillDefaults(props) {\r\n    return fillDefaultsG(props);\r\n}\r\n/**\r\n * helper methods to fill up partial UpSet.js properties with their default values\r\n */\r\nfunction fillVennDiagramDefaultsG(props) {\r\n    return fillGeneric({\r\n        valueFormat,\r\n        layout: vennDiagramLayout,\r\n        setLabelOffsets: EMPTY_ARRAY$2,\r\n    }, props, {\r\n        exportButtons: props.exportButtons === false\r\n            ? false\r\n            : Object.assign({}, props.exportButtons === true ? {} : props.exportButtons, { vega: false }),\r\n    });\r\n}\r\nfunction fillVennDiagramDefaults(props) {\r\n    return fillVennDiagramDefaultsG(props);\r\n}\r\n/**\r\n * helper methods to fill up partial UpSet.js properties with their default values\r\n */\r\nfunction fillKarnaughMapDefaultsG(props) {\r\n    return fillGeneric({\r\n        numericScale: 'linear',\r\n        barPadding: 0.3,\r\n        barLabelOffset: 2,\r\n        combinationName: 'Intersection Size',\r\n        combinationNameAxisOffset: 'auto',\r\n    }, props, {\r\n        exportButtons: props.exportButtons === false\r\n            ? false\r\n            : Object.assign({}, props.exportButtons === true ? {} : props.exportButtons, { vega: false }),\r\n    });\r\n}\r\nfunction fillKarnaughMapDefaults(props) {\r\n    return fillKarnaughMapDefaultsG(props);\r\n}\n\n/**\r\n * @upsetjs/react\r\n * https://github.com/upsetjs/upsetjs\r\n *\r\n * Copyright (c) 2021 Samuel Gratzl <sam@sgratzl.com>\r\n */\r\nfunction createSVG(node, toRemove) {\r\n    const clone = node.cloneNode(true);\r\n    clone.style.backgroundColor = getDefaultTheme(node.dataset.theme).backgroundColor;\r\n    if (toRemove) {\r\n        Array.from(clone.querySelectorAll(toRemove)).forEach((d) => d.remove());\r\n    }\r\n    return new XMLSerializer().serializeToString(clone);\r\n}\r\n/**\r\n * helper method to export an download an SVG image\r\n * @param node the SVG element to download\r\n * @param options additional options\r\n */\r\nfunction exportSVG(node, { type = 'png', title, toRemove }) {\r\n    const b = new Blob([createSVG(node, toRemove)], {\r\n        type: 'image/svg+xml;charset=utf-8',\r\n    });\r\n    const styleId = extractStyleId(node);\r\n    const chartTitle = title !== null && title !== void 0 ? title : extractTitle(node, styleId);\r\n    const url = URL.createObjectURL(b);\r\n    if (type === 'svg') {\r\n        downloadUrl(url, `${chartTitle}.${type}`, node.ownerDocument);\r\n        URL.revokeObjectURL(url);\r\n        return Promise.resolve();\r\n    }\r\n    return toPNG(url, node).then((purl) => {\r\n        downloadUrl(purl, `${chartTitle}.${type}`, node.ownerDocument);\r\n        URL.revokeObjectURL(url);\r\n    });\r\n}\r\nfunction toPNG(url, node) {\r\n    const canvas = node.ownerDocument.createElement('canvas');\r\n    const bb = node.getBoundingClientRect();\r\n    canvas.width = bb.width;\r\n    canvas.height = bb.height;\r\n    const ctx = canvas.getContext('2d');\r\n    const img = new Image(canvas.width, canvas.height);\r\n    return new Promise((resolve) => {\r\n        img.onload = () => {\r\n            ctx.drawImage(img, 0, 0);\r\n            const png = canvas.toDataURL('image/png');\r\n            resolve(png);\r\n        };\r\n        img.src = url;\r\n    });\r\n}\r\n/**\r\n * helper method to download a given url in the browser\r\n * @param url the url to download\r\n * @param title the desired file name\r\n * @param doc the root document\r\n */\r\nfunction downloadUrl(url, title, doc) {\r\n    const a = doc.createElement('a');\r\n    a.href = url;\r\n    a.style.position = 'absolute';\r\n    a.style.left = '-10000px';\r\n    a.style.top = '-10000px';\r\n    a.download = title;\r\n    doc.body.appendChild(a);\r\n    a.click();\r\n    a.remove();\r\n}\n\n/**\r\n * @upsetjs/react\r\n * https://github.com/upsetjs/upsetjs\r\n *\r\n * Copyright (c) 2021 Samuel Gratzl <sam@sgratzl.com>\r\n */\r\nfunction createVegaSpec(svg, title) {\r\n    var _a, _b, _c, _d, _e;\r\n    const resolveStyle = (_c = (svg.getComputedStyle || ((_b = (_a = svg.ownerDocument) === null || _a === void 0 ? void 0 : _a.defaultView) === null || _b === void 0 ? void 0 : _b.getComputedStyle))) !== null && _c !== void 0 ? _c : window.getComputedStyle;\r\n    const styleId = extractStyleId(svg);\r\n    const chartTitle = title !== null && title !== void 0 ? title : extractTitle(svg, styleId);\r\n    const sets = Array.from(svg.querySelectorAll('[data-upset=sets] [data-cardinality]'))\r\n        .map((set) => {\r\n        return {\r\n            name: set.querySelector(`text.setTextStyle-${styleId}`).textContent,\r\n            cardinality: Number.parseInt(set.dataset.cardinality, 10),\r\n        };\r\n    })\r\n        .reverse();\r\n    const barLabelOffset = -Number.parseFloat(svg.querySelector(`.sBarTextStyle-${styleId}`).getAttribute('dx'));\r\n    const color = resolveStyle(svg.querySelector(`.fillPrimary-${styleId}`)).fill;\r\n    const fillNotMember = resolveStyle(svg.querySelector(`.fillNotMember-${styleId}`)).fill;\r\n    const textColor = resolveStyle(svg.querySelector('text')).fill;\r\n    const csName = svg.querySelector(`.cChartTextStyle-${styleId}`).textContent;\r\n    const setName = svg.querySelector(`.sChartTextStyle-${styleId}`).textContent;\r\n    const combinations = Array.from(svg.querySelectorAll('[data-upset=cs] [data-cardinality]')).map((set) => {\r\n        return {\r\n            name: set.querySelector(`text.hoverBarTextStyle-${styleId}`).textContent,\r\n            cardinality: Number.parseInt(set.dataset.cardinality, 10),\r\n            sets: Array.from(set.querySelectorAll(`.fillPrimary-${styleId} > title`)).map((n) => n.textContent),\r\n        };\r\n    });\r\n    const translateX = (v) => Number.parseFloat(v.getAttribute('transform').match(/([\\d.]+),/)[1]);\r\n    const translateY = (v) => Number.parseFloat(v.getAttribute('transform').match(/,([\\d.]+)/)[1]);\r\n    const base = svg.querySelector('[data-upset=base]');\r\n    const padding = translateX(base);\r\n    // combination axis block\r\n    const setWidth = translateX(svg.querySelector('[data-upset=csaxis]'));\r\n    // axisline\r\n    const csWidth = Number.parseFloat(base.querySelector('g').firstElementChild.children[1].getAttribute('x2'));\r\n    // set axis block\r\n    const csHeight = translateY(svg.querySelector('[data-upset=setaxis]'));\r\n    // set label clip path\r\n    const labelWidth = Number.parseFloat(svg.querySelector('defs rect').getAttribute('width'));\r\n    const setHeight = Number.parseFloat(svg.querySelector('defs rect').getAttribute('height'));\r\n    const radius = Number.parseFloat(svg.querySelector(`[data-cardinality] circle.fillPrimary-${styleId}`).getAttribute('r'));\r\n    const hasPrimarySelection = svg.querySelector('[data-upset=sets-s] [data-cardinality]') != null;\r\n    const hasQuery = svg.querySelector('[data-upset=sets-q] [data-cardinality]') != null;\r\n    const hasSelection = hasPrimarySelection || hasQuery;\r\n    let selectionColor = 'orange';\r\n    if (hasSelection) {\r\n        // inject the selection data\r\n        Array.from(svg.querySelectorAll(`[data-upset=sets-${hasPrimarySelection ? 's]' : 'q]:first-of-type'} [data-cardinality]`)).forEach((elem) => {\r\n            // since artificially reversed\r\n            const i = sets.length - Number.parseInt(elem.dataset.i, 10) - 1;\r\n            sets[i].selection = Number.parseInt(elem.dataset.cardinality, 10);\r\n        });\r\n        Array.from(svg.querySelectorAll(`[data-upset=cs-${hasPrimarySelection ? 's]' : 'q]:first-of-type'} [data-cardinality]`)).forEach((elem) => {\r\n            const i = Number.parseInt(elem.dataset.i, 10);\r\n            combinations[i].selection = Number.parseInt(elem.dataset.cardinality, 10);\r\n        });\r\n        selectionColor = resolveStyle(svg.querySelector(`[data-upset=sets-${hasPrimarySelection ? 's' : 'q'}] [data-cardinality]`)).fill;\r\n    }\r\n    const highlightedCombination = Number.parseInt((_e = (_d = svg.querySelector('[data-upset=cs-ss]')) === null || _d === void 0 ? void 0 : _d.dataset.i) !== null && _e !== void 0 ? _e : '-1', 10);\r\n    const filter = highlightedCombination >= 0\r\n        ? {\r\n            field: 'partOf',\r\n            oneOf: [1, 2],\r\n        }\r\n        : {\r\n            field: 'partOf',\r\n            equal: 1,\r\n        };\r\n    // part of: 0 ... negative list, 1 ... positive set list, 2, ... positive and selected\r\n    return {\r\n        $schema: 'https://vega.github.io/schema/vega-lite/v4.json',\r\n        title: chartTitle,\r\n        description: extractDescription(svg, styleId),\r\n        datasets: {\r\n            sets,\r\n            combinations: combinations\r\n                .map((c, i) => Object.assign({}, c, {\r\n                partOf: highlightedCombination === i ? 2 : 1,\r\n                nsets: [''],\r\n            }))\r\n                .concat(combinations.map((c) => ({\r\n                name: c.name,\r\n                cardinality: c.cardinality,\r\n                // no selection!\r\n                partOf: 0,\r\n                sets: [''],\r\n                nsets: sets.filter((s) => !c.sets.includes(s.name)).map((s) => s.name),\r\n            }))),\r\n        },\r\n        vconcat: [\r\n            {\r\n                hconcat: [\r\n                    {\r\n                        mark: 'bar',\r\n                        width: setWidth + labelWidth - 40,\r\n                        height: csHeight,\r\n                    },\r\n                    {\r\n                        width: csWidth,\r\n                        height: csHeight,\r\n                        data: {\r\n                            name: 'combinations',\r\n                        },\r\n                        transform: [\r\n                            {\r\n                                filter,\r\n                            },\r\n                        ],\r\n                        layer: [\r\n                            {\r\n                                mark: {\r\n                                    type: 'bar',\r\n                                    tooltip: true,\r\n                                },\r\n                            },\r\n                            {\r\n                                mark: {\r\n                                    type: 'text',\r\n                                    align: 'center',\r\n                                    baseline: 'bottom',\r\n                                    dy: -barLabelOffset,\r\n                                },\r\n                                encoding: {\r\n                                    text: { field: 'cardinality', type: 'quantitative' },\r\n                                },\r\n                            },\r\n                            hasSelection && {\r\n                                mark: {\r\n                                    type: 'bar',\r\n                                    fill: selectionColor,\r\n                                    tooltip: true,\r\n                                },\r\n                                encoding: {\r\n                                    y: {\r\n                                        field: 'selection',\r\n                                        type: 'quantitative',\r\n                                    },\r\n                                },\r\n                            },\r\n                        ].filter(Boolean),\r\n                        encoding: {\r\n                            x: { field: 'name', type: 'ordinal', axis: null, sort: null },\r\n                            y: {\r\n                                field: 'cardinality',\r\n                                type: 'quantitative',\r\n                                axis: {\r\n                                    grid: false,\r\n                                },\r\n                                title: csName,\r\n                            },\r\n                        },\r\n                    },\r\n                ],\r\n            },\r\n            {\r\n                hconcat: [\r\n                    {\r\n                        width: setWidth,\r\n                        height: setHeight,\r\n                        data: {\r\n                            name: 'sets',\r\n                        },\r\n                        layer: [\r\n                            {\r\n                                mark: {\r\n                                    type: 'bar',\r\n                                    tooltip: true,\r\n                                },\r\n                            },\r\n                            {\r\n                                mark: {\r\n                                    type: 'text',\r\n                                    align: 'right',\r\n                                    baseline: 'middle',\r\n                                    dx: -barLabelOffset,\r\n                                },\r\n                                encoding: {\r\n                                    text: { field: 'cardinality', type: 'quantitative' },\r\n                                },\r\n                            },\r\n                            hasSelection && {\r\n                                mark: {\r\n                                    type: 'bar',\r\n                                    fill: selectionColor,\r\n                                    tooltip: true,\r\n                                },\r\n                                encoding: {\r\n                                    x: {\r\n                                        field: 'selection',\r\n                                        type: 'quantitative',\r\n                                    },\r\n                                },\r\n                            },\r\n                        ].filter(Boolean),\r\n                        encoding: {\r\n                            y: { field: 'name', type: 'ordinal', axis: null, sort: null },\r\n                            x: {\r\n                                field: 'cardinality',\r\n                                type: 'quantitative',\r\n                                title: setName,\r\n                                sort: 'descending',\r\n                                axis: {\r\n                                    grid: false,\r\n                                },\r\n                            },\r\n                        },\r\n                    },\r\n                    {\r\n                        data: {\r\n                            name: 'sets',\r\n                        },\r\n                        width: labelWidth,\r\n                        height: setHeight,\r\n                        mark: {\r\n                            type: 'text',\r\n                            align: 'center',\r\n                            baseline: 'middle',\r\n                            fontSize: Number.parseInt(resolveStyle(svg.querySelector(`.setTextStyle-${styleId}`)).fontSize, 10),\r\n                        },\r\n                        encoding: {\r\n                            y: { field: 'name', type: 'ordinal', axis: null, sort: null },\r\n                            text: { field: 'name', type: 'ordinal' },\r\n                        },\r\n                    },\r\n                    {\r\n                        width: csWidth,\r\n                        height: setHeight,\r\n                        data: {\r\n                            name: 'combinations',\r\n                        },\r\n                        transform: [\r\n                            {\r\n                                flatten: ['sets'],\r\n                                as: ['has_set'],\r\n                            },\r\n                            {\r\n                                flatten: ['nsets'],\r\n                                as: ['has_not_set'],\r\n                            },\r\n                            {\r\n                                calculate: 'datum.has_set+datum.has_not_set',\r\n                                as: 'set',\r\n                            },\r\n                        ],\r\n                        layer: [\r\n                            {\r\n                                mark: {\r\n                                    type: 'circle',\r\n                                    size: radius * radius * Math.PI,\r\n                                    tooltip: true,\r\n                                },\r\n                                encoding: {\r\n                                    color: {\r\n                                        field: 'partOf',\r\n                                        type: 'nominal',\r\n                                        legend: null,\r\n                                        scale: {\r\n                                            range: [fillNotMember, color].concat(highlightedCombination >= 0 ? [selectionColor] : []),\r\n                                        },\r\n                                    },\r\n                                    y: {\r\n                                        field: 'set',\r\n                                        type: 'ordinal',\r\n                                        axis: null,\r\n                                        sort: null,\r\n                                        scale: {\r\n                                            domain: sets.map((s) => s.name),\r\n                                        },\r\n                                    },\r\n                                },\r\n                            },\r\n                            {\r\n                                mark: 'rule',\r\n                                transform: [\r\n                                    {\r\n                                        filter,\r\n                                    },\r\n                                    {\r\n                                        calculate: 'datum.sets[datum.sets.length -1]',\r\n                                        as: 'set_end',\r\n                                    },\r\n                                ],\r\n                                encoding: Object.assign({ y: { field: 'sets[0]', type: 'ordinal', axis: null, sort: null }, y2: { field: 'set_end' } }, (highlightedCombination < 0\r\n                                    ? {}\r\n                                    : {\r\n                                        color: {\r\n                                            field: 'partOf',\r\n                                            type: 'nominal',\r\n                                            legend: null,\r\n                                            scale: {\r\n                                                range: [color, selectionColor],\r\n                                            },\r\n                                        },\r\n                                    })),\r\n                            },\r\n                        ],\r\n                        encoding: {\r\n                            x: { field: 'name', type: 'ordinal', axis: null, sort: null },\r\n                        },\r\n                    },\r\n                ],\r\n            },\r\n        ],\r\n        config: {\r\n            padding,\r\n            background: getDefaultTheme(svg.dataset.theme).backgroundColor,\r\n            concat: {\r\n                spacing: 0,\r\n            },\r\n            view: {\r\n                stroke: null,\r\n            },\r\n            // scale: {\r\n            //   bandPaddingInner: props.barPadding,\r\n            //   bandPaddingOuter: props.barPadding,\r\n            //   pointPadding: props.barPadding,\r\n            // },\r\n            bar: {\r\n                fill: color,\r\n            },\r\n            circle: {\r\n                opacity: 1,\r\n            },\r\n            rule: {\r\n                stroke: color,\r\n                strokeWidth: Number.parseInt(resolveStyle(svg.querySelector(`[data-upset=cs] [data-cardinality] line`)).strokeWidth, 10),\r\n            },\r\n            axis: {\r\n                labelColor: textColor,\r\n                labelFontSize: Number.parseInt(resolveStyle(svg.querySelector(`.axisTextStyle-${styleId}`)).fontSize, 10),\r\n                titleColor: textColor,\r\n                titleFontSize: Number.parseInt(resolveStyle(svg.querySelector(`.cChartTextStyle-${styleId}`)).fontSize, 10),\r\n            },\r\n            title: {\r\n                color: textColor,\r\n            },\r\n            text: {\r\n                fill: textColor,\r\n                fontSize: Number.parseInt(resolveStyle(svg.querySelector(`.sBarTextStyle-${styleId}`)).fontSize, 10),\r\n            },\r\n        },\r\n    };\r\n}\r\nfunction exportVegaLite(svg, { title } = {}) {\r\n    const spec = createVegaSpec(svg, title);\r\n    const url = URL.createObjectURL(new Blob([JSON.stringify(spec, null, 2)], {\r\n        type: 'application/json',\r\n    }));\r\n    downloadUrl(url, `${spec.title}.json`, svg.ownerDocument);\r\n    URL.revokeObjectURL(url);\r\n}\n\nconst THEME_KEYS = [\r\n    'selectionColor',\r\n    'color',\r\n    'textColor',\r\n    'hoverHintColor',\r\n    'notMemberColor',\r\n    'alternatingBackgroundColor',\r\n    'hasSelectionColor',\r\n    'hasSelectionOpacity',\r\n    'opacity',\r\n    'strokeColor',\r\n    'valueTextColor',\r\n];\r\nconst LAYOUT_KEYS = [\r\n    'padding',\r\n    'barPadding',\r\n    'dotPadding',\r\n    'widthRatios',\r\n    'heightRatios',\r\n];\r\nconst STYLE_KEYS = [\r\n    'fontSizes',\r\n    'combinationName',\r\n    'setName',\r\n    'barLabelOffset',\r\n    'setNameAxisOffset',\r\n    'combinationNameAxisOffset',\r\n    'theme',\r\n    'fontFamily',\r\n    'emptySelection',\r\n    'exportButtons',\r\n    'queryLegend',\r\n];\r\nconst DUMP_KEYS = ['bandScale', 'numericScale'].concat(THEME_KEYS, LAYOUT_KEYS, STYLE_KEYS);\r\nfunction toDumpProps(props) {\r\n    var _a;\r\n    const full = fillDefaults({\r\n        width: 0,\r\n        height: 0,\r\n        sets: (_a = props.sets) !== null && _a !== void 0 ? _a : [],\r\n        combinations: props.combinations,\r\n        theme: props.theme,\r\n    });\r\n    const r = {};\r\n    DUMP_KEYS.forEach((key) => {\r\n        const value = props[key];\r\n        const defaultValue = full[key];\r\n        if (key === 'theme' && value !== 'light') {\r\n            // keep dark theme flag\r\n            r[key] = value;\r\n            return;\r\n        }\r\n        if (value == null || value === defaultValue) {\r\n            return;\r\n        }\r\n        if (key === 'fontSizes') {\r\n            // nested check\r\n            let empty = true;\r\n            const sub = {};\r\n            FONT_SIZES_KEYS.forEach((fKey) => {\r\n                const fValue = value[fKey];\r\n                const fDefaultValue = defaultValue[fKey];\r\n                if (fValue !== fDefaultValue) {\r\n                    sub[fKey] = fValue;\r\n                    empty = false;\r\n                }\r\n            });\r\n            if (!empty) {\r\n                r[key] = sub;\r\n            }\r\n        }\r\n        else {\r\n            r[key] = value;\r\n        }\r\n    });\r\n    return r;\r\n}\r\nfunction toUpSetJSDump(dump, elements, props, author, mode) {\r\n    return Object.assign({\r\n        $schema: 'https://upset.js.org/schema.1.0.0.json',\r\n        name: typeof props.title === 'string' ? props.title : 'UpSetJS',\r\n        description: typeof props.description === 'string' ? props.description : '',\r\n        mode,\r\n        author,\r\n        elements,\r\n        attrs: [],\r\n        props: toDumpProps(props),\r\n    }, dump);\r\n}\r\nfunction toUpSetJSStaticDump(dump, props, author, mode) {\r\n    return Object.assign({\r\n        $schema: 'https://upset.js.org/schema-static.1.0.0.json',\r\n        name: typeof props.title === 'string' ? props.title : 'UpSetJS',\r\n        description: typeof props.description === 'string' ? props.description : '',\r\n        mode,\r\n        author,\r\n        props: toDumpProps(props),\r\n    }, dump);\r\n}\n\n/**\r\n * @upsetjs/react\r\n * https://github.com/upsetjs/upsetjs\r\n *\r\n * Copyright (c) 2021 Samuel Gratzl <sam@sgratzl.com>\r\n */\r\nfunction exportDumpData(props, data, compress = false, mode) {\r\n    var _a, _b;\r\n    const elems = [];\r\n    const lookup = new Map();\r\n    const toElemIndex = (elem) => {\r\n        if (lookup.has(elem)) {\r\n            return lookup.get(elem);\r\n        }\r\n        lookup.set(elem, elems.length);\r\n        elems.push(elem);\r\n        return elems.length - 1;\r\n    };\r\n    const dump = toDump({\r\n        sets: props.sets,\r\n        queries: (_b = (_a = props.queries) === null || _a === void 0 ? void 0 : _a.filter((d) => isElemQuery(d) || isSetQuery(d))) !== null && _b !== void 0 ? _b : [],\r\n        toElemIndex,\r\n        selection: props.selection && isSetLike$1(props.selection) ? props.selection : undefined,\r\n        combinations: data.cs.v,\r\n        combinationOptions: Array.isArray(props.combinations)\r\n            ? {}\r\n            : props.combinations,\r\n    }, {\r\n        compress: compress ? 'yes' : 'no',\r\n    });\r\n    return toUpSetJSDump(dump, elems, props, undefined, mode);\r\n}\r\nfunction exportStaticDumpData(props, data, compress = false, mode) {\r\n    var _a, _b;\r\n    const dump = toStaticDump({\r\n        sets: props.sets,\r\n        queries: (_b = (_a = props.queries) === null || _a === void 0 ? void 0 : _a.filter((d) => isElemQuery(d) || isSetQuery(d))) !== null && _b !== void 0 ? _b : [],\r\n        selection: props.selection && isSetLike$1(props.selection) ? props.selection : undefined,\r\n        combinations: data.cs.v,\r\n    }, {\r\n        compress: compress ? 'yes' : 'no',\r\n    });\r\n    return toUpSetJSStaticDump(dump, props, undefined, mode);\r\n}\r\nfunction exportDump(svg, props, data, mode) {\r\n    const dump = exportDumpData(props, data, false, mode);\r\n    const url = URL.createObjectURL(new Blob([JSON.stringify(dump, null, 2)], {\r\n        type: 'application/json',\r\n    }));\r\n    downloadUrl(url, `${dump.name}.json`, svg.ownerDocument);\r\n    URL.revokeObjectURL(url);\r\n}\r\nconst MAX_URL_LENGTH = 2048 * 2;\r\nfunction exportSharedLink(props, data, mode) {\r\n    const r = exportDumpData(props, data, true, mode);\r\n    delete r.$schema;\r\n    const arg = LZString.compressToEncodedURIComponent(JSON.stringify(r));\r\n    const url = new URL('https://upset.js.org/app/embed.html');\r\n    url.searchParams.set('p', arg);\r\n    if (url.toString().length < MAX_URL_LENGTH) {\r\n        window.open(url.toString(), '_blank');\r\n        return true;\r\n    }\r\n    // try other compression\r\n    const r2 = exportStaticDumpData(props, data, true, mode);\r\n    delete r2.$schema;\r\n    const arg2 = LZString.compressToEncodedURIComponent(JSON.stringify(r2));\r\n    url.searchParams.set('p', arg2);\r\n    if (url.toString().length < MAX_URL_LENGTH) {\r\n        window.open(url.toString(), '_blank');\r\n        return true;\r\n    }\r\n    // send via frame message\r\n    url.searchParams.delete('p');\r\n    const w = window.open(url.toString(), '_blank');\r\n    w === null || w === void 0 ? void 0 : w.addEventListener('load', () => {\r\n        w === null || w === void 0 ? void 0 : w.postMessage(r, url.origin);\r\n    });\r\n    return false;\r\n}\n\n/**\r\n * @upsetjs/react\r\n * https://github.com/upsetjs/upsetjs\r\n *\r\n * Copyright (c) 2021 Samuel Gratzl <sam@sgratzl.com>\r\n */\r\nfunction clsx(...classNames) {\r\n    return classNames.filter(Boolean).join(' ');\r\n}\r\nfunction generateId(_args) {\r\n    return `upset-${Math.random().toString(36).slice(4)}`;\r\n}\r\nfunction isSetLike(s) {\r\n    return s != null && !Array.isArray(s);\r\n}\r\nfunction elemOverlapOf(query, toElemKey) {\r\n    const f = setOverlapFactory(query, toElemKey);\r\n    return (s) => {\r\n        return f(s.elems).intersection;\r\n    };\r\n}\r\nfunction noGuessPossible() {\r\n    return -1;\r\n}\r\nfunction generateSelectionOverlap(selection, overlapGuesser, toElemKey) {\r\n    if (!selection) {\r\n        return noOverlap;\r\n    }\r\n    if (typeof selection === 'function') {\r\n        return selection;\r\n    }\r\n    if (Array.isArray(selection)) {\r\n        return elemOverlapOf(selection, toElemKey);\r\n    }\r\n    const ss = selection;\r\n    if (ss.overlap) {\r\n        return ss.overlap.bind(ss);\r\n    }\r\n    let f = null;\r\n    return (s) => {\r\n        if (s.overlap) {\r\n            return s.overlap(ss);\r\n        }\r\n        const guess = overlapGuesser(s, ss);\r\n        if (guess >= 0) {\r\n            return guess;\r\n        }\r\n        if (!f) {\r\n            f = elemOverlapOf(ss.elems, toElemKey);\r\n        }\r\n        return f(s);\r\n    };\r\n}\r\nfunction generateSelectionName(selection) {\r\n    var _a;\r\n    return Array.isArray(selection)\r\n        ? `Array(${selection.length})`\r\n        : typeof selection === 'function'\r\n            ? '?'\r\n            : (_a = selection) === null || _a === void 0 ? void 0 : _a.name;\r\n}\r\nfunction elemElemOverlapOf(query, toElemKey) {\r\n    const f = setElemOverlapFactory(query, toElemKey);\r\n    return (s) => {\r\n        return f(s.elems).intersection;\r\n    };\r\n}\r\nfunction noOverlap() {\r\n    return 0;\r\n}\r\nfunction parseFontSize(v) {\r\n    if (v == null) {\r\n        return 10;\r\n    }\r\n    if (v.endsWith('pt')) {\r\n        return Math.floor((4 / 3) * Number.parseInt(v, 10));\r\n    }\r\n    return Number.parseInt(v, 10);\r\n}\r\nfunction toAnchor(alignment) {\r\n    var _a;\r\n    const alignments = {\r\n        left: 'start',\r\n        center: 'middle',\r\n        right: 'end',\r\n    };\r\n    return (_a = alignments[alignment]) !== null && _a !== void 0 ? _a : 'middle';\r\n}\n\n/**\r\n * @upsetjs/react\r\n * https://github.com/upsetjs/upsetjs\r\n *\r\n * Copyright (c) 2021 Samuel Gratzl <sam@sgratzl.com>\r\n */\r\nfunction resolveNumericScale(factory) {\r\n    if (factory === 'linear') {\r\n        return linearScale;\r\n    }\r\n    if (factory === 'log') {\r\n        return logScale;\r\n    }\r\n    return factory;\r\n}\r\nfunction resolveBandScale(factory) {\r\n    return factory === 'band' ? bandScale$1 : factory;\r\n}\r\nfunction areCombinations(combinations) {\r\n    return Array.isArray(combinations);\r\n}\r\nfunction deriveDataDependent(sets, combinations, sizes, numericScale, bandScale, barLabelFontSize, dotPadding, barPadding, tickFontSize, combinationAddons, toKey, toElemKey, id, setMaxScale, combinationMaxScale) {\r\n    var _a;\r\n    const numericScaleFactory = resolveNumericScale(numericScale);\r\n    const bandScaleFactory = resolveBandScale(bandScale);\r\n    const cs = areCombinations(combinations)\r\n        ? combinations\r\n        : generateCombinations(sets, Object.assign({ toElemKey }, DEFAULT_COMBINATIONS, combinations));\r\n    const csKeys = cs.map(toKey);\r\n    const combinationX = bandScaleFactory(csKeys, sizes.cs.w, sizes.padding);\r\n    const dataCSCardinality = cs.reduce((acc, d) => Math.max(acc, d.cardinality), 0);\r\n    const maxCSCardinality = combinationMaxScale !== null && combinationMaxScale !== void 0 ? combinationMaxScale : dataCSCardinality;\r\n    const combinationYEnd = maxCSCardinality > dataCSCardinality ? 0 : barLabelFontSize;\r\n    const combinationY = numericScaleFactory(maxCSCardinality, [sizes.cs.h, combinationYEnd], {\r\n        orientation: 'vertical',\r\n        fontSizeHint: tickFontSize,\r\n    });\r\n    const labelSize = (text) => Math.floor((barLabelFontSize / 1.4) * 0.7 * text.length);\r\n    const guessLabelWidth = (v) => labelSize(combinationY.tickFormat()(v));\r\n    const dataSetCardinality = sets.reduce((acc, d) => Math.max(acc, d.cardinality), 0);\r\n    const maxSetCardinality = setMaxScale !== null && setMaxScale !== void 0 ? setMaxScale : dataSetCardinality;\r\n    const largestSetLabelWidth = guessLabelWidth(maxSetCardinality);\r\n    let largestCSLabelWidth = guessLabelWidth(maxCSCardinality);\r\n    for (const addon of combinationAddons) {\r\n        if (!addon.scale) {\r\n            continue;\r\n        }\r\n        const ticks = addon.scale.ticks(3);\r\n        const f = addon.scale.tickFormat();\r\n        for (const tick of ticks) {\r\n            const l = typeof tick === 'number' ? f(tick) : (_a = tick.label) !== null && _a !== void 0 ? _a : f(tick.value);\r\n            const size = labelSize(l);\r\n            if (size > largestCSLabelWidth) {\r\n                largestCSLabelWidth = size;\r\n            }\r\n        }\r\n    }\r\n    const setShift = maxSetCardinality > dataSetCardinality ? 0 : largestSetLabelWidth;\r\n    const setX = numericScaleFactory(maxSetCardinality, [sizes.sets.w, setShift], {\r\n        orientation: 'horizontal',\r\n        fontSizeHint: tickFontSize,\r\n    });\r\n    const setKeys = sets.map(toKey);\r\n    const setY = bandScaleFactory(setKeys.slice().reverse(), // reverse order\r\n    sizes.sets.h, sizes.padding);\r\n    const r = (Math.min(setY.bandwidth(), combinationX.bandwidth()) / 2) * dotPadding;\r\n    const triangleSize = Math.max(2, (Math.min(setY.bandwidth(), combinationX.bandwidth()) / 2) * barPadding);\r\n    return {\r\n        id: id ? id : generateId(),\r\n        r,\r\n        triangleSize,\r\n        sets: {\r\n            v: sets,\r\n            keys: setKeys,\r\n            rv: sets.slice().reverse(),\r\n            x: setX,\r\n            xAxisWidth: sizes.sets.w - setShift,\r\n            y: (s) => setY(toKey(s)),\r\n            max: maxSetCardinality,\r\n            bandWidth: setY.bandwidth(),\r\n            cy: setY.bandwidth() / 2 + sizes.cs.h,\r\n            format: setX.tickFormat(),\r\n            labelOffset: barLabelFontSize + 9 + 2,\r\n        },\r\n        cs: {\r\n            v: cs,\r\n            keys: cs.map(toKey),\r\n            x: (s) => combinationX(toKey(s)),\r\n            max: maxCSCardinality,\r\n            y: combinationY,\r\n            yAxisWidth: sizes.cs.h - combinationYEnd,\r\n            cx: combinationX.bandwidth() / 2,\r\n            bandWidth: combinationX.bandwidth(),\r\n            format: combinationY.tickFormat(),\r\n            has: (v, s) => {\r\n                const sk = toKey(s);\r\n                return Array.from(v.sets).some((ss) => toKey(ss) === sk);\r\n            },\r\n            labelOffset: largestCSLabelWidth + 9 + 6,\r\n        },\r\n        toKey,\r\n        toElemKey,\r\n        overlapGuesser: generateOverlapFunction(cs, noGuessPossible, toKey),\r\n    };\r\n}\n\n/**\r\n * @upsetjs/react\r\n * https://github.com/upsetjs/upsetjs\r\n *\r\n * Copyright (c) 2021 Samuel Gratzl <sam@sgratzl.com>\r\n */\r\nfunction deriveSizeDependent(width, height, margin, barPadding, widthRatios, heightRatios, setAddons, combinationAddons, id, setAddonPadding, combinationAddonPadding) {\r\n    const setAddonsBefore = setAddons.reduce((acc, a) => acc + (a.position === 'before' ? a.size + setAddonPadding : 0), 0);\r\n    const setAddonsAfter = setAddons.reduce((acc, a) => acc + (a.position !== 'before' ? a.size + setAddonPadding : 0), 0);\r\n    const combinationAddonsBefore = combinationAddons.reduce((acc, a) => acc + (a.position === 'before' ? a.size + setAddonPadding : 0), 0);\r\n    const combinationAddonsAfter = combinationAddons.reduce((acc, a) => acc + (a.position !== 'before' ? a.size + setAddonPadding : 0), 0);\r\n    const h = height - 2 * margin - 20 - combinationAddonsAfter - combinationAddonsBefore;\r\n    const w = width - 2 * margin - setAddonsBefore - setAddonsAfter;\r\n    const setWidth = widthRatios[0] > 1 ? widthRatios[0] : w * widthRatios[0];\r\n    const labelsWidth = widthRatios[1] > 1 ? widthRatios[1] : w * widthRatios[1];\r\n    const combinationHeight = heightRatios[0] > 1 ? heightRatios[0] : h * heightRatios[0];\r\n    return {\r\n        id: id ? id : generateId(),\r\n        cs: {\r\n            before: combinationAddonsBefore,\r\n            after: combinationAddonsAfter,\r\n            x: setAddonsBefore + setWidth + labelsWidth,\r\n            y: combinationAddonsBefore,\r\n            w: w - setWidth - labelsWidth,\r\n            h: combinationHeight,\r\n            addons: combinationAddons,\r\n            addonPadding: combinationAddonPadding,\r\n        },\r\n        labels: {\r\n            x: setAddonsBefore + setWidth,\r\n            y: combinationAddonsBefore + combinationHeight,\r\n            w: labelsWidth,\r\n            h: h - combinationHeight,\r\n        },\r\n        sets: {\r\n            before: setAddonsBefore,\r\n            after: setAddonsAfter,\r\n            x: setAddonsBefore,\r\n            y: combinationAddonsBefore + combinationHeight,\r\n            w: setWidth,\r\n            h: h - combinationHeight,\r\n            addons: setAddons,\r\n            addonPadding: setAddonPadding,\r\n        },\r\n        padding: barPadding,\r\n        legend: {\r\n            x: width / 2,\r\n        },\r\n        margin: margin,\r\n        w: width,\r\n        h: height,\r\n    };\r\n}\n\n/**\r\n * @upsetjs/react\r\n * https://github.com/upsetjs/upsetjs\r\n *\r\n * Copyright (c) 2021 Samuel Gratzl <sam@sgratzl.com>\r\n */\r\nfunction deriveStyleDependent$1(theme, styles, classNames, combinationName, combinationNameAxisOffset, setName, setNameAxisOffset, styleId, barLabelOffset, selectionColor, emptySelection, title, description, tooltips, setLabelAlignment) {\r\n    return {\r\n        theme,\r\n        styles,\r\n        classNames: classNames,\r\n        cs: {\r\n            name: combinationName,\r\n            offset: combinationNameAxisOffset,\r\n        },\r\n        sets: {\r\n            name: setName,\r\n            offset: setNameAxisOffset,\r\n        },\r\n        emptySelection,\r\n        id: styleId,\r\n        barLabelOffset,\r\n        selectionColor,\r\n        title,\r\n        description,\r\n        tooltips,\r\n        setLabelAlignment,\r\n    };\r\n}\n\n/**\r\n * @upsetjs/react\r\n * https://github.com/upsetjs/upsetjs\r\n *\r\n * Copyright (c) 2021 Samuel Gratzl <sam@sgratzl.com>\r\n */\r\nfunction ExportButtons({ transform, styleId, exportButtons, exportChart, }) {\r\n    if (!exportButtons) {\r\n        return null;\r\n    }\r\n    const svgWidth = 26;\r\n    const pngWidth = 26;\r\n    const vegaWidth = 34;\r\n    const dumpWidth = 34;\r\n    const shareWidth = 42;\r\n    const space = 2;\r\n    let acc = 0;\r\n    const buttons = [];\r\n    if (exportButtons === true || exportButtons.svg !== false) {\r\n        acc += svgWidth;\r\n        buttons.push(React.createElement(\"g\", { key: \"svg\", className: `exportButton-${styleId}`, onClick: exportChart, \"data-type\": \"svg\", transform: `translate(-${acc}, 0)` },\r\n            React.createElement(\"title\", null, \"Download SVG Image\"),\r\n            React.createElement(\"rect\", { y: -9, width: svgWidth, height: 11, rx: 2, ry: 2 }),\r\n            React.createElement(\"text\", { className: `exportTextStyle-${styleId}`, x: svgWidth / 2 }, \"SVG\")));\r\n        acc += space;\r\n    }\r\n    if (exportButtons === true || exportButtons.png !== false) {\r\n        acc += pngWidth;\r\n        buttons.push(React.createElement(\"g\", { key: \"png\", className: `exportButton-${styleId}`, onClick: exportChart, \"data-type\": \"png\", transform: `translate(-${acc}, 0)` },\r\n            React.createElement(\"title\", null, \"Download PNG Image\"),\r\n            React.createElement(\"rect\", { y: -9, width: pngWidth, height: 11, rx: 2, ry: 2 }),\r\n            React.createElement(\"text\", { className: `exportTextStyle-${styleId}`, x: pngWidth / 2 }, \"PNG\")));\r\n        acc += space;\r\n    }\r\n    if (exportButtons === true || exportButtons.vega !== false) {\r\n        acc += vegaWidth;\r\n        buttons.push(React.createElement(\"g\", { key: \"vega\", className: `exportButton-${styleId}`, onClick: exportChart, \"data-type\": \"vega\", transform: `translate(-${acc}, 0)` },\r\n            React.createElement(\"title\", null, \"Download VEGA-Lite Specification\"),\r\n            React.createElement(\"rect\", { y: -9, width: vegaWidth, height: 11, rx: 2, ry: 2 }),\r\n            React.createElement(\"text\", { className: `exportTextStyle-${styleId}`, x: vegaWidth / 2 }, \"VEGA\")));\r\n        acc += space;\r\n    }\r\n    if (exportButtons === true || exportButtons.dump !== false) {\r\n        acc += dumpWidth;\r\n        buttons.push(React.createElement(\"g\", { key: \"dump\", className: `exportButton-${styleId}`, onClick: exportChart, \"data-type\": \"dump\", transform: `translate(-${acc}, 0)` },\r\n            React.createElement(\"title\", null, \"Download UpSet.js JSON Dump\"),\r\n            React.createElement(\"rect\", { y: -9, width: dumpWidth, height: 11, rx: 2, ry: 2 }),\r\n            React.createElement(\"text\", { className: `exportTextStyle-${styleId}`, x: dumpWidth / 2 }, \"DUMP\")));\r\n        acc += space;\r\n    }\r\n    if (exportButtons === true || exportButtons.share !== false) {\r\n        acc += shareWidth;\r\n        buttons.push(React.createElement(\"g\", { key: \"share\", className: `exportButton-${styleId}`, onClick: exportChart, \"data-type\": \"share\", transform: `translate(-${acc}, 0)` },\r\n            React.createElement(\"title\", null, \"Open a shareable URL\"),\r\n            React.createElement(\"rect\", { y: -9, width: shareWidth, height: 11, rx: 2, ry: 2 }),\r\n            React.createElement(\"text\", { className: `exportTextStyle-${styleId}`, x: shareWidth / 2 }, \"SHARE\")));\r\n        acc += space;\r\n    }\r\n    return (React.createElement(\"g\", { className: `exportButtons-${styleId}`, transform: transform }, buttons));\r\n}\n\n/**\r\n * @upsetjs/react\r\n * https://github.com/upsetjs/upsetjs\r\n *\r\n * Copyright (c) 2021 Samuel Gratzl <sam@sgratzl.com>\r\n */\r\nconst QueryLegend = /*!#__PURE__*/ React.memo(function QueryLegend({ queries, x, style, data, }) {\r\n    return (React.createElement(\"text\", { transform: `translate(${x},4)`, style: style.styles.legend, className: clsx(`legendTextStyle-${style.id}`, style.classNames.legend) }, queries.map((q, i) => {\r\n        let count = null;\r\n        if (isSetQuery(q)) {\r\n            count = q.set.cardinality;\r\n        }\r\n        else if (isElemQuery(q)) {\r\n            count = q.elems instanceof Set ? q.elems.size : q.elems.length;\r\n        }\r\n        return (React.createElement(React.Fragment, { key: q.name },\r\n            React.createElement(\"tspan\", { className: `fillQ${i}-${data.id}` }, '  ⬤ '),\r\n            React.createElement(\"tspan\", null,\r\n                q.name,\r\n                count != null ? `: ${data.sets.format(count)}` : '')));\r\n    })));\r\n});\n\n/**\r\n * @upsetjs/react\r\n * https://github.com/upsetjs/upsetjs\r\n *\r\n * Copyright (c) 2021 Samuel Gratzl <sam@sgratzl.com>\r\n */\r\nconst HorizontalTick = /*!#__PURE__*/ React.memo(function HorizontalTick({ pos, spacing, tickSizeInner, orient, name, style, }) {\r\n    const k = orient === 'top' || orient === 'left' ? -1 : 1;\r\n    return (React.createElement(\"g\", { transform: `translate(0, ${pos + 0.5})` },\r\n        name && (React.createElement(\"text\", { x: k * spacing, dy: '0.32em', className: clsx(`axisTextStyle-${style.id}`, orient === 'right' ? `startText-${style.id}` : `endText-${style.id}`, style.classNames.axisTick), style: style.styles.axisTick }, name)),\r\n        React.createElement(\"line\", { x2: k * tickSizeInner, className: `axisLine-${style.id}` })));\r\n});\r\nconst VerticalTick = /*!#__PURE__*/ React.memo(function VerticalTick({ pos, name, spacing, orient, tickSizeInner, style, }) {\r\n    const k = orient === 'top' || orient === 'left' ? -1 : 1;\r\n    return (React.createElement(\"g\", { transform: `translate(${pos + 0.5}, 0)` },\r\n        name && (React.createElement(\"text\", { y: k * spacing, dy: orient === 'top' ? '0em' : '0.71em', className: clsx(`axisTextStyle-${style.id}`, style.classNames.axisTick), style: style.styles.axisTick }, name)),\r\n        React.createElement(\"line\", { y2: k * tickSizeInner, className: `axisLine-${style.id}` })));\r\n});\r\nfunction Axis({ scale, orient, tickSizeInner = 6, tickSizeOuter = 6, tickPadding = 3, size, start, style, transform, }) {\r\n    const spacing = Math.max(tickSizeInner, 0) + tickPadding;\r\n    const range0 = start;\r\n    const range1 = size;\r\n    const k = orient === 'top' || orient === 'left' ? -1 : 1;\r\n    const Tick = orient === 'left' || orient === 'right' ? HorizontalTick : VerticalTick;\r\n    const values = scale\r\n        .ticks()\r\n        .map((d) => (typeof d === 'number' ? { value: d, label: d.toLocaleString() } : d));\r\n    return (React.createElement(\"g\", { transform: transform },\r\n        values.map((d) => (React.createElement(Tick, { key: d.value, pos: scale(d.value), name: d.label, spacing: spacing, tickSizeInner: tickSizeInner, orient: orient, style: style }))),\r\n        React.createElement(\"path\", { className: `axisLine-${style.id}`, d: orient === 'left' || orient === 'right'\r\n                ? tickSizeOuter\r\n                    ? `M${k * tickSizeOuter},${range0}H0.5V${range1}H${k * tickSizeOuter}`\r\n                    : `M0.5,${range0}V${range1}`\r\n                : tickSizeOuter\r\n                    ? `M${range0},${k * tickSizeOuter}V0.5H${range1}V${k * tickSizeOuter}`\r\n                    : `M${range0},0.5H${range1}` })));\r\n}\n\n/**\r\n * @upsetjs/react\r\n * https://github.com/upsetjs/upsetjs\r\n *\r\n * Copyright (c) 2021 Samuel Gratzl <sam@sgratzl.com>\r\n */\r\nconst MultilineText = /*!#__PURE__*/ React.memo(function MultilineText({ width, text, dy, x, style, className, }) {\r\n    const ref = useRef(null);\r\n    const [lines, setLines] = useState(typeof text === 'string' ? [text] : []);\r\n    // update state upon text update\r\n    useLayoutEffect(() => {\r\n        if (typeof text === 'string') {\r\n            setLines([text]);\r\n        }\r\n        else {\r\n            setLines([]);\r\n        }\r\n    }, [text]);\r\n    useLayoutEffect(() => {\r\n        if (!ref.current ||\r\n            ref.current.childElementCount > 0 ||\r\n            typeof text !== 'string' ||\r\n            typeof ref.current.getComputedTextLength !== 'function') {\r\n            // already multi lines\r\n            return;\r\n        }\r\n        const len = ref.current.getComputedTextLength();\r\n        const lines = [];\r\n        let lineWidth = width;\r\n        let start = 0;\r\n        // compute line splits\r\n        const p = ref.current.getStartPositionOfChar(0);\r\n        while (len > lineWidth) {\r\n            p.x = lineWidth;\r\n            const num = ref.current.getCharNumAtPosition(p);\r\n            const space = text.lastIndexOf(' ', num);\r\n            if (space < start) {\r\n                break;\r\n            }\r\n            lines.push(text.slice(start, space + 1));\r\n            const used = ref.current.getEndPositionOfChar(space + 1).x;\r\n            start = space + 1;\r\n            // new line with in the used part + a new line\r\n            lineWidth = used + width;\r\n        }\r\n        lines.push(text.slice(start));\r\n        setLines(lines);\r\n    }, [ref, text, width]);\r\n    if (!text) {\r\n        return null;\r\n    }\r\n    return (React.createElement(\"tspan\", { ref: ref, dy: dy, style: style, x: x, className: className }, lines.length > 1\r\n        ? lines.map((l, i) => (React.createElement(\"tspan\", { key: l, x: 0, dy: i > 0 ? '1.2em' : dy }, l)))\r\n        : text));\r\n});\r\nvar UpSetTitle = /*!#__PURE__*/ React.memo(function UpSetTitle({ width, descriptionWidth = width, style, }) {\r\n    if (!style.title && !style.description) {\r\n        return null;\r\n    }\r\n    return (React.createElement(\"text\", null,\r\n        React.createElement(MultilineText, { text: style.title, width: width, dy: \"10px\", className: clsx(`titleTextStyle-${style.id}`, style.classNames.title), style: style.styles.title }),\r\n        React.createElement(MultilineText, { x: 0, width: descriptionWidth, dy: style.title ? '2em' : '10px', text: style.description, className: clsx(`descTextStyle-${style.id}`, style.classNames.description), style: style.styles.description })));\r\n});\n\n/**\r\n * @upsetjs/react\r\n * https://github.com/upsetjs/upsetjs\r\n *\r\n * Copyright (c) 2021 Samuel Gratzl <sam@sgratzl.com>\r\n */\r\nfunction noop() {\r\n    return undefined;\r\n}\r\nfunction wrap(f) {\r\n    if (!f) {\r\n        return noop;\r\n    }\r\n    return (set, addons) => {\r\n        return function (evt) {\r\n            return f.call(this, set, evt.nativeEvent, addons.map((a) => (a.createOnHandlerData ? a.createOnHandlerData(set) : null)));\r\n        };\r\n    };\r\n}\r\nfunction addonPositionGenerator(total, padding) {\r\n    let beforeAcc = 0;\r\n    let afterAcc = 0;\r\n    return (addon) => {\r\n        let x = 0;\r\n        if (addon.position === 'before') {\r\n            beforeAcc += addon.size + padding;\r\n            x = -beforeAcc;\r\n        }\r\n        else {\r\n            x = total + afterAcc + padding;\r\n            afterAcc += addon.size + padding;\r\n        }\r\n        return x;\r\n    };\r\n}\r\nfunction mergeColor(style, color, prop = 'fill') {\r\n    if (!color) {\r\n        return style;\r\n    }\r\n    if (!style) {\r\n        return !color ? undefined : { [prop]: color };\r\n    }\r\n    return Object.assign({ [prop]: color }, style);\r\n}\n\n/**\r\n * @upsetjs/react\r\n * https://github.com/upsetjs/upsetjs\r\n *\r\n * Copyright (c) 2021 Samuel Gratzl <sam@sgratzl.com>\r\n */\r\nconst UpSetAxis = /*!#__PURE__*/ React.memo(function UpSetAxis({ size, style, data }) {\r\n    const setPosGen = addonPositionGenerator(size.sets.w + size.labels.w + size.cs.w, size.sets.addonPadding);\r\n    const combinationPosGen = addonPositionGenerator(size.cs.h + size.sets.h, size.cs.addonPadding);\r\n    const csNameOffset = style.cs.offset === 'auto' ? data.cs.labelOffset : style.cs.offset;\r\n    const setNameOffset = style.sets.offset === 'auto' ? data.sets.labelOffset : style.sets.offset;\r\n    return (React.createElement(\"g\", null,\r\n        React.createElement(UpSetTitle, { style: style, width: size.cs.x - csNameOffset - 20 }),\r\n        size.cs.h > 0 && (React.createElement(\"g\", { transform: `translate(${size.cs.x},${size.cs.y})`, \"data-upset\": \"csaxis\" },\r\n            React.createElement(Axis, { scale: data.cs.y, orient: \"left\", size: size.cs.h, start: size.cs.h - data.cs.yAxisWidth, style: style }),\r\n            React.createElement(\"line\", { x1: 0, x2: size.cs.w, y1: size.cs.h + 1, y2: size.cs.h + 1, className: `axisLine-${style.id}` }),\r\n            React.createElement(\"text\", { className: clsx(`cChartTextStyle-${style.id}`, style.classNames.chartLabel), style: style.styles.chartLabel, transform: `translate(${-csNameOffset}, ${size.cs.h / 2})rotate(-90)` }, style.cs.name),\r\n            size.cs.addons.map((addon) => {\r\n                const pos = combinationPosGen(addon);\r\n                const title = (React.createElement(\"text\", { key: addon.name, className: clsx(`cChartTextStyle-${style.id}`, style.classNames.chartLabel), style: style.styles.chartLabel, transform: `translate(${-csNameOffset}, ${pos + addon.size / 2})rotate(-90)` }, addon.name));\r\n                if (!addon.scale) {\r\n                    return title;\r\n                }\r\n                return (React.createElement(React.Fragment, { key: addon.name },\r\n                    React.createElement(Axis, { scale: addon.scale, orient: \"left\", size: addon.size, start: 0, style: style, transform: `translate(0,${pos})` }),\r\n                    title));\r\n            }))),\r\n        size.sets.w > 0 && (React.createElement(\"g\", { transform: `translate(${size.sets.x},${size.sets.y})`, \"data-upset\": \"setaxis\" },\r\n            React.createElement(Axis, { scale: data.sets.x, orient: \"bottom\", size: size.sets.w, start: size.sets.w - data.sets.xAxisWidth, transform: `translate(0, ${size.sets.h})`, style: style }),\r\n            React.createElement(\"text\", { className: clsx(`sChartTextStyle-${style.id}`, style.classNames.chartLabel), style: style.styles.chartLabel, transform: `translate(${size.sets.w / 2}, ${size.sets.h + setNameOffset})` }, style.sets.name),\r\n            size.sets.addons.map((addon) => {\r\n                const pos = setPosGen(addon);\r\n                const title = (React.createElement(\"text\", { key: addon.name, className: clsx(`sChartTextStyle-${style.id}`, style.classNames.chartLabel), style: style.styles.chartLabel, transform: `translate(${pos + addon.size / 2}, ${size.sets.h + setNameOffset})` }, addon.name));\r\n                if (!addon.scale) {\r\n                    return title;\r\n                }\r\n                return (React.createElement(React.Fragment, { key: addon.name },\r\n                    React.createElement(Axis, { scale: addon.scale, orient: \"bottom\", size: addon.size, start: 0, transform: `translate(${pos}, ${size.sets.h})`, style: style }),\r\n                    title));\r\n            })))));\r\n});\n\n/**\r\n * @upsetjs/react\r\n * https://github.com/upsetjs/upsetjs\r\n *\r\n * Copyright (c) 2021 Samuel Gratzl <sam@sgratzl.com>\r\n */\r\nconst UpSetDot = /*!#__PURE__*/ React.memo(function UpSetDot({ cx, r, cy, name, className, style, fill, }) {\r\n    return (React.createElement(\"circle\", { r: r, cx: cx, cy: cy, className: className, style: mergeColor(style, fill) }, name && React.createElement(\"title\", null, name)));\r\n});\n\n/**\r\n * @upsetjs/react\r\n * https://github.com/upsetjs/upsetjs\r\n *\r\n * Copyright (c) 2021 Samuel Gratzl <sam@sgratzl.com>\r\n */\r\nfunction computeOverflowValues(value, max, scale) {\r\n    const scaled = [scale(value)];\r\n    for (let i = 0; i < OVERFLOW_PADDING_FACTOR.length && value > max; i++) {\r\n        value -= max;\r\n        scaled.push(scale(value));\r\n    }\r\n    return scaled;\r\n}\r\nconst CombinationChart = /*!#__PURE__*/ React.memo(function CombinationChart({ d, h, className, data, size, style, children, }) {\r\n    const yValues = computeOverflowValues(d.cardinality, data.cs.max, data.cs.y);\r\n    const genPosition = addonPositionGenerator(size.cs.h + size.sets.h, size.cs.addonPadding);\r\n    return (React.createElement(\"g\", { transform: `translate(${data.cs.x(d)}, 0)`, onMouseEnter: h.onMouseEnter(d, size.cs.addons), onMouseLeave: h.onMouseLeave, onClick: h.onClick(d, size.cs.addons), onContextMenu: h.onContextMenu(d, size.cs.addons), onMouseMove: h.onMouseMove(d, size.cs.addons), className: className, \"data-cardinality\": d.cardinality },\r\n        style.tooltips && (React.createElement(\"title\", null,\r\n            d.name,\r\n            \": \",\r\n            data.cs.format(d.cardinality))),\r\n        React.createElement(\"rect\", { y: -size.cs.before, width: data.cs.bandWidth, height: size.sets.h + size.cs.h + size.cs.before + size.cs.after, className: `hoverBar-${style.id}` }),\r\n        size.cs.h > 0 && (React.createElement(React.Fragment, null,\r\n            yValues.map((y, i) => {\r\n                const offset = i > 0 ? Math.floor(data.cs.bandWidth * OVERFLOW_PADDING_FACTOR[i - 1]) : 0;\r\n                return (React.createElement(\"rect\", { key: i, x: offset, y: y, height: size.cs.h - y, width: data.cs.bandWidth - offset * 2, className: clsx(`fillPrimary-${style.id}`, i < yValues.length - 1 && `fillOverflow${yValues.length - 1 - i}-${style.id}`, style.classNames.bar), style: mergeColor(style.styles.bar, d.color) }));\r\n            }),\r\n            React.createElement(\"text\", { y: yValues[0] - style.barLabelOffset, x: data.cs.bandWidth / 2, style: style.styles.barLabel, className: clsx(`cBarTextStyle-${style.id}`, style.classNames.barLabel) }, data.cs.format(d.cardinality)))),\r\n        React.createElement(\"text\", { y: -style.barLabelOffset - size.cs.before, x: data.cs.bandWidth / 2, style: style.styles.barLabel, className: clsx(`hoverBarTextStyle-${style.id}`, style.classNames.barLabel) }, d.name),\r\n        data.sets.v.map((s, i) => {\r\n            if (data.cs.has(d, s)) {\r\n                // only not\r\n                return null;\r\n            }\r\n            return (React.createElement(UpSetDot, { key: data.sets.keys[i], r: data.r, cx: data.cs.cx, cy: data.sets.y(s) + data.sets.cy, name: style.tooltips ? d.name : '', style: style.styles.dot, fill: undefined, className: clsx(`fillNotMember-${style.id}`, style.classNames.dot) }));\r\n        }),\r\n        d.sets.size > 1 && (React.createElement(\"line\", { x1: data.cs.cx, y1: data.sets.y(data.sets.v.find((p) => data.cs.has(d, p))) + data.sets.cy - (data.r - 1), x2: data.cs.cx, y2: data.sets.y(data.sets.rv.find((p) => data.cs.has(d, p))) + data.sets.cy + (data.r - 1), style: d.color ? { stroke: d.color } : undefined, className: `upsetLine-${data.id}` })),\r\n        data.sets.v.map((s, i) => {\r\n            var _a;\r\n            if (!data.cs.has(d, s)) {\r\n                // only has\r\n                return null;\r\n            }\r\n            return (React.createElement(UpSetDot, { key: data.sets.keys[i], r: data.r, cx: data.cs.cx, cy: data.sets.y(s) + data.sets.cy, name: style.tooltips ? s.name : '', style: style.styles.dot, fill: (_a = s.color) !== null && _a !== void 0 ? _a : d.color, className: clsx(`fillPrimary-${style.id}`, style.classNames.dot) }));\r\n        }),\r\n        size.cs.addons.map((addon) => (React.createElement(\"g\", { key: addon.name, transform: `translate(0,${genPosition(addon)})` }, addon.render({ set: d, width: data.cs.bandWidth, height: addon.size, theme: style.theme })))),\r\n        children));\r\n});\n\n/**\r\n * @upsetjs/react\r\n * https://github.com/upsetjs/upsetjs\r\n *\r\n * Copyright (c) 2021 Samuel Gratzl <sam@sgratzl.com>\r\n */\r\nconst SetChart = /*!#__PURE__*/ React.memo(function SetChart({ d, i, h, className, size, data, style, children, }) {\r\n    const xValues = computeOverflowValues(d.cardinality, data.sets.max, data.sets.x);\r\n    const genPosition = addonPositionGenerator(size.sets.w + size.labels.w + size.cs.w, size.sets.addonPadding);\r\n    const anchorOffset = style.setLabelAlignment === 'center'\r\n        ? size.labels.w / 2\r\n        : style.setLabelAlignment === 'left'\r\n            ? 2\r\n            : size.labels.w - 2;\r\n    return (React.createElement(\"g\", { transform: `translate(0, ${data.sets.y(d)})`, onMouseEnter: h.onMouseEnter(d, size.sets.addons), onMouseLeave: h.onMouseLeave, onClick: h.onClick(d, size.sets.addons), onContextMenu: h.onContextMenu(d, size.sets.addons), onMouseMove: h.onMouseMove(d, size.sets.addons), className: className, \"data-cardinality\": d.cardinality },\r\n        style.tooltips && (React.createElement(\"title\", null,\r\n            d.name,\r\n            \": \",\r\n            data.sets.format(d.cardinality))),\r\n        React.createElement(\"rect\", { x: -size.sets.before, width: size.sets.w + size.labels.w + size.cs.w + size.sets.after, height: data.sets.bandWidth, className: `hoverBar-${style.id}` }),\r\n        i % 2 === 1 && (React.createElement(\"rect\", { x: size.sets.w, width: size.labels.w + size.cs.w + size.sets.after, height: data.sets.bandWidth, className: `fillAlternating-${style.id}` })),\r\n        size.sets.w > 0 && (React.createElement(React.Fragment, null,\r\n            xValues.map((x, i) => {\r\n                const offset = i > 0 ? Math.floor(data.sets.bandWidth * OVERFLOW_PADDING_FACTOR[i - 1]) : 0;\r\n                return (React.createElement(\"rect\", { key: i, x: x, y: offset, width: size.sets.w - x, height: data.sets.bandWidth - offset * 2, className: clsx(`fillPrimary-${style.id}`, i < xValues.length - 1 && `fillOverflow${xValues.length - 1 - i}-${style.id}`, style.classNames.bar), style: mergeColor(style.styles.bar, d.color) }));\r\n            }),\r\n            React.createElement(\"text\", { x: xValues[0], dx: -style.barLabelOffset, y: data.sets.bandWidth / 2, style: style.styles.barLabel, className: clsx(`sBarTextStyle-${style.id}`, style.classNames.barLabel) }, data.sets.format(d.cardinality)))),\r\n        React.createElement(\"text\", { x: size.sets.w + anchorOffset, y: data.sets.bandWidth / 2, className: clsx(`setTextStyle-${style.id}`, style.classNames.setLabel), style: style.styles.setLabel, clipPath: `url(#clip-${size.id})` }, d.name),\r\n        size.sets.addons.map((addon) => (React.createElement(\"g\", { key: addon.name, transform: `translate(${genPosition(addon)},0)` }, addon.render({ set: d, width: addon.size, height: data.sets.bandWidth, theme: style.theme })))),\r\n        children));\r\n});\n\n/**\r\n * @upsetjs/react\r\n * https://github.com/upsetjs/upsetjs\r\n *\r\n * Copyright (c) 2021 Samuel Gratzl <sam@sgratzl.com>\r\n */\r\nconst UpSetChart = /*!#__PURE__*/ React.memo(function UpSetChart({ data, size, style, h, setChildrenFactory, combinationChildrenFactory, }) {\r\n    return (React.createElement(\"g\", { className: h.hasClick ? `clickAble-${style.id}` : undefined },\r\n        React.createElement(\"g\", { transform: `translate(${size.sets.x},${size.sets.y})`, \"data-upset\": \"sets\" }, data.sets.v.map((d, i) => (React.createElement(SetChart, { key: data.sets.keys[i], d: d, i: i, h: h, className: h.hasClick || h.hasHover ? `interactive-${style.id}` : undefined, data: data, style: style, size: size }, setChildrenFactory && setChildrenFactory(d))))),\r\n        React.createElement(\"g\", { transform: `translate(${size.cs.x},${size.cs.y})`, \"data-upset\": \"cs\" }, data.cs.v.map((d, i) => (React.createElement(CombinationChart, { key: data.cs.keys[i], d: d, h: h, className: h.hasClick || h.hasHover ? `interactive-${style.id}` : undefined, data: data, style: style, size: size }, combinationChildrenFactory && combinationChildrenFactory(d)))))));\r\n});\n\n/**\r\n * @upsetjs/react\r\n * https://github.com/upsetjs/upsetjs\r\n *\r\n * Copyright (c) 2021 Samuel Gratzl <sam@sgratzl.com>\r\n */\r\nfunction CombinationSelectionChart({ data, size, style, elemOverlap, secondary, tooltip, suffix, transform, empty, combinationAddons, }) {\r\n    const width = data.cs.bandWidth;\r\n    const totalHeight = size.cs.h + size.sets.h;\r\n    const height = size.cs.h;\r\n    const className = clsx(`fill${suffix}`, !tooltip && `pnone-${style.id}`, style.classNames.bar);\r\n    return (React.createElement(\"g\", { transform: transform, \"data-upset\": secondary ? 'cs-q' : 'cs-s' }, data.cs.v.map((d, i) => {\r\n        const x = data.cs.x(d);\r\n        const key = data.cs.keys[i];\r\n        if (empty && !secondary) {\r\n            return (React.createElement(\"rect\", { key: key, x: x, y: height, height: 0, width: width, className: className, style: mergeColor(style.styles.bar, !style.selectionColor ? d.color : undefined) }, tooltip && React.createElement(\"title\", null)));\r\n        }\r\n        const o = elemOverlap(d);\r\n        if (o === 0) {\r\n            return null;\r\n        }\r\n        const yValues = computeOverflowValues(o, data.cs.max, data.cs.y);\r\n        const title = tooltip && React.createElement(\"title\", null, `${d.name} ∩ ${tooltip}: ${o}`);\r\n        const content = secondary ? (React.createElement(\"path\", { key: key, transform: `translate(${x}, ${yValues[0]})`, d: `M0,-1 l${width},0 l0,2 l${-width},0 L-${data.triangleSize},-${data.triangleSize} L-${data.triangleSize},${data.triangleSize} Z`, className: className, \"data-i\": i, \"data-cardinality\": o, style: mergeColor(undefined, !style.selectionColor ? d.color : undefined) }, title)) : (yValues.map((y, j) => {\r\n            const offset = j > 0 ? Math.floor(data.cs.bandWidth * OVERFLOW_PADDING_FACTOR[j - 1]) : 0;\r\n            return (React.createElement(\"rect\", { key: j, x: x + offset, y: y, height: height - y, width: width - offset * 2, \"data-i\": j > 0 ? null : i, \"data-cardinality\": j > 0 ? null : o, className: clsx(className, j < yValues.length - 1 && `fillOverflow${yValues.length - 1 - j}-${style.id}`), style: mergeColor(style.styles.bar, !style.selectionColor ? d.color : undefined) }, title));\r\n        }));\r\n        const genPosition = addonPositionGenerator(totalHeight, size.cs.addonPadding);\r\n        const addons = combinationAddons\r\n            .map((addon) => {\r\n            const v = genPosition(addon);\r\n            const content = addon.render({ set: d, width, height: addon.size, theme: style.theme });\r\n            if (!content) {\r\n                return null;\r\n            }\r\n            return (React.createElement(\"g\", { key: addon.name, transform: `translate(${x},${v})` }, content));\r\n        })\r\n            .filter(Boolean);\r\n        if (addons.length === 0) {\r\n            return content;\r\n        }\r\n        return (React.createElement(\"g\", { key: key },\r\n            content,\r\n            addons));\r\n    })));\r\n}\n\n/**\r\n * @upsetjs/react\r\n * https://github.com/upsetjs/upsetjs\r\n *\r\n * Copyright (c) 2021 Samuel Gratzl <sam@sgratzl.com>\r\n */\r\nfunction SetSelectionChart({ data, size, style, elemOverlap, suffix, secondary, empty, tooltip, setAddons, transform, }) {\r\n    const width = size.sets.w;\r\n    const totalWidth = size.sets.w + size.labels.w + size.cs.w;\r\n    const height = data.sets.bandWidth;\r\n    const className = clsx(`fill${suffix}`, !tooltip && ` pnone-${style.id}`, style.classNames.bar);\r\n    return (React.createElement(\"g\", { transform: transform, \"data-upset\": secondary ? 'sets-q' : 'sets-s' }, data.sets.v.map((d, i) => {\r\n        const y = data.sets.y(d);\r\n        const key = data.sets.keys[i];\r\n        if (empty && !secondary) {\r\n            return (React.createElement(\"rect\", { key: key, x: width, y: y, width: 0, height: height, className: className, style: mergeColor(style.styles.bar, !style.selectionColor ? d.color : undefined) }, style.tooltips && tooltip && React.createElement(\"title\", null)));\r\n        }\r\n        const o = elemOverlap(d);\r\n        if (o === 0) {\r\n            return null;\r\n        }\r\n        const xValues = computeOverflowValues(o, data.sets.max, data.sets.x);\r\n        const title = style.tooltips && tooltip && React.createElement(\"title\", null, `${d.name} ∩ ${tooltip}: ${o}`);\r\n        const content = secondary ? (React.createElement(\"path\", { key: key, transform: `translate(${xValues[0]}, ${y + height})`, d: `M1,0 l0,${-height} l-2,0 l0,${height} L-${data.triangleSize},${data.triangleSize} L${data.triangleSize},${data.triangleSize} Z`, \"data-i\": i, \"data-cardinality\": o, className: className, style: mergeColor(undefined, !style.selectionColor ? d.color : undefined) }, title)) : (xValues.map((x, j) => {\r\n            const offset = j > 0 ? Math.floor(data.sets.bandWidth * OVERFLOW_PADDING_FACTOR[j - 1]) : 0;\r\n            return (React.createElement(\"rect\", { key: j, \"data-i\": j > 0 ? null : i, \"data-cardinality\": j > 0 ? null : o, x: x, y: y + offset, width: width - x, height: height - offset * 2, className: clsx(className, j < xValues.length - 1 && `fillOverflow${xValues.length - 1 - j}-${style.id}`), style: mergeColor(style.styles.bar, !style.selectionColor ? d.color : undefined) }, title));\r\n        }));\r\n        const genPosition = addonPositionGenerator(totalWidth, size.sets.addonPadding);\r\n        const addons = setAddons\r\n            .map((addon) => {\r\n            const v = genPosition(addon);\r\n            const content = addon.render({ set: d, width: addon.size, height, theme: style.theme });\r\n            if (!content) {\r\n                return null;\r\n            }\r\n            return (React.createElement(\"g\", { key: addon.name, transform: `translate(${v},${y})` }, content));\r\n        })\r\n            .filter(Boolean);\r\n        if (addons.length === 0) {\r\n            return content;\r\n        }\r\n        return (React.createElement(\"g\", { key: key },\r\n            content,\r\n            addons));\r\n    })));\r\n}\n\n/**\r\n * @upsetjs/react\r\n * https://github.com/upsetjs/upsetjs\r\n *\r\n * Copyright (c) 2021 Samuel Gratzl <sam@sgratzl.com>\r\n */\r\nconst EMPTY_ARRAY$1 = [];\r\nconst UpSetQueries = /*!#__PURE__*/ React.memo(function UpSetQueries({ size, data, style, hasHover, secondary, queries, }) {\r\n    const someAddon = size.sets.addons.some((s) => s.renderQuery != null) || size.cs.addons.some((s) => s.renderQuery != null);\r\n    const qs = useMemo(() => queries.map((q) => (Object.assign(Object.assign({}, q), { overlap: queryOverlap(q, 'intersection', data.toElemKey), elemOverlap: someAddon ? queryElemOverlap(q, 'intersection', data.toElemKey) : null }))), [queries, someAddon, data.toElemKey]);\r\n    function wrapAddon(addon, query, index, overlapper, secondary) {\r\n        return Object.assign(Object.assign({}, addon), { render: (props) => {\r\n                const overlap = overlapper(props.set);\r\n                return addon.renderQuery ? addon.renderQuery(Object.assign({ query, overlap, index, secondary }, props)) : null;\r\n            } });\r\n    }\r\n    return (React.createElement(\"g\", { className: hasHover && !secondary ? `pnone-${style.id}` : undefined },\r\n        React.createElement(\"g\", { transform: `translate(${size.sets.x},${size.sets.y})` }, qs.map((q, i) => (React.createElement(SetSelectionChart, { key: q.name, data: data, size: size, style: style, elemOverlap: q.overlap, suffix: `Q${i}-${data.id}`, secondary: secondary || i > 0, tooltip: hasHover && !(secondary || i > 0) ? undefined : q.name, setAddons: size.sets.addons.length === 0\r\n                ? EMPTY_ARRAY$1\r\n                : size.sets.addons.map((a, i) => wrapAddon(a, q, i, q.elemOverlap, secondary || i > 0)) })))),\r\n        React.createElement(\"g\", { transform: `translate(${size.cs.x},${size.cs.y})` }, qs.map((q, i) => (React.createElement(CombinationSelectionChart, { key: q.name, data: data, size: size, style: style, elemOverlap: q.overlap, suffix: `Q${i}-${data.id}`, secondary: secondary || i > 0, tooltip: hasHover && !(secondary || i > 0) ? undefined : q.name, combinationAddons: size.cs.addons.length === 0\r\n                ? EMPTY_ARRAY$1\r\n                : size.cs.addons.map((a, i) => wrapAddon(a, q, i, q.elemOverlap, secondary || i > 0)) }))))));\r\n});\n\n/**\r\n * @upsetjs/react\r\n * https://github.com/upsetjs/upsetjs\r\n *\r\n * Copyright (c) 2021 Samuel Gratzl <sam@sgratzl.com>\r\n */\r\nfunction LabelsSelection({ data, size, style, selection, }) {\r\n    if (!selection || selection.type !== 'set' || !data.sets.keys.includes(data.toKey(selection))) {\r\n        return null;\r\n    }\r\n    const d = selection;\r\n    return (React.createElement(\"rect\", { y: data.sets.y(d), width: size.labels.w + size.cs.w + size.sets.after, height: data.sets.bandWidth, className: `selectionHint-${style.id}` }));\r\n}\n\n/**\r\n * @upsetjs/react\r\n * https://github.com/upsetjs/upsetjs\r\n *\r\n * Copyright (c) 2021 Samuel Gratzl <sam@sgratzl.com>\r\n */\r\nfunction UpSetSelectionChart({ data, size, style, selection, }) {\r\n    const cy = data.sets.bandWidth / 2;\r\n    const cx = data.cs.cx;\r\n    const r = data.r;\r\n    const height = size.sets.h + size.sets.after;\r\n    const width = data.cs.bandWidth;\r\n    if (!selection || selection.type === 'set' || !data.cs) {\r\n        return null;\r\n    }\r\n    const d = selection;\r\n    const index = data.cs.keys.indexOf(data.toKey(d));\r\n    if (index < 0) {\r\n        return null;\r\n    }\r\n    return (React.createElement(\"g\", { transform: `translate(${size.labels.w + data.cs.x(d)}, 0)`, \"data-upset\": \"cs-ss\", \"data-i\": index },\r\n        React.createElement(\"rect\", { width: width, height: height, className: `selectionHint-${style.id}` }),\r\n        d.sets.size > 1 && (React.createElement(\"line\", { x1: cx, y1: data.sets.y(data.sets.v.find((p) => data.cs.has(d, p))) + cy - (data.r - 1), x2: cx, y2: data.sets.y(data.sets.rv.find((p) => data.cs.has(d, p))) + cy + (data.r - 1), className: `upsetSelectionLine-${data.id}`, style: mergeColor(undefined, !style.selectionColor ? d.color : undefined, 'stroke') })),\r\n        data.sets.v\r\n            .filter((s) => data.cs.has(d, s))\r\n            .map((s) => (React.createElement(UpSetDot, { key: data.toKey(s), r: r * 1.1, cx: cx, cy: data.sets.y(s) + cy, name: style.tooltips ? s.name : '', className: clsx(`fillSelection-${style.id}`, `pnone-${style.id}`, style.classNames.dot), style: mergeColor(style.styles.dot, !style.selectionColor ? s.color : undefined) })))));\r\n}\n\n/**\r\n * @upsetjs/react\r\n * https://github.com/upsetjs/upsetjs\r\n *\r\n * Copyright (c) 2021 Samuel Gratzl <sam@sgratzl.com>\r\n */\r\nconst EMPTY_ARRAY = [];\r\nfunction UpSetSelection({ size, data, style, selection, hasHover, }) {\r\n    const empty = style.emptySelection;\r\n    const selectionOverlap = generateSelectionOverlap(selection, data.overlapGuesser, data.toElemKey);\r\n    const selectionName = generateSelectionName(selection);\r\n    const someAddon = size.sets.addons.some((s) => s.renderSelection != null) || size.cs.addons.some((s) => s.renderSelection != null);\r\n    const selectionElemOverlap = selection && typeof selection !== 'function' && someAddon\r\n        ? elemElemOverlapOf(Array.isArray(selection) ? selection : selection.elems, data.toElemKey)\r\n        : null;\r\n    function wrapAddon(addon) {\r\n        return Object.assign(Object.assign({}, addon), { render: (props) => {\r\n                const overlap = selectionElemOverlap ? selectionElemOverlap(props.set) : null;\r\n                return addon.renderSelection\r\n                    ? addon.renderSelection(Object.assign({ selection, selectionColor: style.selectionColor || props.set.color || 'orange', overlap }, props))\r\n                    : null;\r\n            } });\r\n    }\r\n    return (React.createElement(\"g\", { className: hasHover ? `pnone-${style.id}` : undefined },\r\n        (selection || empty) && (React.createElement(CombinationSelectionChart, { data: data, size: size, style: style, transform: `translate(${size.cs.x},${size.cs.y})`, empty: empty && !selection, elemOverlap: selectionOverlap, suffix: `Selection-${style.id}`, tooltip: hasHover ? undefined : selectionName, combinationAddons: size.cs.addons.length === 0 ? EMPTY_ARRAY : size.cs.addons.map(wrapAddon) })),\r\n        (selection || empty) && (React.createElement(SetSelectionChart, { data: data, size: size, style: style, transform: `translate(${size.sets.x},${size.sets.y})`, empty: empty && !selection, elemOverlap: selectionOverlap, suffix: `Selection-${style.id}`, tooltip: hasHover ? undefined : selectionName, setAddons: size.sets.addons.length === 0 ? EMPTY_ARRAY : size.sets.addons.map(wrapAddon) })),\r\n        React.createElement(\"g\", { transform: `translate(${size.labels.x},${size.labels.y})` },\r\n            isSetLike(selection) && React.createElement(LabelsSelection, { data: data, size: size, style: style, selection: selection }),\r\n            isSetLike(selection) && React.createElement(UpSetSelectionChart, { data: data, size: size, style: style, selection: selection }))));\r\n}\n\nfunction propRule(value, prop = 'font-size') {\r\n    return value ? `${prop}: ${value};` : '';\r\n}\r\nfunction baseRules(styleId, theme, fontFamily, fontSizes) {\r\n    const hasS = [];\r\n    if (theme.hasSelectionColor) {\r\n        hasS.push(`fill: ${theme.hasSelectionColor};`);\r\n    }\r\n    const hasSelectionOpacity = theme.hasSelectionOpacity != null && theme.hasSelectionOpacity >= 0;\r\n    if (hasSelectionOpacity) {\r\n        hasS.push(`fill-opacity: ${theme.hasSelectionOpacity};`);\r\n    }\r\n    return {\r\n        p: propRule,\r\n        root: `\n  .root-${styleId} {\n    ${propRule(fontFamily, 'font-family')}\n  }\n  `,\r\n        text: `\n  .titleTextStyle-${styleId} {\n    fill: ${theme.textColor};\n    ${propRule(fontSizes.title)}\n  }\n  .descTextStyle-${styleId} {\n    fill: ${theme.textColor};\n    ${propRule(fontSizes.description)}\n  }\n\n  .legendTextStyle-${styleId} {\n    fill: ${theme.textColor};\n    ${propRule(fontSizes.legend)}\n    text-anchor: middle;\n    dominant-baseline: hanging;\n    pointer-events: none;\n  }\n  `,\r\n        hasSFill: hasS.join(' '),\r\n        hasSStroke: hasS.join(' ').replace('fill:', 'stroke:').replace('fill-', 'stroke-'),\r\n        fill: `\n  .fillPrimary-${styleId} { fill: ${theme.color}; fill-opacity: ${theme.opacity}; }\n  .fillOverflow1-${styleId} { fill-opacity: ${theme.opacity * OVERFLOW_OPACITY_FACTOR[0]}; }\n  .fillOverflow2-${styleId} { fill-opacity: ${theme.opacity * OVERFLOW_OPACITY_FACTOR[1]}; }\n  ${hasS.length > 0 ? `.root-${styleId}[data-selection] .fillPrimary-${styleId} { ${hasS.join(' ')} }` : ''}\n  ${hasSelectionOpacity\r\n            ? `\n      .root-${styleId}[data-selection] .fillOverflow1-${styleId} { fill-opacity: ${theme.opacity * OVERFLOW_OPACITY_FACTOR[0]}; }\n      .root-${styleId}[data-selection] .fillOverflow2-${styleId} { fill-opacity: ${theme.opacity * OVERFLOW_OPACITY_FACTOR[1]}; }`\r\n            : ''}\n  ${theme.selectionColor ? `.fillSelection-${styleId} { fill: ${theme.selectionColor}; }` : ''}\n  .fillTransparent-${styleId} { fill: transparent; }\n\n  .selectionHint-${styleId} {\n    fill: transparent;\n    pointer-events: none;\n    ${propRule(theme.selectionColor, 'stroke')}\n  }\n  .clickAble-${styleId} {\n    cursor: pointer;\n  }\n\n  .startText-${styleId} {\n    text-anchor: start;\n  }\n  .endText-${styleId} {\n    text-anchor: end;\n  }\n  .pnone-${styleId} {\n    pointer-events: none;\n  }`,\r\n        export: `\n  .exportTextStyle-${styleId} {\n    fill: ${theme.textColor};\n    ${propRule(fontSizes.exportLabel)}\n  }\n  .exportButtons-${styleId} {\n    text-anchor: middle;\n  }\n  .exportButton-${styleId} {\n    cursor: pointer;\n    opacity: 0.5;\n  }\n  .exportButton-${styleId}:hover {\n    opacity: 1;\n  }\n  .exportButton-${styleId} > rect {\n    fill: none;\n    stroke: ${theme.textColor};\n  }\n  `,\r\n    };\r\n}\n\nfunction useHandler(p) {\r\n    const onClick = p.onClick;\r\n    return useMemo(() => ({\r\n        hasClick: onClick != null,\r\n        hasHover: p.onHover != null,\r\n        onClick: wrap(onClick),\r\n        onMouseEnter: wrap(p.onHover),\r\n        onContextMenu: wrap(p.onContextMenu),\r\n        onMouseLeave: p.onHover ? (evt) => p.onHover(null, evt.nativeEvent, []) : undefined,\r\n        onMouseMove: wrap(p.onMouseMove),\r\n        reset: (evt) => (onClick ? onClick(null, evt.nativeEvent, []) : null),\r\n    }), [onClick, p.onHover, p.onContextMenu, p.onMouseMove]);\r\n}\n\n/**\r\n * @upsetjs/react\r\n * https://github.com/upsetjs/upsetjs\r\n *\r\n * Copyright (c) 2021 Samuel Gratzl <sam@sgratzl.com>\r\n */\r\n/**\r\n * UpSetJS main pure functional stateless React component, the generic argument T refers to the type of the elements\r\n *\r\n * with React.forwardRef support to specify a reference to the SVG element\r\n */\r\nconst UpSetJS = /*!#__PURE__*/ React.forwardRef(function UpSetJS(props, ref) {\r\n    var _a;\r\n    const p = fillDefaults(props);\r\n    const { selection = null, queries = [], fontSizes } = p;\r\n    // generate a \"random\" but attribute stable id to avoid styling conflicts\r\n    const styleId = useMemo(() => p.id\r\n        ? p.id\r\n        : generateId([\r\n            p.fontFamily,\r\n            fontSizes.axisTick,\r\n            fontSizes.barLabel,\r\n            fontSizes.chartLabel,\r\n            fontSizes.legend,\r\n            fontSizes.setLabel,\r\n            fontSizes.title,\r\n            fontSizes.exportLabel,\r\n            fontSizes.description,\r\n            p.textColor,\r\n            p.hoverHintColor,\r\n            p.color,\r\n            p.hasSelectionColor,\r\n            p.selectionColor,\r\n            p.notMemberColor,\r\n            p.alternatingBackgroundColor,\r\n            p.opacity,\r\n            p.hasSelectionOpacity,\r\n        ]), [\r\n        p.id,\r\n        p.fontFamily,\r\n        fontSizes.axisTick,\r\n        fontSizes.barLabel,\r\n        fontSizes.chartLabel,\r\n        fontSizes.legend,\r\n        fontSizes.setLabel,\r\n        fontSizes.title,\r\n        fontSizes.exportLabel,\r\n        fontSizes.description,\r\n        p.textColor,\r\n        p.hoverHintColor,\r\n        p.color,\r\n        p.hasSelectionColor,\r\n        p.selectionColor,\r\n        p.notMemberColor,\r\n        p.alternatingBackgroundColor,\r\n        p.opacity,\r\n        p.hasSelectionOpacity,\r\n    ]);\r\n    const styleInfo = useMemo(() => deriveStyleDependent$1(p.theme, p.styles, p.classNames, p.combinationName, p.combinationNameAxisOffset, p.setName, p.setNameAxisOffset, styleId, p.barLabelOffset, p.selectionColor, p.emptySelection, p.title, p.description, p.tooltips, p.setLabelAlignment), [\r\n        p.theme,\r\n        p.styles,\r\n        p.classNames,\r\n        p.barLabelOffset,\r\n        p.combinationName,\r\n        p.combinationNameAxisOffset,\r\n        p.setName,\r\n        p.setNameAxisOffset,\r\n        styleId,\r\n        p.selectionColor,\r\n        p.emptySelection,\r\n        p.title,\r\n        p.description,\r\n        p.tooltips,\r\n        p.setLabelAlignment,\r\n    ]);\r\n    const sizeInfo = useMemo(() => deriveSizeDependent(p.width, p.height, p.padding, p.barPadding, p.widthRatios, p.heightRatios, p.setAddons, p.combinationAddons, p.id, p.setAddonPadding, p.combinationAddonPadding), [\r\n        p.width,\r\n        p.height,\r\n        p.padding,\r\n        p.barPadding,\r\n        p.widthRatios,\r\n        p.heightRatios,\r\n        p.setAddons,\r\n        p.combinationAddons,\r\n        p.id,\r\n        p.setAddonPadding,\r\n        p.combinationAddonPadding,\r\n    ]);\r\n    const dataInfo = useMemo(() => deriveDataDependent(p.sets, p.combinations, sizeInfo, p.numericScale, p.bandScale, p.barLabelOffset + parseFontSize(fontSizes.barLabel), p.dotPadding, p.barPadding, parseFontSize(fontSizes.axisTick), p.combinationAddons, p.toKey, p.toElemKey, p.id, p.setMaxScale, p.combinationMaxScale), [\r\n        p.sets,\r\n        p.combinations,\r\n        sizeInfo,\r\n        p.numericScale,\r\n        p.bandScale,\r\n        p.barLabelOffset,\r\n        fontSizes.barLabel,\r\n        p.dotPadding,\r\n        p.barPadding,\r\n        fontSizes.axisTick,\r\n        p.combinationAddons,\r\n        p.toKey,\r\n        p.toElemKey,\r\n        p.id,\r\n        p.setMaxScale,\r\n        p.combinationMaxScale,\r\n    ]);\r\n    const rulesHelper = baseRules(styleId, p, p.fontFamily, fontSizes);\r\n    const h = useHandler(p);\r\n    const rules = `\n  ${rulesHelper.root}\n  ${rulesHelper.text}\n\n  .axisTextStyle-${styleId} {\n    fill: ${p.textColor};\n    ${rulesHelper.p(fontSizes.axisTick)}\n    text-anchor: middle;\n  }\n  .barTextStyle-${styleId} {\n    fill: ${p.textColor};\n    ${rulesHelper.p(fontSizes.barLabel)}\n  }\n  .cBarTextStyle-${styleId} {\n    fill: ${p.textColor};\n    ${rulesHelper.p(fontSizes.barLabel)}\n    text-anchor: middle;\n  }\n  .sBarTextStyle-${styleId} {\n    fill: ${p.textColor};\n    ${rulesHelper.p(fontSizes.barLabel)}\n    text-anchor: end;\n    dominant-baseline: central;\n  }\n  .hoverBarTextStyle-${styleId} {\n    ${rulesHelper.p(fontSizes.barLabel)}\n    fill: ${p.hoverHintColor};\n    display: none;\n    text-anchor: middle;\n  }\n  .setTextStyle-${styleId} {\n    fill: ${p.textColor};\n    ${rulesHelper.p(fontSizes.setLabel)}\n    text-anchor: ${toAnchor(p.setLabelAlignment)};\n    dominant-baseline: central;\n  }\n  .cChartTextStyle-${styleId} {\n    fill: ${p.textColor};\n    ${rulesHelper.p(fontSizes.chartLabel)}\n    text-anchor: middle;\n  }\n  .sChartTextStyle-${styleId} {\n    fill: ${p.textColor};\n    ${rulesHelper.p(fontSizes.chartLabel)}\n    text-anchor: middle;\n    dominant-baseline: hanging;\n  }\n\n  ${rulesHelper.fill}\n  .fillNotMember-${styleId} { fill: ${p.notMemberColor}; }\n  .fillAlternating-${styleId} { fill: ${p.alternatingBackgroundColor || 'transparent'}; }\n\n  .axisLine-${styleId} {\n    fill: none;\n    stroke: ${p.textColor};\n  }\n  .hoverBar-${styleId} {\n    fill: transparent;\n  }\n\n  .interactive-${styleId}:hover > .hoverBar-${styleId} {\n    stroke: ${p.hoverHintColor};\n  }\n  .interactive-${styleId}:hover > .hoverBarTextStyle-${styleId} {\n    display: unset;\n  }\n\n  ${rulesHelper.export}\n\n  .upsetLine-${dataInfo.id} {\n    stroke-width: ${dataInfo.r * 0.6};\n    stroke: ${p.color};\n    stroke-opacity: ${p.opacity};\n  }\n  ${rulesHelper.hasSStroke\r\n        ? `.root-${styleId}[data-selection] .upsetLine-${dataInfo.id} { ${rulesHelper.hasSStroke} }`\r\n        : ''}\n\n  .upsetSelectionLine-${dataInfo.id} {\n    stroke-width: ${dataInfo.r * 0.6 * 1.1};\n    ${rulesHelper.p(p.selectionColor, 'stroke')}\n    pointer-events: none;\n  }\n\n  ${queries\r\n        .map((q, i) => `.fillQ${i}-${dataInfo.id} {\n    fill: ${q.color};\n  }`)\r\n        .join('\\n')}\n  `;\r\n    const exportChart = useCallback((evt) => {\r\n        const svg = evt.currentTarget.closest('svg');\r\n        const type = (evt.currentTarget.dataset.type || 'png');\r\n        switch (type) {\r\n            case 'vega':\r\n                exportVegaLite(svg);\r\n                break;\r\n            case 'dump':\r\n                exportDump(svg, props, dataInfo);\r\n                break;\r\n            case 'share':\r\n                exportSharedLink(props, dataInfo);\r\n                break;\r\n            case 'svg':\r\n            case 'png':\r\n                exportSVG(svg, {\r\n                    type,\r\n                    toRemove: `.${evt.currentTarget.getAttribute('class')}`,\r\n                });\r\n        }\r\n    }, [dataInfo, props]);\r\n    const selectionName = generateSelectionName(selection);\r\n    return (React.createElement(\"svg\", { id: p.id, className: clsx(`root-${styleId}`, p.className), style: p.style, width: p.width, height: p.height, ref: ref, viewBox: `0 0 ${p.width} ${p.height}`, \"data-theme\": (_a = p.theme) !== null && _a !== void 0 ? _a : 'light', \"data-selection\": selectionName ? selectionName : undefined },\r\n        p.styleFactory(rules),\r\n        React.createElement(\"defs\", null,\r\n            React.createElement(\"clipPath\", { id: `clip-${sizeInfo.id}` },\r\n                React.createElement(\"rect\", { x: sizeInfo.sets.w, y: 0, width: sizeInfo.labels.w, height: sizeInfo.sets.h }))),\r\n        p.queryLegend && React.createElement(QueryLegend, { queries: queries, x: sizeInfo.legend.x, style: styleInfo, data: dataInfo }),\r\n        React.createElement(ExportButtons, { transform: `translate(${sizeInfo.w - 2},${sizeInfo.h - 3})`, styleId: styleId, exportButtons: p.exportButtons, exportChart: exportChart }),\r\n        React.createElement(\"g\", { transform: `translate(${p.padding},${p.padding})`, \"data-upset\": \"base\" },\r\n            p.onClick && (React.createElement(\"rect\", { width: sizeInfo.cs.x, height: sizeInfo.sets.y, onClick: h.reset, className: `fillTransparent-${styleId}` })),\r\n            React.createElement(UpSetAxis, { size: sizeInfo, style: styleInfo, data: dataInfo }),\r\n            React.createElement(UpSetChart, { size: sizeInfo, style: styleInfo, data: dataInfo, h: h, setChildrenFactory: p.setChildrenFactory, combinationChildrenFactory: p.combinationChildrenFactory }),\r\n            React.createElement(UpSetSelection, { size: sizeInfo, style: styleInfo, data: dataInfo, hasHover: h.hasHover, selection: selection }),\r\n            React.createElement(UpSetQueries, { size: sizeInfo, style: styleInfo, data: dataInfo, hasHover: h.hasHover, queries: queries, secondary: p.onHover != null || selection != null })),\r\n        props.children));\r\n});\n\nfunction SVGWrapper({ rules, style, size, p, data, tRef, children, exportChart, selectionName, h, }) {\r\n    var _a, _b;\r\n    return (React.createElement(\"svg\", { id: p.id, className: clsx(`root-${style.id}`, p.className), style: p.style, width: p.width, height: p.height, ref: tRef, viewBox: `0 0 ${p.width} ${p.height}`, \"data-theme\": (_a = p.theme) !== null && _a !== void 0 ? _a : 'light', \"data-selection\": selectionName ? selectionName : undefined },\r\n        p.styleFactory(rules),\r\n        p.onClick && React.createElement(\"rect\", { width: size.w, height: size.h, onClick: h.reset, className: `fillTransparent-${style.id}` }),\r\n        p.queryLegend && React.createElement(QueryLegend, { queries: (_b = p.queries) !== null && _b !== void 0 ? _b : [], x: size.legend.x, style: style, data: data }),\r\n        React.createElement(ExportButtons, { transform: `translate(${size.w - 2},${size.h - 3})`, styleId: style.id, exportButtons: p.exportButtons, exportChart: exportChart }),\r\n        React.createElement(\"g\", { transform: `translate(${p.padding},${p.padding})`, \"data-upset\": \"base\" }, children),\r\n        p.children));\r\n}\n\n/**\r\n * @upsetjs/react\r\n * https://github.com/upsetjs/upsetjs\r\n *\r\n * Copyright (c) 2021 Samuel Gratzl <sam@sgratzl.com>\r\n */\r\nfunction generateArcSlicePath(s, refs, p = 0) {\r\n    if (s.path) {\r\n        return s.path;\r\n    }\r\n    return `M ${s.x1 - p},${s.y1 - p} ${s.arcs\r\n        .map((arc) => {\r\n        const ref = refs[arc.ref].l;\r\n        const rx = isEllipse(ref) ? ref.rx : ref.r;\r\n        const ry = isEllipse(ref) ? ref.ry : ref.r;\r\n        const rot = isEllipse(ref) ? ref.rotation : 0;\r\n        return `A ${rx - p} ${ry - p} ${rot} ${arc.large ? 1 : 0} ${arc.sweep ? 1 : 0} ${arc.x2 - p} ${arc.y2 - p}`;\r\n    })\r\n        .join(' ')}`;\r\n}\n\nfunction SelectionPattern(p) {\r\n    var _a;\r\n    if (p.v >= 1 || p.v <= 0) {\r\n        return null;\r\n    }\r\n    const ratio = Math.round(p.v * 10.0) / 100;\r\n    return (React.createElement(\"defs\", null,\r\n        React.createElement(\"pattern\", { id: p.id, width: \"1\", height: \"0.1\", patternContentUnits: \"objectBoundingBox\", patternTransform: `rotate(${(_a = p.rotate) !== null && _a !== void 0 ? _a : 0})` },\r\n            p.bgFilled && (React.createElement(\"rect\", { x: \"0\", y: \"0\", width: \"1\", height: \"0.1\", style: { fill: p.bgFill }, className: `fillPrimary-${p.styleId}` })),\r\n            React.createElement(\"rect\", { x: \"0\", y: \"0\", width: \"1\", height: ratio, className: `fill${p.suffix}`, style: p.fill ? { fill: p.fill } : undefined }))));\r\n}\n\n/**\r\n * @upsetjs/react\r\n * https://github.com/upsetjs/upsetjs\r\n *\r\n * Copyright (c) 2021 Samuel Gratzl <sam@sgratzl.com>\r\n */\r\nfunction sliceRotate(slice, center) {\r\n    if (slice.text.x === center.cx) {\r\n        return 0;\r\n    }\r\n    if (slice.text.x > center.cx) {\r\n        return slice.text.y <= center.cy ? 60 : -60;\r\n    }\r\n    return slice.text.y <= center.cy ? -60 : 60;\r\n}\r\nfunction generateTitle(d, s, sName, secondary, qs, queries, data, cx) {\r\n    const dc = data.format(d.cardinality);\r\n    const baseName = !sName ? d.name : `${d.name} ∩ ${sName}`;\r\n    const baseCardinality = !sName ? dc : `${data.format(s)}/${dc}`;\r\n    if (qs.length === 0) {\r\n        return {\r\n            tooltip: `${baseName}: ${baseCardinality}`,\r\n            title: d.type === 'set' ? (React.createElement(React.Fragment, null,\r\n                React.createElement(\"tspan\", { dy: \"-0.6em\" }, d.name),\r\n                React.createElement(\"tspan\", { x: cx, dy: \"1.2em\" }, baseCardinality))) : (baseCardinality),\r\n        };\r\n    }\r\n    if (qs.length === 1 && !secondary && !sName) {\r\n        return {\r\n            tooltip: `${d.name} ∩ ${queries[0].name}: ${data.format(qs[0])}/${dc}`,\r\n            title: d.type === 'set' ? (React.createElement(React.Fragment, null,\r\n                React.createElement(\"tspan\", { dy: \"-0.6em\" }, d.name),\r\n                React.createElement(\"tspan\", { x: cx, dy: \"1.2em\" }, `${data.format(qs[0])}/${dc}`))) : (`${data.format(qs[0])}/${dc}`),\r\n        };\r\n    }\r\n    const queryLine = (React.createElement(\"tspan\", { x: cx, dy: \"1.2em\" }, queries.map((q, i) => (React.createElement(React.Fragment, { key: q.name },\r\n        React.createElement(\"tspan\", { className: `fillQ${i}-${data.id}` }, '⬤'),\r\n        React.createElement(\"tspan\", null, ` ${data.format(qs[i])}/${dc}${i < queries.length - 1 ? ' ' : ''}`))))));\r\n    return {\r\n        tooltip: `${baseName}: ${baseCardinality}\\n${queries\r\n            .map((q, i) => `${d.name} ∩ ${q.name}: ${data.format(qs[i])}/${dc}`)\r\n            .join('\\n')}`,\r\n        title: d.type === 'set' ? (React.createElement(React.Fragment, null,\r\n            React.createElement(\"tspan\", { dy: \"-1.2em\" }, d.name),\r\n            React.createElement(\"tspan\", { x: cx, dy: \"1.2em\" }, baseCardinality),\r\n            queryLine)) : (React.createElement(React.Fragment, null,\r\n            React.createElement(\"tspan\", { dy: \"-0.6em\" }, baseCardinality),\r\n            queryLine)),\r\n    };\r\n}\r\nfunction VennArcSliceSelection({ slice, d, i, data, style, elemOverlap, selected, selectionName, h, queries, size, fill, qs, }) {\r\n    const p = generateArcSlicePath(slice, data.sets.d);\r\n    const rotate = sliceRotate(slice, size.area);\r\n    const o = elemOverlap ? elemOverlap(d) : 0;\r\n    const fillFullSelection = (o === d.cardinality && d.cardinality > 0) || selected;\r\n    const className = clsx(`arc-${style.id}`, o === 0 && !selected && `${fill ? 'fillPrimary' : 'arcP'}-${style.id}`, fillFullSelection && `fillSelection-${style.id}`, style.classNames.set);\r\n    const id = `upset-${style.id}-${i}`;\r\n    const secondary = elemOverlap != null || h.onMouseLeave != null;\r\n    const qsOverlaps = qs.map((q) => q(d));\r\n    const { title, tooltip } = generateTitle(d, o, selectionName, secondary, qsOverlaps, queries, data, slice.text.x);\r\n    return (React.createElement(\"g\", null,\r\n        React.createElement(SelectionPattern, { id: id, v: o === 0 ? 0 : o / d.cardinality, suffix: `Selection-${style.id}`, rotate: rotate, bgFill: d.color, bgFilled: d.color != null || fill, fill: !style.selectionColor ? d.color : undefined, styleId: style.id }),\r\n        React.createElement(\"path\", { onMouseEnter: h.onMouseEnter(d, []), onMouseLeave: h.onMouseLeave, onClick: h.onClick(d, []), onContextMenu: h.onContextMenu(d, []), onMouseMove: h.onMouseMove(d, []), d: p, className: className, style: mergeColor(style.styles.set, o > 0 && o < d.cardinality ? `url(#${id})` : !fillFullSelection || !style.selectionColor ? d.color : undefined) }, style.tooltips && React.createElement(\"title\", null, tooltip)),\r\n        React.createElement(\"text\", { x: slice.text.x, y: slice.text.y, className: clsx(`${d.type === 'set' ? 'set' : 'value'}TextStyle-${style.id}`, `pnone-${style.id}`, d.type === 'set' ? style.classNames.setLabel : style.classNames.valueLabel\r\n            // circle.align === 'left' && `startText-${style.id}`,\r\n            // circle.align === 'right' && `endText-${style.id}`\r\n            ) }, title)));\r\n}\n\n/**\r\n * @upsetjs/react\r\n * https://github.com/upsetjs/upsetjs\r\n *\r\n * Copyright (c) 2021 Samuel Gratzl <sam@sgratzl.com>\r\n */\r\nfunction deriveVennDataDependent(sets, combinations, size, layout, format, toKey, toElemKey, id, setLabelOffsets) {\r\n    const ss = sets.length > layout.maxSets ? sets.slice(0, layout.maxSets) : sets;\r\n    const { cs, setKeys, csKeys } = calculateCombinations(ss, toKey, combinations);\r\n    const l = layout.compute(ss, cs, size.area.w, size.area.h);\r\n    return {\r\n        id: id ? id : generateId(),\r\n        sets: {\r\n            d: l.sets.map((l, i) => ({\r\n                v: ss[i],\r\n                l,\r\n                key: setKeys[i],\r\n                offset: setLabelOffsets != null && i < setLabelOffsets.length ? setLabelOffsets[i] : { x: 0, y: 0 },\r\n            })),\r\n            v: ss,\r\n            format,\r\n        },\r\n        format,\r\n        cs: {\r\n            d: l.intersections.map((l, i) => ({ v: cs[i], l, key: csKeys[i] })),\r\n            v: cs,\r\n            has: (v, s) => {\r\n                const sk = toKey(s);\r\n                return Array.from(v.sets).some((ss) => toKey(ss) === sk);\r\n            },\r\n        },\r\n        toKey,\r\n        toElemKey,\r\n        overlapGuesser: generateDistinctOverlapFunction(cs, noGuessPossible, toKey),\r\n    };\r\n}\r\nfunction calculateCombinations(ss, toKey, combinations, options = { min: 1 }) {\r\n    const setKeys = ss.map(toKey);\r\n    let cs = [];\r\n    if (areCombinations(combinations)) {\r\n        const given = new Map(combinations.map((c) => [Array.from(c.sets).map(toKey).sort().join('#'), c]));\r\n        const helperSets = ss.map((s) => ({\r\n            type: 'set',\r\n            cardinality: 0,\r\n            elems: [],\r\n            name: s.name,\r\n            s,\r\n        }));\r\n        // generate dummy ones and map to given data\r\n        cs = generateCombinations(helperSets, Object.assign({\r\n            type: 'distinctIntersection',\r\n            empty: true,\r\n            order: ['degree:asc', 'group:asc'],\r\n        }, options)).map((c) => {\r\n            const key = Array.from(c.sets)\r\n                .map((s) => toKey(s.s))\r\n                .sort()\r\n                .join('#');\r\n            if (given.has(key)) {\r\n                return given.get(key);\r\n            }\r\n            // generate a dummy one\r\n            return {\r\n                name: c.name,\r\n                cardinality: 0,\r\n                degree: c.degree,\r\n                elems: [],\r\n                sets: new Set(Array.from(c.sets).map((s) => s.s)),\r\n                type: 'distinctIntersection',\r\n            };\r\n        });\r\n    }\r\n    else {\r\n        cs = generateCombinations(ss, Object.assign({\r\n            type: 'distinctIntersection',\r\n            empty: true,\r\n            order: ['degree:asc', 'group:asc'],\r\n        }, options, combinations !== null && combinations !== void 0 ? combinations : {}));\r\n    }\r\n    const csKeys = cs.map(toKey);\r\n    return { cs, setKeys, csKeys };\r\n}\n\n/**\r\n * @upsetjs/react\r\n * https://github.com/upsetjs/upsetjs\r\n *\r\n * Copyright (c) 2021 Samuel Gratzl <sam@sgratzl.com>\r\n */\r\nfunction deriveVennSizeDependent(width, height, margin, id) {\r\n    const h = height - 2 * margin;\r\n    const w = width - 2 * margin;\r\n    const r = Math.min(w, h) / 2;\r\n    return {\r\n        id: id ? id : generateId(),\r\n        legend: {\r\n            x: width / 2,\r\n        },\r\n        area: {\r\n            w,\r\n            h,\r\n            cx: w / 2,\r\n            cy: h / 2,\r\n            r,\r\n        },\r\n        margin: margin,\r\n        w: width,\r\n        h: height,\r\n    };\r\n}\n\n/**\r\n * @upsetjs/react\r\n * https://github.com/upsetjs/upsetjs\r\n *\r\n * Copyright (c) 2021 Samuel Gratzl <sam@sgratzl.com>\r\n */\r\nfunction deriveVennStyleDependent(theme, styles, classNames, styleId, selectionColor, title, description, tooltips) {\r\n    return {\r\n        theme,\r\n        styles,\r\n        classNames: classNames,\r\n        id: styleId,\r\n        selectionColor,\r\n        title,\r\n        description,\r\n        tooltips,\r\n    };\r\n}\n\n/**\r\n * @upsetjs/react\r\n * https://github.com/upsetjs/upsetjs\r\n *\r\n * Copyright (c) 2021 Samuel Gratzl <sam@sgratzl.com>\r\n */\r\nfunction useCreateCommon(p) {\r\n    const { queries = [], fontSizes } = p;\r\n    // generate a \"random\" but attribute stable id to avoid styling conflicts\r\n    const styleId = useMemo(() => p.id\r\n        ? p.id\r\n        : generateId([\r\n            p.fontFamily,\r\n            fontSizes.valueLabel,\r\n            fontSizes.legend,\r\n            fontSizes.setLabel,\r\n            fontSizes.title,\r\n            fontSizes.exportLabel,\r\n            fontSizes.description,\r\n            p.textColor,\r\n            p.color,\r\n            p.hasSelectionColor,\r\n            p.strokeColor,\r\n            p.valueTextColor,\r\n            p.selectionColor,\r\n            p.opacity,\r\n            p.hasSelectionOpacity,\r\n        ]), [\r\n        p.id,\r\n        p.fontFamily,\r\n        fontSizes.valueLabel,\r\n        fontSizes.legend,\r\n        fontSizes.setLabel,\r\n        fontSizes.title,\r\n        fontSizes.exportLabel,\r\n        fontSizes.description,\r\n        p.textColor,\r\n        p.color,\r\n        p.hasSelectionColor,\r\n        p.strokeColor,\r\n        p.valueTextColor,\r\n        p.selectionColor,\r\n        p.opacity,\r\n        p.hasSelectionOpacity,\r\n    ]);\r\n    const styleInfo = useMemo(() => deriveVennStyleDependent(p.theme, p.styles, p.classNames, styleId, p.selectionColor, p.title, p.description, p.tooltips), [p.theme, p.styles, p.classNames, styleId, p.selectionColor, p.title, p.description, p.tooltips]);\r\n    const sizeInfo = useMemo(() => deriveVennSizeDependent(p.width, p.height, p.padding, p.id), [p.width, p.height, p.padding, p.id]);\r\n    const h = useHandler(p);\r\n    const qs = React.useMemo(() => queries.map((q) => queryOverlap(q, 'intersection', p.toElemKey)), [queries, p.toElemKey]);\r\n    const rulesHelper = baseRules(styleId, p, p.fontFamily, fontSizes);\r\n    return {\r\n        styleId,\r\n        size: sizeInfo,\r\n        style: styleInfo,\r\n        h,\r\n        qs,\r\n        rulesHelper,\r\n    };\r\n}\r\nfunction useExportChart(dataInfo, props, mode) {\r\n    return useCallback((evt) => {\r\n        const svg = evt.currentTarget.closest('svg');\r\n        const type = (evt.currentTarget.dataset.type || 'png');\r\n        switch (type) {\r\n            case 'dump':\r\n                exportDump(svg, props, dataInfo, mode);\r\n                break;\r\n            case 'share':\r\n                exportSharedLink(props, dataInfo, mode);\r\n                break;\r\n            case 'svg':\r\n            case 'png':\r\n                exportSVG(svg, {\r\n                    type,\r\n                    toRemove: `.${evt.currentTarget.getAttribute('class')}`,\r\n                });\r\n        }\r\n    }, [dataInfo, props, mode]);\r\n}\n\n/**\r\n * @upsetjs/react\r\n * https://github.com/upsetjs/upsetjs\r\n *\r\n * Copyright (c) 2021 Samuel Gratzl <sam@sgratzl.com>\r\n */\r\nconst VennDiagram = /*!#__PURE__*/ React.forwardRef(function VennDiagram(props, ref) {\r\n    const p = fillVennDiagramDefaults(props);\r\n    const { selection = null, queries = [], fontSizes } = p;\r\n    const v = useCreateCommon(p);\r\n    const { size, style, rulesHelper } = v;\r\n    const dataInfo = useMemo(() => deriveVennDataDependent(p.sets, p.combinations, size, p.layout, p.valueFormat, p.toKey, p.toElemKey, p.id, p.setLabelOffsets), [p.sets, p.combinations, size, p.valueFormat, p.toKey, p.toElemKey, p.id, p.layout, p.setLabelOffsets]);\r\n    const selectionKey = selection != null && isSetLike$1(selection) ? p.toKey(selection) : null;\r\n    const selectionOverlap = selection == null ? null : generateSelectionOverlap(selection, dataInfo.overlapGuesser, dataInfo.toElemKey);\r\n    const selectionName = generateSelectionName(selection);\r\n    const rules = `\n  ${rulesHelper.root}\n  ${rulesHelper.text}\n\n  .valueTextStyle-${style.id} {\n    fill: ${p.valueTextColor};\n    ${rulesHelper.p(fontSizes.valueLabel)}\n    text-anchor: middle;\n    dominant-baseline: central;\n  }\n  .setTextStyle-${style.id} {\n    fill: ${p.textColor};\n    ${rulesHelper.p(fontSizes.setLabel)}\n    text-anchor: middle;\n  }\n\n  .topText-${style.id} {\n    dominant-baseline: hanging;\n  }\n\n  .stroke-circle-${style.id} {\n    fill: none;\n    stroke: ${p.strokeColor};\n  }\n\n  .arc-${style.id} {\n    fill-rule: evenodd;\n  }\n  .arcP-${style.id} {\n    fill: transparent;\n    fill-opacity: ${p.opacity};\n  }\n  ${rulesHelper.fill}\n  ${rulesHelper.export}\n\n  ${rulesHelper.hasSFill ? `.root-${style.id}[data-selection] .arcP-${style.id} { ${rulesHelper.hasSFill} }` : ''}\n\n  ${queries\r\n        .map((q, i) => `.fillQ${i}-${dataInfo.id} {\n    fill: ${q.color};\n  }`)\r\n        .join('\\n')}\n  `;\r\n    const exportChart = useExportChart(dataInfo, p, 'venn');\r\n    const maxWidth = dataInfo.sets.d.reduce((acc, d) => Math.min(acc, d.l.cx - (isEllipse(d.l) ? d.l.rx : d.l.r)), size.area.w);\r\n    return (React.createElement(SVGWrapper, { rules: rules, style: style, selectionName: selectionName, size: size, p: p, data: dataInfo, tRef: ref, h: v.h, exportChart: exportChart },\r\n        React.createElement(UpSetTitle, { style: style, width: maxWidth }),\r\n        React.createElement(\"g\", { className: clsx(p.onClick && `clickAble-${style.id}`) }, dataInfo.sets.d.map((d, i) => (React.createElement(\"text\", { key: d.key, x: d.l.text.x + d.offset.x, y: d.l.text.y + d.offset.y, onClick: v.h.onClick(dataInfo.sets.v[i], []), onMouseEnter: v.h.onMouseEnter(dataInfo.sets.v[i], []), onMouseLeave: v.h.onMouseLeave, onContextMenu: v.h.onContextMenu(dataInfo.sets.v[i], []), onMouseMove: v.h.onMouseMove(dataInfo.sets.v[i], []), className: clsx(`setTextStyle-${style.id}`, `${d.l.align}Text-${style.id}`, `${d.l.verticalAlign}Text-${style.id}`, style.classNames.setLabel) },\r\n            style.tooltips && (React.createElement(\"title\", null,\r\n                dataInfo.sets.v[i].name,\r\n                \": \",\r\n                dataInfo.format(dataInfo.sets.v[i].cardinality))),\r\n            dataInfo.sets.v[i].name)))),\r\n        React.createElement(\"g\", { className: clsx(p.onClick && `clickAble-${style.id}`) }, dataInfo.cs.d.map((l, i) => (React.createElement(VennArcSliceSelection, { key: l.key, d: l.v, i: i, slice: l.l, size: size, style: style, data: dataInfo, fill: p.filled, h: v.h, selectionName: selectionName, selected: selectionKey === l.key || (isSet(selection) && dataInfo.cs.has(l.v, selection)), elemOverlap: selectionOverlap, queries: queries, qs: v.qs })))),\r\n        React.createElement(\"g\", null, dataInfo.sets.d.map((l) => isEllipse(l.l) ? (React.createElement(\"ellipse\", { key: l.key, rx: l.l.rx, ry: l.l.ry, transform: `translate(${l.l.cx},${l.l.cy})rotate(${l.l.rotation})`, className: clsx(`stroke-circle-${style.id}`, style.classNames.set), style: style.styles.set })) : (React.createElement(\"circle\", { key: l.key, cx: l.l.cx, cy: l.l.cy, r: l.l.r, className: clsx(`stroke-circle-${style.id}`, style.classNames.set), style: style.styles.set }))))));\r\n});\n\n/**\r\n * @upsetjs/react\r\n * https://github.com/upsetjs/upsetjs\r\n *\r\n * Copyright (c) 2021 Samuel Gratzl <sam@sgratzl.com>\r\n */\r\nconst KMapCell = /*!#__PURE__*/ React.memo(function KMapCell({ d, i, h, className, data, style }) {\r\n    const l = data.cs.l[i];\r\n    const y = data.cs.scale(d.cardinality);\r\n    const x = (data.cell - data.cs.bandWidth) / 2;\r\n    return (React.createElement(\"g\", { transform: `translate(${l.x}, ${l.y})`, onMouseEnter: h.onMouseEnter(d, []), onMouseLeave: h.onMouseLeave, onClick: h.onClick(d, []), onContextMenu: h.onContextMenu(d, []), onMouseMove: h.onMouseMove(d, []), className: className, \"data-cardinality\": d.cardinality },\r\n        style.tooltips && (React.createElement(\"title\", null,\r\n            d.name,\r\n            \": \",\r\n            data.sets.format(d.cardinality))),\r\n        React.createElement(\"rect\", { width: data.cell, height: data.cell, className: `fillTransparent-${style.id}` }),\r\n        React.createElement(\"rect\", { x: x, y: y, height: data.cell - y, width: data.cs.bandWidth, className: clsx(`fillPrimary-${style.id}`, style.classNames.bar), style: mergeColor(style.styles.bar, d.color) }),\r\n        React.createElement(\"text\", { y: y - style.barLabelOffset, x: data.cell / 2, style: style.styles.barLabel, className: clsx(`barTextStyle-${style.id}`, style.classNames.barLabel) }, data.sets.format(d.cardinality))));\r\n});\n\n/**\r\n * @upsetjs/react\r\n * https://github.com/upsetjs/upsetjs\r\n *\r\n * Copyright (c) 2021 Samuel Gratzl <sam@sgratzl.com>\r\n */\r\nfunction generateGridPath(cell, vCells, hCells, level) {\r\n    const h = cell * vCells;\r\n    const w = cell * hCells;\r\n    return [level.x.map((x) => `M ${x * cell},0 l0,${h}`), level.y.map((y) => `M 0,${y * cell} l${w},0`)]\r\n        .flat()\r\n        .join(' ');\r\n}\r\nconst KMapChart = /*!#__PURE__*/ React.memo(function KMapChart({ data, style, size, h }) {\r\n    const csNameOffset = style.cs.offset === 'auto' ? data.cs.labelOffset : style.cs.offset;\r\n    return (React.createElement(\"g\", null,\r\n        React.createElement(\"g\", { transform: `translate(${size.w - csNameOffset - 2}, ${size.h - data.cell - 50})` },\r\n            React.createElement(Axis, { scale: data.cs.scale, orient: \"left\", size: data.cell, start: data.cs.barLabelFontSize, style: style }),\r\n            React.createElement(\"text\", { className: clsx(`cChartTextStyle-${style.id}`, style.classNames.chartLabel), style: style.styles.chartLabel, transform: `translate(${-csNameOffset}, ${data.cell})rotate(-90)` }, style.cs.name)),\r\n        React.createElement(\"g\", null,\r\n            data.sets.l.map((l, i) => {\r\n                const s = data.sets.v[i];\r\n                const name = s.name;\r\n                return (React.createElement(\"g\", { key: name, onClick: h.onClick(s, []), onMouseEnter: h.onMouseEnter(s, []), onMouseLeave: h.onMouseLeave, onContextMenu: h.onContextMenu(s, []), onMouseMove: h.onMouseMove(s, []), className: clsx(h.hasClick && `clickAble-${style.id}`) }, l.text.map((p, i) => (React.createElement(\"text\", { key: i, transform: `translate(${p.x},${p.y})${!l.hor ? 'rotate(-90)' : ''}`, className: clsx(`setTextStyle-${style.id}`) }, name)))));\r\n            }),\r\n            data.sets.l.map((l, i) => {\r\n                const name = data.sets.v[i].name;\r\n                return (React.createElement(React.Fragment, { key: name }, l.notText.map((p, i) => (React.createElement(\"text\", { key: i, transform: `translate(${p.x},${p.y})${!l.hor ? 'rotate(-90)' : ''}`, className: clsx(`setTextStyle-${style.id}`, `not-${style.id}`) }, name)))));\r\n            })),\r\n        React.createElement(\"g\", { className: clsx(h.hasClick && `clickAble-${style.id}`) }, data.cs.v.map((c, i) => {\r\n            return React.createElement(KMapCell, { key: data.cs.keys[i], d: c, i: i, h: h, style: style, data: data });\r\n        })),\r\n        React.createElement(\"g\", { transform: `translate(${data.grid.x}, ${data.grid.y})` }, data.grid.levels.map((l, i) => (React.createElement(\"path\", { key: i, d: generateGridPath(data.cell, data.grid.vCells, data.grid.hCells, l), className: `gridStyle-${style.id} gridStyle-${style.id}-${i}` }))))));\r\n});\n\n/**\r\n * @upsetjs/react\r\n * https://github.com/upsetjs/upsetjs\r\n *\r\n * Copyright (c) 2021 Samuel Gratzl <sam@sgratzl.com>\r\n */\r\nfunction KMapQueries$1({ data, style, elemOverlap, secondary, tooltip, suffix, empty, }) {\r\n    const width = data.cs.bandWidth;\r\n    const offset = (data.cell - width) / 2;\r\n    const className = clsx(`fill${suffix}`, !tooltip && `pnone-${style.id}`, style.classNames.bar);\r\n    return (React.createElement(\"g\", { \"data-upset\": secondary ? 'cs-q' : 'cs-s' }, data.cs.v.map((d, i) => {\r\n        const l = data.cs.l[i];\r\n        const key = data.cs.keys[i];\r\n        if (empty && !secondary) {\r\n            return (React.createElement(\"rect\", { key: key, x: l.x + offset, y: l.y + data.cell, height: 0, width: width, className: className, style: mergeColor(style.styles.bar, !style.selectionColor ? d.color : undefined) }, tooltip && React.createElement(\"title\", null)));\r\n        }\r\n        const o = elemOverlap(d);\r\n        if (o === 0) {\r\n            return null;\r\n        }\r\n        const y = data.cs.scale(o);\r\n        const title = tooltip && React.createElement(\"title\", null, `${d.name} ∩ ${tooltip}: ${o}`);\r\n        return secondary ? (React.createElement(\"path\", { key: key, transform: `translate(${l.x + offset}, ${l.y + y})`, d: `M0,-1 l${width},0 l0,2 l${-width},0 L-${data.triangleSize},-${data.triangleSize} L-${data.triangleSize},${data.triangleSize} Z`, className: className, \"data-i\": i, \"data-cardinality\": o, style: mergeColor(undefined, !style.selectionColor ? d.color : undefined) }, title)) : (React.createElement(\"rect\", { key: key, x: l.x + offset, y: l.y + y, height: data.cell - y, \"data-i\": i, \"data-cardinality\": o, width: width, className: className, style: mergeColor(style.styles.bar, !style.selectionColor ? d.color : undefined) }, title));\r\n    })));\r\n}\n\n/**\r\n * @upsetjs/react\r\n * https://github.com/upsetjs/upsetjs\r\n *\r\n * Copyright (c) 2021 Samuel Gratzl <sam@sgratzl.com>\r\n */\r\nconst KMapQueries = /*!#__PURE__*/ React.memo(function KMapQueries({ data, style, hasHover, secondary, queries, }) {\r\n    const qs = useMemo(() => queries.map((q) => (Object.assign(Object.assign({}, q), { overlap: queryOverlap(q, 'intersection', data.toElemKey) }))), [queries, data.toElemKey]);\r\n    return (React.createElement(\"g\", { className: hasHover && !secondary ? `pnone-${style.id}` : undefined }, qs.map((q, i) => (React.createElement(KMapQueries$1, { key: q.name, data: data, style: style, elemOverlap: q.overlap, suffix: `Q${i}-${data.id}`, secondary: secondary || i > 0, tooltip: hasHover && !(secondary || i > 0) ? undefined : q.name })))));\r\n});\n\n/**\r\n * @upsetjs/react\r\n * https://github.com/upsetjs/upsetjs\r\n *\r\n * Copyright (c) 2021 Samuel Gratzl <sam@sgratzl.com>\r\n */\r\nfunction KMapSelection({ data, style, selection, hasHover, }) {\r\n    const empty = style.emptySelection;\r\n    const selectionOverlap = generateSelectionOverlap(selection, data.overlapGuesser, data.toElemKey);\r\n    const selectionName = generateSelectionName(selection);\r\n    return (React.createElement(\"g\", { className: hasHover ? `pnone-${style.id}` : undefined }, (selection || empty) && (React.createElement(KMapQueries$1, { data: data, style: style, empty: empty && !selection, elemOverlap: selectionOverlap, suffix: `Selection-${style.id}`, tooltip: hasHover ? undefined : selectionName }))));\r\n}\n\nfunction ranged(count, cb) {\r\n    return Array(count)\r\n        .fill(0)\r\n        .map((_, i) => cb(i));\r\n}\r\nfunction generateLevels(numSets) {\r\n    // all lines and the value is the thickness\r\n    const lines = Array(Math.pow(2, numSets)).fill(0);\r\n    ranged(numSets, (i) => {\r\n        const shift = Math.pow(2, i);\r\n        for (let i = 0; i < lines.length; i += shift) {\r\n            lines[i]++;\r\n        }\r\n    });\r\n    const levels = ranged(Math.max(numSets, 1), () => []);\r\n    lines.forEach((l, i) => {\r\n        const level = Math.max(0, l - 1);\r\n        // l -1 cause l is at least 1\r\n        levels[level].push(i);\r\n    });\r\n    // push the last index to the last level\r\n    levels[levels.length - 1].push(lines.length);\r\n    return levels;\r\n}\r\nfunction generate(sets, cs, has, options) {\r\n    const { xBefore, yBefore, cell, hCells, vCells, horizontalSets, verticalSets } = bounds(sets.length, options);\r\n    const s = setLabels(sets.length, options);\r\n    const shifts = generateShiftLookup(sets, hCells, vCells, has);\r\n    const c = cs.map((c) => {\r\n        const [i, j] = shifts.reduceRight((acc, s) => s(c, acc), [0, 0]);\r\n        return {\r\n            x: xBefore + i * cell,\r\n            y: yBefore + j * cell,\r\n        };\r\n    });\r\n    const hLevels = generateLevels(horizontalSets);\r\n    const vLevels = generateLevels(verticalSets);\r\n    return {\r\n        s,\r\n        c,\r\n        cell,\r\n        grid: {\r\n            x: xBefore,\r\n            y: yBefore,\r\n            hCells,\r\n            vCells,\r\n            levels: hLevels.map((l, i) => ({\r\n                x: l,\r\n                y: i < vLevels.length ? vLevels[i] : [],\r\n            })),\r\n        },\r\n    };\r\n}\r\nfunction generateShiftLookup(sets, hCells, vCells, has) {\r\n    return sets.map((s, k) => {\r\n        const index = Math.floor(k / 2);\r\n        const hor = k % 2 === 0;\r\n        const numLabels = Math.pow(2, index);\r\n        const span = (hor ? hCells : vCells) / numLabels / 2;\r\n        return (cs, [i, j]) => {\r\n            if (has(cs, s)) {\r\n                return [i, j];\r\n            }\r\n            if (span > 1) {\r\n                // flip previous and shift\r\n                if (hor) {\r\n                    return [span - 1 - i + span, j];\r\n                }\r\n                return [i, span - 1 - j + span];\r\n            }\r\n            // shift only\r\n            if (hor) {\r\n                return [i + span, j];\r\n            }\r\n            return [i, j + span];\r\n        };\r\n    });\r\n}\r\nfunction setLabels(sets, options) {\r\n    const { xOffset, yOffset, cell, xBefore, yBefore, hCells, vCells } = bounds(sets, options);\r\n    const xAfterEnd = options.width - xOffset;\r\n    const yAfterEnd = options.height - yOffset;\r\n    return ranged(sets, (k) => {\r\n        const index = Math.floor(k / 2);\r\n        const hor = k % 2 === 0;\r\n        const numLabels = Math.pow(2, index);\r\n        const span = (hor ? hCells : vCells) / numLabels / 2;\r\n        const xPos = hor ? xBefore : yBefore;\r\n        const labels = [\r\n            {\r\n                v: true,\r\n                x: xPos + span * cell * 0.5,\r\n            },\r\n            {\r\n                v: false,\r\n                x: xPos + span * cell * 1.5,\r\n            },\r\n        ];\r\n        for (let i = 1; i <= index; i++) {\r\n            // duplicate and mirror\r\n            const offset = span * Math.pow(2, i) * cell;\r\n            const l = labels.length - 1;\r\n            labels.push(...labels.map((li, i) => ({\r\n                v: labels[l - i].v,\r\n                x: li.x + offset,\r\n            })));\r\n        }\r\n        const inAfterGroup = index % 2 === 1;\r\n        const withinGroupIndex = Math.floor(index / 2);\r\n        let yPos = 0;\r\n        if (inAfterGroup) {\r\n            const end = hor ? yAfterEnd : xAfterEnd;\r\n            yPos = end - options.labelHeight * (0.5 + withinGroupIndex);\r\n        }\r\n        else {\r\n            const start = hor ? yOffset : xOffset;\r\n            yPos = start + options.labelHeight * (0.5 + withinGroupIndex);\r\n        }\r\n        if (hor) {\r\n            return {\r\n                hor: true,\r\n                span,\r\n                text: labels.filter((d) => d.v).map((l) => ({ x: l.x, y: yPos })),\r\n                notText: labels.filter((d) => !d.v).map((l) => ({ x: l.x, y: yPos })),\r\n            };\r\n        }\r\n        return {\r\n            hor: false,\r\n            span,\r\n            text: labels.filter((d) => d.v).map((l) => ({ x: yPos, y: l.x })),\r\n            notText: labels.filter((d) => !d.v).map((l) => ({ x: yPos, y: l.x })),\r\n        };\r\n    });\r\n}\r\nfunction bounds(sets, options) {\r\n    const horizontalSets = Math.ceil(sets / 2);\r\n    const verticalSets = Math.floor(sets / 2);\r\n    const hCells = Math.pow(2, horizontalSets);\r\n    const vCells = Math.pow(2, verticalSets);\r\n    const cell = Math.floor(Math.min((options.width - options.labelHeight * verticalSets) / hCells, (options.height - options.labelHeight * horizontalSets) / vCells));\r\n    const xOffset = (options.width - hCells * cell - options.labelHeight * verticalSets) / 2;\r\n    const yOffset = (options.height - vCells * cell - options.labelHeight * horizontalSets) / 2;\r\n    const xBefore = xOffset + Math.ceil(verticalSets / 2) * options.labelHeight;\r\n    const yBefore = yOffset + Math.ceil(horizontalSets / 2) * options.labelHeight;\r\n    return { xOffset, horizontalSets, yOffset, verticalSets, cell, xBefore, yBefore, hCells, vCells };\r\n}\n\n/**\r\n * @upsetjs/react\r\n * https://github.com/upsetjs/upsetjs\r\n *\r\n * Copyright (c) 2021 Samuel Gratzl <sam@sgratzl.com>\r\n */\r\nfunction deriveKarnaughDataDependent(sets, combinations, size, numericScale, barLabelFontSize, barPadding, setLabelFontSize, tickFontSize, toKey, toElemKey, id, combinationMaxScale) {\r\n    const numericScaleFactory = resolveNumericScale(numericScale);\r\n    const setKeys = sets.map(toKey);\r\n    const cs = areCombinations(combinations)\r\n        ? combinations\r\n        : generateCombinations(sets, Object.assign({\r\n            type: 'distinctIntersection',\r\n        }, combinations !== null && combinations !== void 0 ? combinations : {}));\r\n    const csKeys = cs.map(toKey);\r\n    const has = (v, s) => {\r\n        const sk = toKey(s);\r\n        return Array.from(v.sets).some((ss) => toKey(ss) === sk);\r\n    };\r\n    const labelHeight = Math.ceil(setLabelFontSize * 1.2);\r\n    const l = generate(sets, cs, has, {\r\n        width: size.area.w,\r\n        height: size.area.h,\r\n        labelHeight,\r\n    });\r\n    const maxCSCardinality = combinationMaxScale !== null && combinationMaxScale !== void 0 ? combinationMaxScale : cs.reduce((acc, d) => Math.max(acc, d.cardinality), 0);\r\n    const scale = numericScaleFactory(maxCSCardinality, [l.cell, barLabelFontSize], {\r\n        orientation: 'vertical',\r\n        fontSizeHint: tickFontSize,\r\n    });\r\n    const bandWidth = Math.round(l.cell * (1 - barPadding));\r\n    const triangleSize = Math.min(Math.max(2, (bandWidth / 2) * barPadding), 5);\r\n    const guessLabelWidth = (v) => Math.floor((barLabelFontSize / 1.4) * 0.7 * scale.tickFormat()(v).length);\r\n    const largestCSLabelWidth = guessLabelWidth(maxCSCardinality);\r\n    return {\r\n        id: id ? id : generateId(),\r\n        grid: l.grid,\r\n        sets: {\r\n            keys: setKeys,\r\n            l: l.s,\r\n            v: sets,\r\n            labelHeight,\r\n            format: scale.tickFormat(),\r\n        },\r\n        triangleSize,\r\n        cell: l.cell,\r\n        cs: {\r\n            keys: csKeys,\r\n            l: l.c,\r\n            v: cs,\r\n            barLabelFontSize,\r\n            has,\r\n            scale,\r\n            bandWidth,\r\n            labelOffset: largestCSLabelWidth + 9 + 6,\r\n        },\r\n        toKey,\r\n        toElemKey,\r\n        overlapGuesser: generateOverlapFunction(cs, noGuessPossible, toKey),\r\n    };\r\n}\n\n/**\r\n * @upsetjs/react\r\n * https://github.com/upsetjs/upsetjs\r\n *\r\n * Copyright (c) 2021 Samuel Gratzl <sam@sgratzl.com>\r\n */\r\nfunction deriveStyleDependent(theme, styles, classNames, combinationName, combinationNameAxisOffset, styleId, barLabelOffset, selectionColor, emptySelection, title, description, tooltips) {\r\n    return {\r\n        theme,\r\n        styles,\r\n        classNames: classNames,\r\n        emptySelection,\r\n        id: styleId,\r\n        barLabelOffset,\r\n        selectionColor,\r\n        title,\r\n        description,\r\n        tooltips,\r\n        cs: {\r\n            name: combinationName,\r\n            offset: combinationNameAxisOffset,\r\n        },\r\n    };\r\n}\n\n/**\r\n * @upsetjs/react\r\n * https://github.com/upsetjs/upsetjs\r\n *\r\n * Copyright (c) 2021 Samuel Gratzl <sam@sgratzl.com>\r\n */\r\nconst KarnaughMap = /*!#__PURE__*/ React.forwardRef(function KarnaughMap(props, ref) {\r\n    const p = fillKarnaughMapDefaults(props);\r\n    const { queries = [], fontSizes, selection = null } = p;\r\n    // generate a \"random\" but attribute stable id to avoid styling conflicts\r\n    const styleId = useMemo(() => p.id\r\n        ? p.id\r\n        : generateId([\r\n            p.fontFamily,\r\n            fontSizes.axisTick,\r\n            fontSizes.barLabel,\r\n            fontSizes.legend,\r\n            fontSizes.setLabel,\r\n            fontSizes.title,\r\n            fontSizes.exportLabel,\r\n            fontSizes.description,\r\n            p.textColor,\r\n            p.color,\r\n            p.hasSelectionColor,\r\n            p.strokeColor,\r\n            p.selectionColor,\r\n            p.opacity,\r\n            p.hasSelectionOpacity,\r\n        ]), [\r\n        p.id,\r\n        p.fontFamily,\r\n        fontSizes.axisTick,\r\n        fontSizes.barLabel,\r\n        fontSizes.legend,\r\n        fontSizes.setLabel,\r\n        fontSizes.title,\r\n        fontSizes.exportLabel,\r\n        fontSizes.description,\r\n        p.textColor,\r\n        p.color,\r\n        p.hasSelectionColor,\r\n        p.strokeColor,\r\n        p.selectionColor,\r\n        p.opacity,\r\n        p.hasSelectionOpacity,\r\n    ]);\r\n    const style = useMemo(() => deriveStyleDependent(p.theme, p.styles, p.classNames, p.combinationName, p.combinationNameAxisOffset, styleId, p.barLabelOffset, p.selectionColor, p.emptySelection, p.title, p.description, p.tooltips), [\r\n        p.theme,\r\n        p.styles,\r\n        p.classNames,\r\n        p.combinationName,\r\n        p.combinationNameAxisOffset,\r\n        styleId,\r\n        p.barLabelOffset,\r\n        p.selectionColor,\r\n        p.emptySelection,\r\n        p.title,\r\n        p.description,\r\n        p.tooltips,\r\n    ]);\r\n    const size = useMemo(() => deriveVennSizeDependent(p.width, p.height, p.padding, p.id), [p.width, p.height, p.padding, p.id]);\r\n    const data = useMemo(() => deriveKarnaughDataDependent(p.sets, p.combinations, size, p.numericScale, p.barLabelOffset + parseFontSize(fontSizes.barLabel), p.barPadding, parseFontSize(fontSizes.setLabel), parseFontSize(fontSizes.axisTick), p.toKey, p.toElemKey, p.id, p.combinationMaxScale), [\r\n        p.sets,\r\n        p.combinations,\r\n        size,\r\n        p.numericScale,\r\n        p.barLabelOffset,\r\n        fontSizes.barLabel,\r\n        p.barPadding,\r\n        fontSizes.axisTick,\r\n        fontSizes.setLabel,\r\n        p.toKey,\r\n        p.toElemKey,\r\n        p.id,\r\n        p.combinationMaxScale,\r\n    ]);\r\n    const h = useHandler(p);\r\n    const selectionName = generateSelectionName(selection);\r\n    const rulesHelper = baseRules(styleId, p, p.fontFamily, fontSizes);\r\n    const rules = `\n  ${rulesHelper.root}\n  ${rulesHelper.text}\n\n  .axisTextStyle-${styleId} {\n    fill: ${p.textColor};\n    ${rulesHelper.p(fontSizes.axisTick)}\n    text-anchor: end;\n  }\n  .barTextStyle-${styleId} {\n    fill: ${p.textColor};\n    ${rulesHelper.p(fontSizes.barLabel)}\n    text-anchor: middle;\n  }\n  .setTextStyle-${style.id} {\n    fill: ${p.textColor};\n    ${rulesHelper.p(fontSizes.setLabel)}\n    text-anchor: middle;\n    dominant-baseline: central;\n  }\n  .cChartTextStyle-${styleId} {\n    fill: ${p.textColor};\n    ${rulesHelper.p(fontSizes.chartLabel)}\n  }\n\n  .not-${style.id} {\n    text-decoration: overline;\n  }\n\n  .axisLine-${styleId} {\n    fill: none;\n    stroke: ${p.textColor};\n  }\n\n  .gridStyle-${style.id} {\n    fill: none;\n    stroke: ${p.strokeColor};\n    stroke-linecap: round;\n  }\n  .gridStyle-${style.id}-1 {\n    stroke-width: 2;\n  }\n  .gridStyle-${style.id}-2 {\n    stroke-width: 3;\n  }\n\n  ${rulesHelper.fill}\n  ${rulesHelper.export}\n\n  ${queries\r\n        .map((q, i) => `.fillQ${i}-${data.id} {\n    fill: ${q.color};\n  }`)\r\n        .join('\\n')}\n  `;\r\n    const exportChart = useExportChart(data, p, 'kmap');\r\n    const maxWidth = data.sets.l.reduce((acc, d) => Math.min(acc, d.text[0].x - data.sets.labelHeight), size.area.w);\r\n    return (React.createElement(SVGWrapper, { rules: rules, style: style, size: size, p: p, data: data, tRef: ref, selectionName: selectionName, h: h, exportChart: exportChart },\r\n        React.createElement(UpSetTitle, { style: style, width: maxWidth }),\r\n        React.createElement(KMapChart, { style: style, data: data, h: h, size: size }),\r\n        React.createElement(KMapSelection, { style: style, data: data, hasHover: h.hasHover, selection: selection }),\r\n        React.createElement(KMapQueries, { style: style, data: data, hasHover: h.hasHover, queries: queries, secondary: h.hasHover || selection != null })));\r\n});\n\n/**\r\n * @upsetjs/react\r\n * https://github.com/upsetjs/upsetjs\r\n *\r\n * Copyright (c) 2021 Samuel Gratzl <sam@sgratzl.com>\r\n */\r\nconst defaults = {\r\n    background: '#F4F4F4',\r\n    color: '#A6A8AB',\r\n    secondaryColor: '#E1E2E3',\r\n};\r\nfunction prepare(props) {\r\n    var _a, _b, _c, _d;\r\n    const color = (_a = props.color) !== null && _a !== void 0 ? _a : defaults.color;\r\n    const secondary = (_b = props.secondaryColor) !== null && _b !== void 0 ? _b : defaults.secondaryColor;\r\n    const rest = Object.assign({}, props);\r\n    const background = (_c = props.background) !== null && _c !== void 0 ? _c : defaults.background;\r\n    delete rest.color;\r\n    delete rest.secondaryColor;\r\n    delete rest.background;\r\n    if (background) {\r\n        rest.style = Object.assign({ background }, (_d = rest.style) !== null && _d !== void 0 ? _d : {});\r\n    }\r\n    return { color, secondary, rest };\r\n}\r\n/**\r\n * UpSetJS Skeleton a simple UpSetJS skeleton\r\n *\r\n * with React.forwardRef support to specify a reference to the SVG element\r\n */\r\nconst UpSetJSSkeleton = /*!#__PURE__*/ React.memo(\r\n/*!#__PURE__*/ React.forwardRef(function UpSetJSSkeleton(props, ref) {\r\n    const { color, secondary, rest } = prepare(props);\r\n    const wi = 20;\r\n    const padding = 10;\r\n    const sWidth = 75;\r\n    const sY = 110;\r\n    const cHeight = 100;\r\n    const csX = 85;\r\n    const cOffsets = [10, 20, 35, 60, 65, 80, 90];\r\n    const sOffsets = [50, 30, 15];\r\n    return (React.createElement(\"svg\", Object.assign({ viewBox: \"0 0 300 200\", ref: ref }, rest),\r\n        cOffsets.map((offset, i) => (React.createElement(\"rect\", { key: i, x: csX + i * (wi + padding), y: offset, width: wi, height: cHeight - offset, fill: color }))),\r\n        sOffsets.map((offset, i) => (React.createElement(\"rect\", { key: i, x: offset, y: sY + i * (wi + padding), width: sWidth - offset, height: wi, fill: color }))),\r\n        cOffsets.map((_, i) => sOffsets.map((_, j) => {\r\n            const filled = j === 2 - i || (i === 3 && j > 0) || (i === 4 && j !== 1) || (i === 5 && j < 2) || i === 6;\r\n            return (React.createElement(\"circle\", { key: `${i}x${j}`, cx: csX + i * (wi + padding) + wi / 2, cy: sY + j * (wi + padding) + wi / 2, r: wi / 2, fill: filled ? color : secondary }));\r\n        })),\r\n        React.createElement(\"rect\", { x: \"182\", y: \"150\", width: \"6\", height: \"30\", fill: color }),\r\n        React.createElement(\"rect\", { x: \"212\", y: \"120\", width: \"6\", height: \"60\", fill: color }),\r\n        React.createElement(\"rect\", { x: \"242\", y: \"120\", width: \"6\", height: \"30\", fill: color }),\r\n        React.createElement(\"rect\", { x: \"272\", y: \"120\", width: \"6\", height: \"60\", fill: color })));\r\n}));\n\n/**\r\n * @upsetjs/react\r\n * https://github.com/upsetjs/upsetjs\r\n *\r\n * Copyright (c) 2021 Samuel Gratzl <sam@sgratzl.com>\r\n */\r\n/**\r\n * VennDiagram Skeleton a simple VennDiagram skeleton\r\n *\r\n * with React.forwardRef support to specify a reference to the SVG element\r\n */\r\nconst VennDiagramSkeleton = /*!#__PURE__*/ React.memo(\r\n/*!#__PURE__*/ React.forwardRef(function VennDiagramSkeleton(props, ref) {\r\n    const { color, secondary, rest } = prepare(props);\r\n    const padding = 10;\r\n    const l = layoutImpl(3, 300 - padding * 2, 3200 - padding * 2);\r\n    return (React.createElement(\"svg\", Object.assign({ viewBox: \"0 0 300 200\", ref: ref }, rest),\r\n        l.sets.map((set, i) => (React.createElement(\"circle\", { key: i, cx: set.cx, cy: set.cy + padding, r: set.r, fill: secondary }))),\r\n        l.sets.map((set, i) => (React.createElement(\"circle\", { key: i, cx: set.cx, cy: set.cy + padding, r: set.r, stroke: color, fill: \"none\" })))));\r\n}));\n\n/**\r\n * @upsetjs/react\r\n * https://github.com/upsetjs/upsetjs\r\n *\r\n * Copyright (c) 2021 Samuel Gratzl <sam@sgratzl.com>\r\n */\r\n/**\r\n * KV Diagram Skeleton a simple KarnaughMap skeleton\r\n *\r\n * with React.forwardRef support to specify a reference to the SVG element\r\n */\r\nconst KarnaughMapSkeleton = /*!#__PURE__*/ React.memo(\r\n/*!#__PURE__*/ React.forwardRef(function KarnaughMapSkeleton(props, ref) {\r\n    const { rest, color, secondary } = prepare(props);\r\n    // const padding = 10;\r\n    const { xBefore, yBefore, cell, hCells, vCells } = bounds(2, {\r\n        width: 270,\r\n        height: 170,\r\n        labelHeight: 20,\r\n    });\r\n    const gw = hCells * cell;\r\n    const gh = vCells * cell;\r\n    const v1 = 0.9;\r\n    const v2 = 0.5;\r\n    const v3 = 0.26;\r\n    const v4 = 0.75;\r\n    return (React.createElement(\"svg\", Object.assign({ viewBox: \"0 0 300 200\", ref: ref, fontFamily: \"sans-serif\" }, rest),\r\n        React.createElement(\"g\", { transform: `translate(${xBefore + 10},${yBefore + 10})` },\r\n            React.createElement(\"text\", { x: cell * 0.5, y: -3, fill: color, textAnchor: \"middle\" }, \"A\"),\r\n            React.createElement(\"text\", { x: cell * 1.5, y: -3, fill: color, textAnchor: \"middle\", style: { textDecoration: 'overline' } }, \"A\"),\r\n            React.createElement(\"text\", { x: -3, y: cell * 0.5, fill: color, textAnchor: \"end\", dominantBaseline: \"central\" }, \"B\"),\r\n            React.createElement(\"text\", { x: -3, y: cell * 1.5, fill: color, textAnchor: \"end\", dominantBaseline: \"central\", style: { textDecoration: 'overline' } }, \"B\"),\r\n            React.createElement(\"rect\", { x: cell * 0.1, y: cell * (1 - v1), height: cell * v1, width: cell * 0.8, fill: secondary }),\r\n            React.createElement(\"rect\", { x: cell * 1.1, y: cell * (1 - v2), height: cell * v2, width: cell * 0.8, fill: secondary }),\r\n            React.createElement(\"rect\", { x: cell * 0.1, y: cell * (1 - v3 + 1), height: cell * v3, width: cell * 0.8, fill: secondary }),\r\n            React.createElement(\"rect\", { x: cell * 1.1, y: cell * (1 - v4 + 1), height: cell * v4, width: cell * 0.8, fill: secondary }),\r\n            React.createElement(\"path\", { d: `M0,0 l${gw},0 l0,${gh} l${-gw},0 l0,${-gh} M${gw / 2},0 l0,${gh} M0,${gh / 2} l${gw},0`, fill: \"none\", stroke: color }))));\r\n}));\n\n/**\r\n * @upsetjs/react\r\n * https://github.com/upsetjs/upsetjs\r\n *\r\n * Copyright (c) 2021 Samuel Gratzl <sam@sgratzl.com>\r\n */\r\nconst DEG2RAD = (1 / 180) * Math.PI;\r\nfunction pointAtCircle(cx, cy, radius, angle) {\r\n    return {\r\n        x: cx + Math.cos(angle * DEG2RAD) * radius,\r\n        y: cy + Math.sin(angle * DEG2RAD) * radius,\r\n    };\r\n}\n\n/**\r\n * @upsetjs/react\r\n * https://github.com/upsetjs/upsetjs\r\n *\r\n * Copyright (c) 2021 Samuel Gratzl <sam@sgratzl.com>\r\n */\r\nfunction center(circles) {\r\n    const sumX = circles.reduce((acc, a) => acc + a.x, 0);\r\n    const sumY = circles.reduce((acc, a) => acc + a.y, 0);\r\n    return {\r\n        x: sumX / circles.length,\r\n        y: sumY / circles.length,\r\n    };\r\n}\r\nfunction angleAtCircle(p, c) {\r\n    const x = p.x - c.x;\r\n    const y = p.y - c.y;\r\n    return Math.atan2(y, x) / DEG2RAD;\r\n}\r\nfunction createVennJSAdapter(layout, options) {\r\n    return {\r\n        maxSets: Infinity,\r\n        compute(sets, combinations, width, height) {\r\n            const overlaps = combinations.map((c) => ({ sets: Array.from(c.sets).map((s) => s.name), size: c.cardinality }));\r\n            const r = layout(overlaps, Object.assign({}, {\r\n                width,\r\n                height,\r\n                distinct: true,\r\n            }, options !== null && options !== void 0 ? options : {}));\r\n            const singleSets = r.filter((d) => d.data.sets.length === 1);\r\n            const setNames = new Map(sets.map((d, i) => [d.name, i]));\r\n            const setCircles = singleSets.map((d) => d.circles[0]);\r\n            const eulerCenter = center(setCircles);\r\n            const asArc = (a) => ({\r\n                x2: a.p1.x,\r\n                y2: a.p1.y,\r\n                cx: a.circle.x,\r\n                cy: a.circle.y,\r\n                sweep: true,\r\n                large: a.width > a.circle.radius,\r\n                ref: setCircles.findIndex((d) => Math.abs(d.x - a.circle.x) < 0.05 && Math.abs(d.y - a.circle.y) < 0.05),\r\n                mode: 'i',\r\n            });\r\n            return {\r\n                sets: singleSets.map((d) => {\r\n                    const c = d.circles[0];\r\n                    const angle = angleAtCircle(c, eulerCenter);\r\n                    return {\r\n                        cx: c.x,\r\n                        cy: c.y,\r\n                        r: c.radius,\r\n                        align: angle > 90 ? 'end' : 'start',\r\n                        verticalAlign: 'bottom',\r\n                        text: pointAtCircle(c.x, c.y, c.radius * 1.1, angle),\r\n                    };\r\n                }),\r\n                intersections: r.map((d) => {\r\n                    const arcs = d.arcs;\r\n                    const text = {\r\n                        x: d.text.x,\r\n                        y: d.text.y,\r\n                    };\r\n                    if (arcs.length === 0) {\r\n                        return {\r\n                            sets: d.data.sets.map((s) => setNames.get(s)),\r\n                            text,\r\n                            x1: 0,\r\n                            y1: 0,\r\n                            arcs: [],\r\n                        };\r\n                    }\r\n                    if (arcs.length === 1) {\r\n                        const c = d.arcs[0].circle;\r\n                        return {\r\n                            sets: d.data.sets.map((s) => setNames.get(s)),\r\n                            text,\r\n                            x1: d.arcs[0].p2.x,\r\n                            y1: c.y - c.radius,\r\n                            arcs: [asArc(d.arcs[0]), Object.assign(asArc(d.arcs[0]), { y2: c.y - c.radius })],\r\n                            path: d.distinctPath || d.path,\r\n                        };\r\n                    }\r\n                    return {\r\n                        sets: d.data.sets.map((s) => setNames.get(s)),\r\n                        text,\r\n                        x1: d.arcs[0].p2.x,\r\n                        y1: d.arcs[0].p2.y,\r\n                        arcs: d.arcs.map((e) => asArc(e)),\r\n                        path: d.distinctPath || d.path,\r\n                    };\r\n                }),\r\n            };\r\n        },\r\n    };\r\n}\n\n/**\r\n * @upsetjs/bundle\r\n * https://github.com/upsetjs/upsetjs\r\n *\r\n * Copyright (c) 2021 Samuel Gratzl <sam@sgratzl.com>\r\n */\r\nfunction widthRatios(value) {\r\n    return value == null || (Array.isArray(value) && value.length >= 2 && value.every((v) => typeof v === 'number'));\r\n}\r\nfunction heightRatios(value) {\r\n    return value == null || (Array.isArray(value) && value.length >= 1 && value.every((v) => typeof v === 'number'));\r\n}\r\nfunction setLabelAlignment(value) {\r\n    return value == null || value === 'left' || value === 'center' || value === 'right';\r\n}\r\nfunction sets(value) {\r\n    return Array.isArray(value) && value.every(isSet);\r\n}\r\nfunction combinations(value) {\r\n    return (value == null || (Array.isArray(value) && value.every(isSetCombination)) || isGenerateSetCombinationOptions(value));\r\n}\r\nfunction selection(value) {\r\n    return value == null || Array.isArray(value) || isSetLike$1(value);\r\n}\r\nfunction onHover(value) {\r\n    return value == null || typeof value === 'function';\r\n}\r\nfunction onClick(value) {\r\n    return value == null || typeof value === 'function';\r\n}\r\nfunction onContextMenu(value) {\r\n    return value == null || typeof value === 'function';\r\n}\r\nfunction onMouseMove(value) {\r\n    return value == null || typeof value === 'function';\r\n}\r\nfunction queries(value) {\r\n    return !value || (Array.isArray(value) && value.every(isUpSetQuery));\r\n}\r\nfunction stringOrFalse(value) {\r\n    return value == null || typeof value === 'string' || value === false;\r\n}\r\nfunction setLabelOffsets(value) {\r\n    return (value == null ||\r\n        (Array.isArray(value) && value.every((v) => (null  ))));\r\n}\r\nfunction theme(value) {\r\n    return value == null || value === 'light' || value === 'dark' || value === 'vega';\r\n}\r\nfunction classNames(value) {\r\n    return (value == null ||\r\n        Object.keys(value).every((k) => MULTI_STYLE_KEYS.includes(k) && typeof value[k] === 'string'));\r\n}\r\nfunction fontSizes(value) {\r\n    return (value == null ||\r\n        Object.keys(value).every((k) => FONT_SIZES_KEYS.includes(k) && typeof value[k] === 'string'));\r\n}\r\nfunction numericScale(value) {\r\n    return value == null || value === 'linear' || value === 'log' || typeof value === 'function';\r\n}\r\nfunction bandScale(value) {\r\n    return value == null || value === 'band' || typeof value === 'function';\r\n}\r\nfunction axisOffset(value) {\r\n    return value == null || value === 'auto' || typeof value === 'number';\r\n}\r\nfunction style(value) {\r\n    return value == null || typeof value === 'object';\r\n}\r\nfunction styles(value) {\r\n    return (value == null ||\r\n        Object.keys(value).every((k) => MULTI_STYLE_KEYS.includes(k)));\r\n}\r\nfunction exportButtons(value) {\r\n    return (value == null ||\r\n        typeof value === 'boolean' ||\r\n        Object.keys(value).every((k) => EXPORT_OPTION_KEYS.includes(k) && typeof value[k] === 'boolean'));\r\n}\n\nvar validators = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    widthRatios: widthRatios,\n    heightRatios: heightRatios,\n    setLabelAlignment: setLabelAlignment,\n    sets: sets,\n    combinations: combinations,\n    selection: selection,\n    onHover: onHover,\n    onClick: onClick,\n    onContextMenu: onContextMenu,\n    onMouseMove: onMouseMove,\n    queries: queries,\n    stringOrFalse: stringOrFalse,\n    setLabelOffsets: setLabelOffsets,\n    theme: theme,\n    classNames: classNames,\n    fontSizes: fontSizes,\n    numericScale: numericScale,\n    bandScale: bandScale,\n    axisOffset: axisOffset,\n    style: style,\n    styles: styles,\n    exportButtons: exportButtons\n});\n\nexport { KarnaughMap, KarnaughMapSkeleton, UpSetJS, UpSetJSSkeleton, VennDiagram, VennDiagramSkeleton, createVennJSAdapter, UpSetJS as default, downloadUrl, exportSVG, exportVegaLite, fillDefaults, fillDefaultsG, fillKarnaughMapDefaults, fillKarnaughMapDefaultsG, fillVennDiagramDefaults, fillVennDiagramDefaultsG, getDefaultTheme, isEllipse, validators as propValidators, toUpSetJSDump, toUpSetJSStaticDump };\n//# sourceMappingURL=index.js.map\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/no-unsafe-member-access */\n/* eslint-disable @typescript-eslint/restrict-plus-operands */\n/* eslint-disable @typescript-eslint/no-unsafe-call */\n/* eslint-disable @typescript-eslint/no-unsafe-assignment */\nimport React, { useState, useEffect } from 'react'\nimport UpSetJS, {\n  extractSets,\n  generateCombinations,\n  ISetLike,\n  UpSetFontSizes,\n  ISetCombinations,\n  ISets,\n} from '@upsetjs/react'\nimport { QueryBundleRequest } from '../utils/synapseTypes'\nimport { SynapseConstants, SynapseClient } from '../utils'\nimport { SizeMe } from 'react-sizeme'\nimport getColorPalette from './ColorGradient'\nimport { parseEntityIdFromSqlStatement } from '../utils/functions/sqlFunctions'\nimport { ErrorBanner } from './ErrorBanner'\nimport loadingScreen from './LoadingScreen'\nimport { Button } from 'react-bootstrap'\nimport { useSynapseContext } from '../utils/SynapseContext'\n\nexport type UpsetPlotProps = {\n  sql: string // first column should contain values, second column should contain a single set value.  ie. SELECT distinct individualID, assay FROM syn20821313\n  rgbIndex: number // color plot based on portal\n  maxBarCount?: number // will show all if not set\n  setName?: string // instead of \"Set Size\"\n  combinationName?: string // instead of \"Intersection Size\"\n  height?: number\n  summaryLinkText?: string // text for home page link below chart\n  summaryLink?: string // url for home page link below chart\n}\n\nexport type UpsetPlotData = {\n  sets: ISets<any>\n  combinations: ISetCombinations<any>\n}\n/**\n * Upset plot.  See https://medium.com/@sgratzl/upset-js-javascript-tutorial-1b84bfd6896d\n * Currently this is driven by a Synapse Table/View, but we may want to alter it to read in the data from a flat file instead.\n */\nconst UpsetPlot: React.FunctionComponent<UpsetPlotProps> = ({\n  sql,\n  rgbIndex,\n  maxBarCount,\n  setName,\n  combinationName,\n  height = 700,\n  summaryLinkText,\n  summaryLink,\n}) => {\n  const { accessToken } = useSynapseContext()\n  const [isLoading, setIsLoading] = useState<boolean>()\n  const [data, setData] = useState<UpsetPlotData>()\n  const [error, setError] = useState<string>()\n  const [selection, setSelection] = useState(null as ISetLike<any> | null)\n\n  const { colorPalette } = getColorPalette(rgbIndex, 2)\n  const updateFontSizes: UpSetFontSizes = {\n    setLabel: '14px',\n  }\n\n  useEffect(() => {\n    let isCancelled: boolean = false\n    const getPlotData = async () => {\n      setIsLoading(true)\n      try {\n        const entityId = parseEntityIdFromSqlStatement(sql)\n        const partMask = SynapseConstants.BUNDLE_MASK_QUERY_RESULTS\n        const queryRequest: QueryBundleRequest = {\n          partMask,\n          concreteType:\n            'org.sagebionetworks.repo.model.table.QueryBundleRequest',\n          entityId,\n          query: {\n            sql,\n          },\n        }\n        const { queryResult } = await SynapseClient.getFullQueryTableResults(\n          queryRequest,\n          accessToken,\n        )\n        // transform query data into plot data, and store.\n        // collect all values for each key\n        const keyValuesMap = {}\n        // keyValuesMap looks like { 'A': {name: 'A', sets: ['S1', 'S2'] }, 'B': { name: 'B', sets: ['S1'] }, ... }\n        // It's a little redudant, but makes the next step much easier.\n\n        const caseInsensitiveSetNames = {}\n        // caseInsensitiveSetNames looks like { 'RNASEQ': 'rnaSeq', 'NOMe-SEQ': 'NOMe-seq'}.\n\n        for (const row of queryResult?.queryResults.rows ?? []) {\n          for (let j = 1; j < row.values.length; j += 1) {\n            const rowValues: string[] = row.values as string[]\n            if (rowValues.some(value => value === null)) {\n              console.warn('Row has null value(s) when no nulls expected')\n            }\n\n            const key = rowValues[0]\n            let newValue = rowValues[j]\n            keyValuesMap[key] = keyValuesMap[key] || {}\n            keyValuesMap[key].name = key\n\n            keyValuesMap[key].sets = keyValuesMap[key].sets || []\n            const found = keyValuesMap[key].sets.find((v: any) => v == newValue)\n            if (!found && newValue) {\n              if (caseInsensitiveSetNames[newValue.toUpperCase()]) {\n                newValue = caseInsensitiveSetNames[newValue.toUpperCase()]\n              } else {\n                caseInsensitiveSetNames[newValue.toUpperCase()] = newValue\n              }\n              keyValuesMap[key].sets.push(newValue)\n            }\n          }\n        }\n        // now create the expected elems set\n        const elems: any[] = Object.values(keyValuesMap)\n        // elems looks like [{ name: 'A', sets: ['S1', 'S2'] }, { name: 'B', sets: ['S1'] }, ...]\n        const sets = extractSets(elems)\n        // PORTALS-1673: sort by assay name\n        const sortedSets = (sets as any).sort(\n          (a: { name: string }, b: { name: string }) => {\n            return ('' + b.name).localeCompare(a.name)\n          },\n        )\n\n        const combinations = generateCombinations(sortedSets, {\n          type: 'intersection',\n          min: 1,\n          limit: maxBarCount,\n          order: 'cardinality:desc',\n        })\n        if (!isCancelled) {\n          setData({ sets, combinations })\n          setIsLoading(false)\n        }\n      } catch (err) {\n        if (!isCancelled) {\n          setIsLoading(false)\n          let errorMessage = err['reason']\n          if (!errorMessage) {\n            console.error(err)\n            errorMessage = 'Error retrieving data'\n          }\n          setError(errorMessage)\n        }\n      }\n    }\n    getPlotData()\n    return () => {\n      isCancelled = true\n    }\n  }, [sql, accessToken])\n\n  return (\n    <>\n      {isLoading && loadingScreen}\n      {!isLoading && data && (\n        <SizeMe>\n          {({ size }) => (\n            <div className=\"UpsetPlot bootstrap-4-backport\">\n              <UpSetJS\n                sets={data.sets}\n                combinations={data.combinations}\n                width={size.width!}\n                height={height}\n                onHover={setSelection}\n                // onClick={setSelection}\n                selection={selection}\n                color={colorPalette[0]}\n                selectionColor={colorPalette[0]}\n                hasSelectionOpacity={0.3}\n                // alternatingBackgroundColor={false}\n                setName={setName?.toUpperCase()}\n                combinationName={combinationName?.toUpperCase()}\n                fontFamily=\"Lato, sans-serif\"\n                fontSizes={updateFontSizes}\n                exportButtons={false}\n                notMemberColor=\"transparent\"\n              />\n              {summaryLink && summaryLinkText && (\n                <div className=\"UpsetPlot__summary\">\n                  <Button\n                    variant=\"secondary\"\n                    size=\"lg\"\n                    className=\"pill\"\n                    href={summaryLink}\n                  >\n                    {summaryLinkText}\n                  </Button>\n                </div>\n              )}\n            </div>\n          )}\n        </SizeMe>\n      )}\n      <ErrorBanner error={error} />\n    </>\n  )\n}\n\nexport default UpsetPlot\n"],"names":["isSetLike","node","Array","from","classList","find","d","startsWith","slice","styleId","_a","_b","querySelector","textContent","EMPTY_OBJECT","EMPTY_ARRAY$2","DEFAULT_FONT_SIZES","setLabel","axisTick","chartLabel","barLabel","legend","description","title","valueLabel","exportLabel","DEFAULT_WIDTH_RATIO","DEFAULT_HEIGHT_RATIO","DEFAULT_COMBINATIONS","type","order","FONT_SIZES_KEYS","Object","keys","OVERFLOW_OPACITY_FACTOR","OVERFLOW_PADDING_FACTOR","lightTheme","selectionColor","color","hasSelectionColor","opacity","hasSelectionOpacity","textColor","hoverHintColor","notMemberColor","alternatingBackgroundColor","valueTextColor","strokeColor","backgroundColor","filled","darkTheme","vegaTheme","theme","combinations","isArray","rules","_jsx","base","props","others","getDefaultTheme","assign","queryLegend","queries","length","padding","selection","fontFamily","exportButtons","className","fontSizes","classNames","style","styles","toKey","tooltips","styleFactory","fillGeneric","barPadding","dotPadding","combinationName","areCombinations$1","barLabelOffset","setNameAxisOffset","combinationNameAxisOffset","setName","widthRatios","heightRatios","setLabelAlignment","numericScale","bandScale","childrenFactories","setAddons","combinationAddons","setAddonPadding","combinationAddonPadding","emptySelection","fillDefaultsG","toRemove","clone","cloneNode","dataset","querySelectorAll","forEach","remove","XMLSerializer","serializeToString","b","Blob","createSVG","extractStyleId","chartTitle","extractTitle","url","URL","createObjectURL","downloadUrl","ownerDocument","revokeObjectURL","Promise","resolve","toPNG","then","purl","canvas","createElement","bb","getBoundingClientRect","width","height","ctx","getContext","img","Image","onload","drawImage","png","toDataURL","src","doc","a","href","position","left","top","download","body","appendChild","click","svg","_c","_d","_e","resolveStyle","getComputedStyle","defaultView","window","sets","map","set","name","cardinality","Number","parseInt","reverse","parseFloat","getAttribute","fill","fillNotMember","csName","n","translateX","v","match","translateY","setWidth","csWidth","firstElementChild","children","csHeight","labelWidth","setHeight","radius","hasPrimarySelection","hasQuery","hasSelection","elem","i","highlightedCombination","filter","field","oneOf","equal","$schema","extractDescription","datasets","c","partOf","nsets","concat","s","includes","vconcat","hconcat","mark","data","transform","layer","tooltip","align","baseline","dy","encoding","text","y","Boolean","x","axis","sort","grid","dx","fontSize","flatten","as","calculate","size","Math","PI","scale","range","domain","y2","config","background","spacing","view","stroke","bar","circle","rule","strokeWidth","labelColor","labelFontSize","titleColor","titleFontSize","spec","createVegaSpec","JSON","stringify","THEME_KEYS","LAYOUT_KEYS","STYLE_KEYS","DUMP_KEYS","full","fillDefaults","r","key","value","defaultValue","empty","sub","fKey","fValue","fDefaultValue","dump","elements","author","mode","attrs","toDumpProps","compress","elems","lookup","Map","toElemIndex","has","get","push","toDump","isElemQuery","isSetQuery","isSetLike$1","undefined","cs","combinationOptions","toUpSetJSDump","toStaticDump","toUpSetJSStaticDump","exportDumpData","MAX_URL_LENGTH","arg","LZString","compressToEncodedURIComponent","searchParams","toString","open","r2","exportStaticDumpData","arg2","delete","w","addEventListener","postMessage","origin","join","_args","random","query","toElemKey","f","setOverlapFactory","intersection","overlapGuesser","noOverlap","elemOverlapOf","ss","overlap","bind","guess","setElemOverlapFactory","endsWith","floor","alignment","alignments","center","right","factory","linearScale","logScale","bandScale$1","sizes","barLabelFontSize","tickFontSize","id","setMaxScale","combinationMaxScale","numericScaleFactory","resolveNumericScale","bandScaleFactory","resolveBandScale","areCombinations","generateCombinations","csKeys","combinationX","dataCSCardinality","reduce","acc","max","maxCSCardinality","combinationYEnd","combinationY","h","orientation","fontSizeHint","labelSize","guessLabelWidth","tickFormat","dataSetCardinality","maxSetCardinality","largestSetLabelWidth","largestCSLabelWidth","addon","ticks","tick","l","label","setShift","setX","setKeys","setY","min","bandwidth","triangleSize","generateId","rv","xAxisWidth","bandWidth","cy","format","labelOffset","yAxisWidth","cx","sk","some","generateOverlapFunction","noGuessPossible","margin","setAddonsBefore","setAddonsAfter","combinationAddonsBefore","combinationAddonsAfter","labelsWidth","combinationHeight","before","after","addons","addonPadding","labels","offset","exportChart","svgWidth","pngWidth","vegaWidth","dumpWidth","shareWidth","space","buttons","_jsxs","vega","share","QueryLegend","React","memo","clsx","q","count","Set","_Fragment","HorizontalTick","pos","tickSizeInner","orient","k","VerticalTick","tickSizeOuter","tickPadding","start","range0","range1","Tick","values","toLocaleString","MultilineText","ref","useRef","lines","setLines","useState","useLayoutEffect","current","childElementCount","getComputedTextLength","len","lineWidth","p","getStartPositionOfChar","num","getCharNumAtPosition","lastIndexOf","used","getEndPositionOfChar","UpSetTitle","descriptionWidth","evt","call","nativeEvent","createOnHandlerData","noop","total","beforeAcc","afterAcc","prop","UpSetAxis","setPosGen","addonPositionGenerator","combinationPosGen","csNameOffset","setNameOffset","UpSetDot","mergeColor","scaled","CombinationChart","yValues","computeOverflowValues","genPosition","onMouseEnter","onMouseLeave","onClick","onContextMenu","onMouseMove","dot","render","SetChart","xValues","anchorOffset","UpSetChart","setChildrenFactory","combinationChildrenFactory","hasClick","hasHover","elemOverlap","secondary","suffix","totalHeight","o","content","j","totalWidth","EMPTY_ARRAY$1","UpSetQueries","someAddon","renderQuery","qs","useMemo","queryOverlap","queryElemOverlap","index","overlapper","wrapAddon","indexOf","EMPTY_ARRAY","selectionOverlap","generateSelectionOverlap","selectionName","generateSelectionName","renderSelection","selectionElemOverlap","elemElemOverlapOf","hasS","propRule","root","hasSFill","hasSStroke","replace","export","onHover","wrap","reset","UpSetJS","forwardRef","styleInfo","deriveStyleDependent$1","sizeInfo","deriveSizeDependent","dataInfo","deriveDataDependent","parseFontSize","rulesHelper","baseRules","useHandler","toAnchor","useCallback","currentTarget","closest","exportVegaLite","exportDump","exportSharedLink","exportSVG","sql","rgbIndex","maxBarCount","summaryLinkText","summaryLink","accessToken","colorPalette","useEffect","getPlotData","setIsLoading","SynapseConstants.BUNDLE_MASK_QUERY_RESULTS","partMask","entityId","queryResult","console","keyValuesMap","newValue","caseInsensitiveSetNames","setData","errorMessage","setError","isCancelled","SizeMe","setSelection","updateFontSizes"],"mappings":"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"}