{"version":3,"file":"EntityLink.76aa19d2.js","sources":["../../src/lib/containers/EntityLink.tsx"],"sourcesContent":["import { Skeleton } from '@material-ui/lab'\nimport React from 'react'\nimport {\n  convertToEntityType,\n  getEntityTypeFromHeader,\n} from '../utils/functions/EntityTypeUtils'\nimport { PRODUCTION_ENDPOINT_CONFIG } from '../utils/functions/getEndpoint'\nimport { useGetEntity } from '../utils/hooks/SynapseAPI/entity/useEntity'\nimport { Entity, EntityHeader } from '../utils/synapseTypes/'\nimport { EntityTypeIcon } from './EntityIcon'\nimport { ErrorBanner } from './ErrorBanner'\n\ntype EntityLinkProps = {\n  entity: string | EntityHeader | Entity\n  versionNumber?: number\n  /** Whether the component should link to the entity page in Synapse. Default true */\n  link?: boolean\n  className?: string\n  /** Whether to display an icon identifying the entity type. Default true */\n  showIcon?: boolean\n  /** The field of the entity to display. Default is 'name' */\n  displayTextField?: keyof Entity\n}\n\nexport const EntityLink = (props: EntityLinkProps) => {\n  const {\n    entity: entityOrId,\n    className,\n    versionNumber,\n    displayTextField = 'name',\n    link = true,\n    showIcon = true,\n  } = props\n\n  let entityId = ''\n  if (typeof entityOrId === 'string') {\n    entityId = entityOrId\n  }\n\n  const { data: fetchedEntity, error } = useGetEntity(entityId, versionNumber, {\n    enabled: !!entityId && typeof entityOrId === 'string',\n  })\n\n  if (fetchedEntity || typeof entityOrId !== 'string') {\n    const entity = fetchedEntity ?? (entityOrId as Entity | EntityHeader)\n    let type\n    if ('concreteType' in entity) {\n      type = convertToEntityType(entity.concreteType)\n    } else {\n      type = getEntityTypeFromHeader(entity)\n    }\n\n    if (link) {\n      return (\n        <a\n          className={className}\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          href={`${PRODUCTION_ENDPOINT_CONFIG.PORTAL}#!Synapse:${entity.id!}${\n            versionNumber ? `.${versionNumber}` : ''\n          }`}\n        >\n          {showIcon && (\n            <EntityTypeIcon type={type} style={{ marginRight: '6px' }} />\n          )}\n          {entity[displayTextField]}\n        </a>\n      )\n    } else {\n      return (\n        <p className={className}>\n          <EntityTypeIcon type={type} style={{ marginRight: '6px' }} />\n          {entity[displayTextField]}\n        </p>\n      )\n    }\n  } else if (error) {\n    return <ErrorBanner error={error} />\n  } else {\n    return <Skeleton variant=\"rect\" width=\"100\" />\n  }\n}\n"],"names":["entityOrId","className","versionNumber","entityId","fetchedEntity","error","type","_jsxs","_jsx"],"mappings":"mSAwBO,KAAA,GAAA,AAAA,GAAA,CACL,KAAA,CAAM,OAAA,EACIA,YACRC,gBACAC,mBAAAA,OACmB,OAAA,GACZ,WAAA,IACI,EAGb,GAAA,GAAA,GACA,AAAA,MAAA,IAAA,UACEC,GAAAA,GAGF,KAAA,CAAM,KAAA,EAAQC,SAAeC,EAAAA,EAAAA,EAAAA,CAAgD,QAAA,CAAA,CAAA,GAAA,MAAA,IAAA,QAC9B,CAAA,EAG/C,GAAA,GAAA,MAAA,IAAA,SAAA,CACE,KAAA,GAAA,UAAA,EACA,GAAA,GAOA,MANA,AAAA,gBAAA,GACEC,EAAAA,EAAAA,EAAAA,YAAAA,EAEAA,EAAAA,EAAAA,CAAAA,EAGF,EACEC,EAAA,IAAA,CACE,YACE,OAAA,SACO,IAAA,sBACH,KAAA,GAAA,EAAA,mBAAA,EAAA,KAAA,EAAA,IAAA,IAAA,KAEoC,SAAA,CAAA,GAAAC,EAAA,EAAA,CAItC,OAAgB,MAAA,CAAmB,YAAA,KAAe,CAAf,CAAA,EAAA,EAAA,EAAA,CATvC,CAAA,EAeFD,EAAA,IAAA,CACE,YAAG,SAAA,CAAAC,EAAA,EAAA,CACD,OAAgB,MAAA,CAAmB,YAAA,KAAe,CAAf,CAAA,EAAA,EAAA,EAAA,CADrC,CAAA,CAKH,KAAA,OAAA,GAEDA,EAAA,EAAA,CAAO,OAAa,CAAA,EAEpBA,EAAA,EAAA,CAAO,QAAA,OAAkB,MAAA,KAAa,CAAA,CAEzC"}