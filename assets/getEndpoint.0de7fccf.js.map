{"version":3,"file":"getEndpoint.0de7fccf.js","sources":["../../src/lib/utils/functions/getEndpoint.ts"],"sourcesContent":["export enum BackendDestinationEnum {\n  REPO_ENDPOINT,\n  PORTAL_ENDPOINT,\n}\n\n// Encodes the portal and repo service destinations\nexport type EndpointObject = {\n  REPO: string\n  PORTAL: string\n}\n\nconst KNOWN_SYNAPSE_ORG_URLS = [\n  'www.synapse.org',\n  'staging.synapse.org',\n  'tst.synapse.org',\n  'portal-dev.dev.sagebase.org',\n  '127.0.0.1',\n]\n\nexport const getSynapsePortalEndpoint = (hostname: string): string => {\n  return KNOWN_SYNAPSE_ORG_URLS.includes(hostname.toLowerCase())\n    ? '/'\n    : 'https://www.synapse.org/'\n}\nconst DEFAULT_SYNAPSE_PORTAL = getSynapsePortalEndpoint(\n  window.location.hostname,\n)\n\nexport const PRODUCTION_ENDPOINT_CONFIG: EndpointObject = {\n  REPO: 'https://repo-prod.prod.sagebase.org',\n  PORTAL: DEFAULT_SYNAPSE_PORTAL,\n}\n\n// Given an endpoint will return the specific stack object\nexport const getEndpoint = (endpoint: BackendDestinationEnum): string => {\n  let endpoint_config = PRODUCTION_ENDPOINT_CONFIG\n  // @ts-ignore if overriding endpoint config\n  if (window.SRC && window.SRC.OVERRIDE_ENDPOINT_CONFIG) {\n    // @ts-ignore\n    endpoint_config = window.SRC && window.SRC.OVERRIDE_ENDPOINT_CONFIG\n  }\n  const { PORTAL, REPO } = endpoint_config\n  if (!PORTAL || !REPO) {\n    throw Error('Error failed to specify endpoints, cannot make call')\n  }\n  if (endpoint === BackendDestinationEnum.PORTAL_ENDPOINT) {\n    return PORTAL\n  }\n  return REPO\n}\n"],"names":[],"mappings":"AAAY,GAAA,IAAA,GACV,GAAA,EAAA,cAAA,GAAA,gBACA,EAAA,EAAA,gBAAA,GAAA,kBAFU,IAAA,GAAA,CAAA,CAAA,EAWZ,KAAM,GAAyB,CAC7B,kBACA,sBACA,kBACA,8BACA,WACF,EAEa,EAA2B,AAAC,GAChC,EAAuB,SAAS,EAAS,YAAY,CAAC,EACzD,IACA,2BAEA,EAAyB,EAC7B,OAAO,SAAS,QAClB,EAEa,EAA6C,CACxD,KAAM,sCACN,OAAQ,CACV,EAGa,EAAc,AAAC,GAA6C,CACvE,GAAI,GAAkB,EAEtB,AAAI,OAAO,KAAO,OAAO,IAAI,0BAET,GAAA,OAAO,KAAO,OAAO,IAAI,0BAEvC,KAAA,CAAE,SAAQ,QAAS,EACrB,GAAA,CAAC,GAAU,CAAC,EACd,KAAM,OAAM,qDAAqD,EAEnE,MAAI,KAAa,EACR,EAEF,CACT"}