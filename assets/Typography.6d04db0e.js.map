{"version":3,"file":"Typography.6d04db0e.js","sources":["../../node_modules/@material-ui/core/esm/Typography/Typography.js","../../src/lib/utils/typography/Typography.styles.tsx","../../src/lib/utils/typography/Typography.tsx"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      margin: 0\n    },\n\n    /* Styles applied to the root element if `variant=\"body2\"`. */\n    body2: theme.typography.body2,\n\n    /* Styles applied to the root element if `variant=\"body1\"`. */\n    body1: theme.typography.body1,\n\n    /* Styles applied to the root element if `variant=\"caption\"`. */\n    caption: theme.typography.caption,\n\n    /* Styles applied to the root element if `variant=\"button\"`. */\n    button: theme.typography.button,\n\n    /* Styles applied to the root element if `variant=\"h1\"`. */\n    h1: theme.typography.h1,\n\n    /* Styles applied to the root element if `variant=\"h2\"`. */\n    h2: theme.typography.h2,\n\n    /* Styles applied to the root element if `variant=\"h3\"`. */\n    h3: theme.typography.h3,\n\n    /* Styles applied to the root element if `variant=\"h4\"`. */\n    h4: theme.typography.h4,\n\n    /* Styles applied to the root element if `variant=\"h5\"`. */\n    h5: theme.typography.h5,\n\n    /* Styles applied to the root element if `variant=\"h6\"`. */\n    h6: theme.typography.h6,\n\n    /* Styles applied to the root element if `variant=\"subtitle1\"`. */\n    subtitle1: theme.typography.subtitle1,\n\n    /* Styles applied to the root element if `variant=\"subtitle2\"`. */\n    subtitle2: theme.typography.subtitle2,\n\n    /* Styles applied to the root element if `variant=\"overline\"`. */\n    overline: theme.typography.overline,\n\n    /* Styles applied to the root element if `variant=\"srOnly\"`. Only accessible to screen readers. */\n    srOnly: {\n      position: 'absolute',\n      height: 1,\n      width: 1,\n      overflow: 'hidden'\n    },\n\n    /* Styles applied to the root element if `align=\"left\"`. */\n    alignLeft: {\n      textAlign: 'left'\n    },\n\n    /* Styles applied to the root element if `align=\"center\"`. */\n    alignCenter: {\n      textAlign: 'center'\n    },\n\n    /* Styles applied to the root element if `align=\"right\"`. */\n    alignRight: {\n      textAlign: 'right'\n    },\n\n    /* Styles applied to the root element if `align=\"justify\"`. */\n    alignJustify: {\n      textAlign: 'justify'\n    },\n\n    /* Styles applied to the root element if `nowrap={true}`. */\n    noWrap: {\n      overflow: 'hidden',\n      textOverflow: 'ellipsis',\n      whiteSpace: 'nowrap'\n    },\n\n    /* Styles applied to the root element if `gutterBottom={true}`. */\n    gutterBottom: {\n      marginBottom: '0.35em'\n    },\n\n    /* Styles applied to the root element if `paragraph={true}`. */\n    paragraph: {\n      marginBottom: 16\n    },\n\n    /* Styles applied to the root element if `color=\"inherit\"`. */\n    colorInherit: {\n      color: 'inherit'\n    },\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      color: theme.palette.primary.main\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      color: theme.palette.secondary.main\n    },\n\n    /* Styles applied to the root element if `color=\"textPrimary\"`. */\n    colorTextPrimary: {\n      color: theme.palette.text.primary\n    },\n\n    /* Styles applied to the root element if `color=\"textSecondary\"`. */\n    colorTextSecondary: {\n      color: theme.palette.text.secondary\n    },\n\n    /* Styles applied to the root element if `color=\"error\"`. */\n    colorError: {\n      color: theme.palette.error.main\n    },\n\n    /* Styles applied to the root element if `display=\"inline\"`. */\n    displayInline: {\n      display: 'inline'\n    },\n\n    /* Styles applied to the root element if `display=\"block\"`. */\n    displayBlock: {\n      display: 'block'\n    }\n  };\n};\nvar defaultVariantMapping = {\n  h1: 'h1',\n  h2: 'h2',\n  h3: 'h3',\n  h4: 'h4',\n  h5: 'h5',\n  h6: 'h6',\n  subtitle1: 'h6',\n  subtitle2: 'h6',\n  body1: 'p',\n  body2: 'p'\n};\nvar Typography = /*#__PURE__*/React.forwardRef(function Typography(props, ref) {\n  var _props$align = props.align,\n      align = _props$align === void 0 ? 'inherit' : _props$align,\n      classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'initial' : _props$color,\n      component = props.component,\n      _props$display = props.display,\n      display = _props$display === void 0 ? 'initial' : _props$display,\n      _props$gutterBottom = props.gutterBottom,\n      gutterBottom = _props$gutterBottom === void 0 ? false : _props$gutterBottom,\n      _props$noWrap = props.noWrap,\n      noWrap = _props$noWrap === void 0 ? false : _props$noWrap,\n      _props$paragraph = props.paragraph,\n      paragraph = _props$paragraph === void 0 ? false : _props$paragraph,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'body1' : _props$variant,\n      _props$variantMapping = props.variantMapping,\n      variantMapping = _props$variantMapping === void 0 ? defaultVariantMapping : _props$variantMapping,\n      other = _objectWithoutProperties(props, [\"align\", \"classes\", \"className\", \"color\", \"component\", \"display\", \"gutterBottom\", \"noWrap\", \"paragraph\", \"variant\", \"variantMapping\"]);\n\n  var Component = component || (paragraph ? 'p' : variantMapping[variant] || defaultVariantMapping[variant]) || 'span';\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, variant !== 'inherit' && classes[variant], color !== 'initial' && classes[\"color\".concat(capitalize(color))], noWrap && classes.noWrap, gutterBottom && classes.gutterBottom, paragraph && classes.paragraph, align !== 'inherit' && classes[\"align\".concat(capitalize(align))], display !== 'initial' && classes[\"display\".concat(capitalize(display))]),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Typography.propTypes = {\n  /**\n   * Set the text-align on the component.\n   */\n  align: PropTypes.oneOf(['inherit', 'left', 'center', 'right', 'justify']),\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['initial', 'inherit', 'primary', 'secondary', 'textPrimary', 'textSecondary', 'error']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   * Overrides the behavior of the `variantMapping` prop.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * Controls the display type\n   */\n  display: PropTypes.oneOf(['initial', 'block', 'inline']),\n\n  /**\n   * If `true`, the text will have a bottom margin.\n   */\n  gutterBottom: PropTypes.bool,\n\n  /**\n   * If `true`, the text will not wrap, but instead will truncate with a text overflow ellipsis.\n   *\n   * Note that text overflow can only happen with block or inline-block level elements\n   * (the element needs to have a width in order to overflow).\n   */\n  noWrap: PropTypes.bool,\n\n  /**\n   * If `true`, the text will have a bottom margin.\n   */\n  paragraph: PropTypes.bool,\n\n  /**\n   * Applies the theme typography styles.\n   */\n  variant: PropTypes.oneOf(['h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'subtitle1', 'subtitle2', 'body1', 'body2', 'caption', 'button', 'overline', 'srOnly', 'inherit']),\n\n  /**\n   * The component maps the variant prop to a range of different HTML element types.\n   * For instance, subtitle1 to `<h6>`.\n   * If you wish to change that mapping, you can provide your own.\n   * Alternatively, you can use the `component` prop.\n   */\n  variantMapping: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTypography'\n})(Typography);","import { makeStyles } from '@material-ui/core'\n\nconst basicFontStyle = {\n  fontFamily: 'Lato',\n  fontStyle: 'normal',\n  letterSpacing: '0px',\n}\n\nconst useTypographyStyle = makeStyles(\n  () => ({\n    headline1: {\n      ...basicFontStyle,\n      fontSize: '24px',\n      fontWeight: 700,\n      lineHeight: '28px',\n      marginTop: '28px',\n    },\n    headline2: {\n      ...basicFontStyle,\n      fontSize: '20px',\n      fontWeight: 400,\n      lineHeight: '24px',\n      marginTop: '24px',\n    },\n    headline3: {\n      ...basicFontStyle,\n      fontSize: '18px',\n      fontWeight: 700,\n      lineHeight: '20px',\n      marginTop: '20px',\n    },\n    body1: {\n      ...basicFontStyle,\n      fontSize: '16px',\n      fontWeight: 400,\n      lineHeight: '24px',\n      marginTop: '24px',\n    },\n    body2: {\n      ...basicFontStyle,\n      fontSize: '16px',\n      fontWeight: 400,\n      lineHeight: '24px',\n      marginTop: '24px',\n      fontStyle: 'italic',\n    },\n    breadcrumb1: {\n      ...basicFontStyle,\n      fontSize: '14px',\n      fontWeight: 400,\n      lineHeight: '16px',\n      textTransform: 'uppercase',\n    },\n    breadcrumb2: {\n      ...basicFontStyle,\n      fontSize: '14px',\n      fontWeight: 700,\n      lineHeight: '16px',\n      textTransform: 'uppercase',\n    },\n    smallText1: {\n      ...basicFontStyle,\n      fontSize: '14px',\n      fontWeight: 400,\n      lineHeight: '16px',\n      marginTop: '16px',\n    },\n    smallText2: {\n      ...basicFontStyle,\n      fontSize: '14px',\n      fontWeight: 700,\n      lineHeight: '16px',\n      marginTop: '16px',\n    },\n    smallLink: {\n      ...basicFontStyle,\n      fontSize: '14px',\n      fontWeight: 900,\n      lineHeight: '16px',\n      marginTop: '16px',\n    },\n    label: {\n      ...basicFontStyle,\n      fontSize: '14px',\n      fontWeight: 700,\n      lineHeight: '16px',\n    },\n    buttonLink: {\n      ...basicFontStyle,\n      fontSize: '16px',\n      fontWeight: 900,\n      lineHeight: '20px',\n    },\n    hintText: {\n      ...basicFontStyle,\n      fontSize: '16px',\n      fontWeight: 400,\n      lineHeight: '24px',\n    },\n    sectionTitle: {\n      ...basicFontStyle,\n      fontSize: '21px',\n      fontWeight: 700,\n      lineHeight: '25px',\n      marginTop: '25px',\n      textTransform: 'uppercase',\n    },\n    subsectionHeader: {\n      ...basicFontStyle,\n      fontSize: '18px',\n      fontWeight: 700,\n      lineHeight: '21px',\n      marginTop: '21px',\n    },\n    dataFieldKey: {\n      ...basicFontStyle,\n      fontSize: '14px',\n      fontWeight: 400,\n      lineHeight: '16px',\n      marginTop: '16px',\n      color: '#878e95', // gray-700\n      textTransform: 'uppercase',\n    },\n  }),\n  { name: 'SRC-Typography' },\n)\n\nexport default useTypographyStyle\n","import { TypographyProps, Typography as MUITypography } from '@material-ui/core'\nimport classNames from 'classnames'\nimport React, { ElementType, FC } from 'react'\nimport useTypographyStyle from './Typography.styles'\n\ninterface ITypography extends Omit<TypographyProps, 'variant'> {\n  variant:\n    | 'headline1'\n    | 'headline2'\n    | 'headline3'\n    | 'body1'\n    | 'body2'\n    | 'breadcrumb1'\n    | 'breadcrumb2'\n    | 'smallText1'\n    | 'smallText2'\n    | 'smallLink'\n    | 'label'\n    | 'buttonLink'\n    | 'hintText'\n    | 'sectionTitle'\n    | 'subsectionHeader'\n    | 'dataFieldKey'\n  component?: ElementType\n}\n\nconst Typography: FC<ITypography> = props => {\n  const classes = useTypographyStyle()\n  const isCustom = Object.keys(classes).indexOf(props.variant) > -1\n  return (\n    <MUITypography\n      {...props}\n      variant={isCustom ? undefined : (props.variant as any)}\n      className={\n        isCustom\n          ? classNames(classes[props.variant], props.className)\n          : props.className\n      }\n    >\n      {props.children}\n    </MUITypography>\n  )\n}\n\nexport default Typography\n"],"names":["Typography","basicFontStyle","fontFamily","fontStyle","letterSpacing","useTypographyStyle","makeStyles","headline1","fontSize","fontWeight","lineHeight","marginTop","headline2","headline3","body1","body2","breadcrumb1","textTransform","breadcrumb2","smallText1","smallText2","smallLink","label","buttonLink","hintText","sectionTitle","subsectionHeader","dataFieldKey","color","name","_jsx","MUITypography","props","variant","className","children"],"mappings":"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"}