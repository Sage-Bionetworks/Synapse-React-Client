import{a4 as w,c7 as E}from"./index.f6f857f5.js";import{r as l,a as C,j as e}from"./jsx-runtime.6efef3f0.js";import{d as R}from"./dayjs.min.8b3c16f0.js";import{e as N}from"./AccessRequirementList.3b72d65e.js";import{l as v}from"./LoadingScreen.ab408232.js";import{B as M}from"./Button.113b0f45.js";import{i as D}from"./SynapseConstants.aef18750.js";import"./index.527b2819.js";import"./iframe.b3705b98.js";import"./styled.3d34e36b.js";import"./Tooltip.9a185035.js";import"./SvgIcon.3e939805.js";import"./useTheme.2b3579a1.js";import"./TransitionGroupContext.962689fd.js";import"./FullWidthAlert.87654e2f.js";import"./hook.4287fc8d.js";import"./createWithBsPrefix.dc61fcfa.js";import"./divWithClassName.39d1e3e2.js";import"./index.35ce73ec.js";import"./Typography.a863760e.js";import"./Fade.ee3053ca.js";import"./isArray.ce0fc8e6.js";import"./getEndpoint.f1f195f5.js";import"./IconSvg.a0ac0502.js";import"./IconButton.a32a330b.js";import"./ButtonBase.42d7166c.js";import"./emotion-react.browser.esm.89334e8c.js";import"./Link.f540f0ea.js";import"./Button.bcc1fc04.js";import"./useGetInfoFromIds.46c54480.js";import"./use-deep-compare-effect.esm.fa498af3.js";import"./uniq.e676b014.js";import"./_baseSlice.50189bc5.js";import"./toInteger.a03e46d2.js";import"./isSymbol.7ee325a2.js";import"./_cacheHas.c0fe68d8.js";import"./without.e36cd559.js";import"./toString.931d2742.js";import"./_Set.6076d8f1.js";import"./_setToArray.a82100c8.js";import"./queryKeys.f96c2872.js";import"./UserCard.89fae007.js";import"./IconCopy.7b0e586f.js";import"./SkeletonTable.43182f64.js";import"./times.ce6f9568.js";import"./Skeleton.c73b94b2.js";import"./ToastMessage.a9162853.js";import"./removeClass.27874bcb.js";import"./hasClass.56fd144a.js";import"./uniqueId.a881a904.js";import"./Overlay.6c0a21b1.js";import"./contains.789c8f44.js";import"./usePopperMarginModifiers.0eff8b53.js";import"./useWaitForDOMRef.265683e8.js";import"./RegularExpressions.3cd69849.js";import"./react-intersection-observer.esm.d0985ce6.js";import"./useInfiniteQuery.6ce8309d.js";import"./DateFormatter.e4b2fe07.js";import"./utc.cd0b4238.js";import"./EntityIcon.3b4d81e3.js";import"./core.esm.7728abb9.js";import"./pick.58e246c9.js";import"./_baseClone.27a5ae2d.js";import"./isEmpty.8554a593.js";import"./isEqual.4b0c3d7f.js";import"./index.browser.0c4417bc.js";import"./union.ac9c033b.js";import"./CustomSelectWidget.227adc34.js";import"./Select-54ac8379.esm.1fa52e56.js";import"./isString.ca431768.js";import"./factory.b6e4d6a7.js";import"./sqlFunctions.ba594ce5.js";import"./QueryFilter.30eec546.js";import"./useEntity.7761124a.js";import"./useMutation.905ce15d.js";import"./SynapseTableConstants.07ecdebd.js";import"./FacetNav.8165148a.js";import"./queryUtils.edb96664.js";import"./cloneDeep.53ea7f1e.js";import"./NoSearchResults.e2971c16.js";import"./NoData.867fffb7.js";import"./unCamelCase.07e38083.js";import"./ColumnType.0fc7f115.js";import"./useGetQueryResultBundle.1228df4a.js";import"./ElementWithTooltip.c54d261b.js";import"./Dropdown.5bd05552.js";import"./usePrevious.234e4743.js";import"./isRequiredForA11y.20ed4857.js";import"./Checkbox.fd5e6b6d.js";import"./RadioGroup.bc45bd63.js";import"./RangeSlider.6c9bce2a.js";import"./react-sizeme.db3800c3.js";import"./ColorGradient.16f0e0f2.js";import"./colorPalette.8145e2e2.js";import"./Modal.db10ea3b.js";import"./inheritsLoose.0f44c725.js";import"./SelectionCriteriaPill.eb4309d9.js";import"./Close.2b98c3fe.js";import"./relativeTime.220aea01.js";import"./useDownloadList.06df0856.js";import"./QueryCount.62cf06b4.js";import"./react-select.esm.a9ae3588.js";import"./IconList.27dad11c.js";import"./UserCardList.4d0cf000.js";import"./useAccessRequirements.eca13162.js";import"./RestrictionInformation.edfbac5a.js";import"./ManagedACTAccessRequirementStatus.be369a71.js";import"./FileUpload.b7cbe231.js";import"./UserSearchBox.bc3fcd89.js";import"./UserOrTeamBadge.fdcbf44a.js";import"./EntityLink.8a97d7e0.js";import"./ErrorChip.8bb6b297.js";import"./SynapseVideo.b2125f69.js";const s=({tableEntityId:o})=>{const{accessToken:c}=w(),[i,f]=l.exports.useState(),[n,T]=l.exports.useState(3);let u=!0;if(l.exports.useEffect(()=>((()=>{if(u){if(i)return;const m={concreteType:"org.sagebionetworks.repo.model.table.QueryBundleRequest",query:{sql:`SELECT "categories", "date", "title", "mdDescription" FROM ${o} ORDER BY "date" desc`},entityId:o,partMask:D};E(m,c).then(r=>{var p;f((p=r.queryResult)==null?void 0:p.queryResults)})}})(),()=>{u=!1}),[o,c]),!i)return v;const a=i.headers,b=a.findIndex(t=>t.name==="categories"),S=a.findIndex(t=>t.name==="date"),F=a.findIndex(t=>t.name==="title"),g=a.findIndex(t=>t.name==="mdDescription");return C("div",{className:"Feed bootstrap-4-backport",children:[e("div",{className:"FeedItems",children:i.rows.map((t,m)=>{if(m>n-1)return;const r=t.values;r.some(d=>d===null)&&console.warn("Row has null value(s) when no nulls expected");const p=JSON.parse(r[b]),I=r[S],x=r[F],h=r[g];return e("div",{className:"FeedItem",children:C("div",{children:[p&&e("div",{className:"FeedItemCategories",children:p.map((d,_)=>e("div",{className:"FeedItemCategory",children:d},`row-${m},categoryIndex-${_}`))}),e("p",{className:"FeedItemDate",children:R(new Date(parseInt(I))).format("MMMM YYYY")}),e("p",{className:"FeedItemTitle",children:x}),e("div",{className:"FeedItemDescription",children:e(N,{markdown:h})})]})},`row-${m}`)})}),i.rows.length>n&&e("div",{className:"FeedViewAllNewsButtonContainer",children:e(M,{variant:"primary",size:"lg",className:"pill",onClick:()=>T(n+3),children:"VIEW MORE NEWS"})})]})},y=s;try{s.displayName="TableFeedCards",s.__docgenInfo={description:"",displayName:"TableFeedCards",props:{tableEntityId:{defaultValue:null,description:"",name:"tableEntityId",required:!0,type:{name:"string"}}}},typeof STORYBOOK_REACT_CLASSES<"u"&&(STORYBOOK_REACT_CLASSES["src/lib/containers/TableFeedCards.tsx#TableFeedCards"]={docgenInfo:s.__docgenInfo,name:"TableFeedCards",path:"src/lib/containers/TableFeedCards.tsx#TableFeedCards"})}catch{}const Qt={parameters:{storySource:{source:`import React from 'react'
import { ComponentStory, ComponentMeta } from '@storybook/react'
import TableFeedCards from './TableFeedCards'

export default {
  title: 'Synapse/TableFeedCards',
  component: TableFeedCards,
} as ComponentMeta<typeof TableFeedCards>

const Template: ComponentStory<typeof TableFeedCards> = args => (
  <TableFeedCards {...args} />
)

export const Demo = Template.bind({})
Demo.args = {
  tableEntityId: 'syn23520190',
}
`,locationsMap:{demo:{startLoc:{col:56,line:10},endLoc:{col:1,line:12},startBody:{col:56,line:10},endBody:{col:1,line:12}}}}},title:"Synapse/TableFeedCards",component:y},O=o=>e(y,{...o}),B=O.bind({});B.args={tableEntityId:"syn23520190"};const $t=["Demo"];export{B as Demo,$t as __namedExportsOrder,Qt as default};
