{"version":3,"file":"StandaloneQueryWrapper.stories.42830d2c.js","sources":["../../src/lib/containers/table/StandaloneQueryWrapper.tsx"],"sourcesContent":["import React from 'react'\nimport { cloneDeep } from 'lodash-es'\nimport {\n  insertConditionsFromSearchParams,\n  parseEntityIdFromSqlStatement,\n  SQLOperator,\n} from '../../utils/functions/sqlFunctions'\nimport SynapseTable, { SynapseTableProps } from './SynapseTable'\nimport { QueryBundleRequest } from '../../utils/synapseTypes'\nimport { SynapseConstants } from '../../utils'\nimport { QueryWrapper } from '../QueryWrapper'\nimport { QueryContextConsumer } from '../QueryContext'\nimport TopLevelControls, { TopLevelControlsProps } from './TopLevelControls'\nimport FullTextSearch from '../FullTextSearch'\nimport SearchV2, { SearchV2Props } from '../SearchV2'\nimport { useGetEntity } from '../../utils/hooks/SynapseAPI/entity/useEntity'\nimport TotalQueryResults from '../TotalQueryResults'\nimport SqlEditor from '../SqlEditor'\nimport { useSynapseContext } from '../../utils/SynapseContext'\nimport {\n  QueryVisualizationContextConsumer,\n  QueryVisualizationWrapper,\n} from '../QueryVisualizationWrapper'\nimport { isTableEntity } from '../../utils/functions/EntityTypeUtils'\nimport LastUpdatedOn from '../query_wrapper_plot_nav/LastUpdatedOn'\n\ntype SearchParams = {\n  searchParams?: {\n    facetValue: string\n  }\n}\nexport type Operator = {\n  sqlOperator?: SQLOperator\n}\n\nexport type QueryCount = {\n  showQueryCount?: boolean\n}\n\ntype OwnProps = {\n  sql: string\n  rgbIndex?: number\n  unitDescription?: string\n  facetAliases?: Record<string, string>\n  showTopLevelControls?: boolean\n  searchConfiguration?: Omit<\n    SearchV2Props,\n    'queryContext' | 'queryVisualizationContext'\n  >\n  showLastUpdatedOn?: boolean\n} & Omit<TopLevelControlsProps, 'entityId'>\n\nexport type StandaloneQueryWrapperProps = Partial<\n  Omit<\n    SynapseTableProps,\n    'synapseContext' | 'queryContext' | 'queryVisualizationContext'\n  >\n> &\n  SearchParams &\n  Operator &\n  OwnProps\n\nconst generateInitQueryRequest = (sql: string): QueryBundleRequest => {\n  return cloneDeep({\n    partMask:\n      SynapseConstants.BUNDLE_MASK_QUERY_FACETS |\n      SynapseConstants.BUNDLE_MASK_QUERY_COUNT |\n      SynapseConstants.BUNDLE_MASK_QUERY_SELECT_COLUMNS |\n      SynapseConstants.BUNDLE_MASK_QUERY_COLUMN_MODELS |\n      SynapseConstants.BUNDLE_MASK_QUERY_RESULTS |\n      SynapseConstants.BUNDLE_MASK_LAST_UPDATED_ON,\n    entityId: parseEntityIdFromSqlStatement(sql),\n    concreteType: 'org.sagebionetworks.repo.model.table.QueryBundleRequest',\n    query: {\n      sql,\n      limit: 25,\n      offset: 0,\n    },\n  })\n}\n/**\n * This component was initially implemented on the portal side. It renders a SynapseTable if a title is provided.\n * If showTopLevelControls is set to true, then the SynapseTable will also include the TopLevelControls (search, export table, column selection).\n */\nconst StandaloneQueryWrapper: React.FunctionComponent<\n  StandaloneQueryWrapperProps\n> = (props: StandaloneQueryWrapperProps) => {\n  const {\n    title,\n    searchParams,\n    sqlOperator,\n    showAccessColumn,\n    sql,\n    hideDownload,\n    hideQueryCount,\n    name,\n    showTopLevelControls = false,\n    searchConfiguration,\n    unitDescription = 'Results',\n    rgbIndex,\n    showLastUpdatedOn,\n    ...rest\n  } = props\n\n  const derivedQueryRequestFromSearchParams = generateInitQueryRequest(sql)\n\n  if (searchParams) {\n    derivedQueryRequestFromSearchParams.query.sql =\n      insertConditionsFromSearchParams(\n        derivedQueryRequestFromSearchParams.query.sql,\n        searchParams,\n        sqlOperator,\n      )\n  }\n  const synapseContext = useSynapseContext()\n  const entityId = parseEntityIdFromSqlStatement(sql)\n  const { data: entity } = useGetEntity(entityId)\n  return (\n    <QueryWrapper\n      {...rest}\n      initQueryRequest={derivedQueryRequestFromSearchParams}\n    >\n      <QueryVisualizationWrapper\n        rgbIndex={rgbIndex}\n        unitDescription={unitDescription}\n        showLastUpdatedOn={showLastUpdatedOn}\n        {...rest}\n      >\n        <QueryContextConsumer>\n          {queryContext => {\n            if (queryContext === undefined) {\n              throw new Error(\n                'No queryContext found when calling QueryContextConsumer',\n              )\n            }\n            return (\n              <QueryVisualizationContextConsumer>\n                {queryVisualizationContext => {\n                  if (queryVisualizationContext === undefined) {\n                    throw new Error(\n                      'No queryVisualizationContext found when calling QueryVisualizationContextConsumer',\n                    )\n                  }\n\n                  return (\n                    <>\n                      {showTopLevelControls && (\n                        <TopLevelControls\n                          showColumnSelection={true}\n                          name={name}\n                          hideDownload={hideDownload}\n                          hideQueryCount={hideQueryCount}\n                          hideFacetFilterControl={true}\n                          hideVisualizationsControl={true}\n                        />\n                      )}\n                      {entity &&\n                      isTableEntity(entity) &&\n                      entity.isSearchEnabled ? (\n                        <FullTextSearch\n                          helpUrl={searchConfiguration?.fullTextSearchHelpURL}\n                        />\n                      ) : (\n                        <SearchV2\n                          {...searchConfiguration}\n                          queryContext={queryContext}\n                          queryVisualizationContext={queryVisualizationContext}\n                        />\n                      )}\n                      <SqlEditor />\n                      {showTopLevelControls && (\n                        <TotalQueryResults frontText={''} />\n                      )}\n                      <SynapseTable\n                        synapseContext={synapseContext}\n                        queryContext={queryContext}\n                        queryVisualizationContext={queryVisualizationContext}\n                        showAccessColumn={showAccessColumn}\n                        title={title}\n                        data-testid=\"SynapseTable\"\n                        {...rest}\n                      />\n                      <LastUpdatedOn />\n                    </>\n                  )\n                }}\n              </QueryVisualizationContextConsumer>\n            )\n          }}\n        </QueryContextConsumer>\n      </QueryVisualizationWrapper>\n    </QueryWrapper>\n  )\n}\n\nexport default StandaloneQueryWrapper\n"],"names":["SynapseConstants.BUNDLE_MASK_QUERY_FACETS","SynapseConstants.BUNDLE_MASK_QUERY_COUNT","SynapseConstants.BUNDLE_MASK_QUERY_SELECT_COLUMNS","SynapseConstants.BUNDLE_MASK_QUERY_COLUMN_MODELS","SynapseConstants.BUNDLE_MASK_QUERY_RESULTS","SynapseConstants.BUNDLE_MASK_LAST_UPDATED_ON","BUNDLE_MASK_LAST_UPDATED_ON","sql","title","searchParams","sqlOperator","showAccessColumn","hideDownload","hideQueryCount","name","searchConfiguration","rgbIndex","showLastUpdatedOn","rest","derivedQueryRequestFromSearchParams","entity","_jsx","_jsxs","_Fragment","TopLevelControls","fullTextSearchHelpURL"],"mappings":"g8HA8DA,KAAA,GAAA,AAAA,GACE,EAAA,CAAiB,SAAAA,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAOIC,SAAAA,EAAAA,CAAAA,EACoB,aAAA,0DACzB,MAAA,CACP,MACLC,MAAAA,GACO,OAAA,CACC,CAHH,CAAA,EAWX,EAAA,AAAA,GAAA,CAGE,KAAA,CAAM,QACJC,eACAC,cACAC,mBACAC,MACAJ,eACAK,iBACAC,OACAC,uBAAAA,GACuB,sBACvBC,kBAAAA,UACkB,WAClBC,uBACAC,GACGC,EAGL,EAAA,EAAA,CAAA,EAEA,AAAA,GACEC,GAAAA,MAAAA,IAAAA,EAAAA,EAAAA,MAAAA,IAAAA,EAAAA,CAAAA,GAOF,KAAA,GAAA,IACA,EAAA,EAAA,CAAA,EACA,CAAM,KAAA,GAAQC,EAAAA,CAAAA,EACd,MAAAC,GAAA,EAAA,CACE,GAAA,EACMH,iBAAAA,EACcC,SAAAA,EAAAA,EAAAA,CAElB,WACE,kBACA,oBACA,GAAA,EACID,SAAAA,EAAAA,EAAAA,CAEJ,SAAA,AAAA,GAAA,CAEI,GAAA,IAAA,OACE,KAAA,IAAA,OAAA,yDAAA,EAIF,MAAAG,GAAA,EAAA,CACE,SAAA,AAAA,GAAA,CAEI,GAAA,IAAA,OACE,KAAA,IAAA,OAAA,mFAAA,EAKF,MAAAC,GAAAC,EAAA,CACE,SAAA,CAAA,GAAAF,EAAAG,EAAA,CAEI,oBAAA,GACuB,OACrB,eACA,iBACA,uBAAA,GACwB,0BAAA,EACG,CAAA,EAAA,GAAA,EAAA,CAAA,GAAA,EAAA,gBAAAH,EAAA,EAAA,CAM7B,QAAA,iBAAA,qBACgCI,CAAAA,EAAAA,EAAAA,EAAAA,CAGhC,GAAA,EACMV,eACJ,2BACA,CAAA,EAAAM,EAAA,EAAA,CAAA,CAAA,EAAA,GAAAA,EAAA,EAAA,CAKF,UAAA,EAA8B,CAAA,EAAAA,EAAA,EAAA,CAEhC,iBACE,eACA,4BACA,mBACA,QACA,cAAA,eACY,GAAA,CACRH,CAAAA,EAAAA,EAAAA,EAAAA,CAAAA,CAAAA,CAAAA,CAnCR,CAAA,CADF,CAyCD,CAAA,CAlDL,CAqDD,CAAA,CA5DH,CAAA,CANF,CAAA,CAuEL,EAED,GAAA,GAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}