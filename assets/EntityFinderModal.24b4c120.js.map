{"version":3,"file":"EntityFinderModal.24b4c120.js","sources":["../../src/lib/containers/entity_finder/EntityFinderModal.tsx"],"sourcesContent":["import React, { useState } from 'react'\nimport { Reference } from '../../utils/synapseTypes'\nimport Typography from '../../utils/typography/Typography'\nimport { FluidModal } from '../FluidModal'\nimport { HelpPopoverProps } from '../HelpPopover'\nimport WarningModal from '../synapse_form_wrapper/WarningModal'\nimport EntityFinder, { EntityFinderProps } from './EntityFinder'\n\nexport const UNSAVED_CHANGES = 'Unsaved Changes'\n\nexport type EntityFinderModalProps = {\n  configuration: Omit<EntityFinderProps, 'onSelectedChange'>\n  show: boolean\n  onClose: () => void\n  title: string\n  titlePopoverProps?: HelpPopoverProps\n  onConfirm: (selected: Reference[]) => void\n  confirmButtonCopy: string\n  onCancel: () => void\n  promptCopy?: string\n}\n\nexport const EntityFinderModal = (props: EntityFinderModalProps) => {\n  const [selected, setSelected] = useState<Reference[]>([])\n  const [showUnsavedChangesWarning, setShowUnsavedChangesWarning] =\n    useState(false)\n  return (\n    <>\n      <WarningModal\n        title={UNSAVED_CHANGES}\n        modalBody=\"Any unsaved changes will be lost. Are you sure you want to close the finder?\"\n        show={showUnsavedChangesWarning}\n        confirmButtonText=\"Close Finder\"\n        onConfirm={() => {\n          setShowUnsavedChangesWarning(false)\n          props.onCancel()\n        }}\n        onCancel={() => {\n          setShowUnsavedChangesWarning(false)\n        }}\n      />\n      <FluidModal\n        className={showUnsavedChangesWarning ? 'SRC-hidden' : undefined}\n        show={props.show}\n        title={props.title}\n        titlePopoverProps={props.titlePopoverProps}\n        onClose={props.onClose}\n        primaryAction={{\n          copy: props.confirmButtonCopy,\n          onClick: () => {\n            props.onConfirm(selected)\n          },\n        }}\n        secondaryActions={[\n          {\n            copy: 'Cancel',\n            onClick: () => {\n              if (selected.length > 0) {\n                setShowUnsavedChangesWarning(true)\n              } else {\n                props.onCancel()\n              }\n            },\n          },\n        ]}\n      >\n        <>\n          <Typography variant={'body1'}>{props.promptCopy}</Typography>\n          <EntityFinder\n            {...props.configuration}\n            onSelectedChange={setSelected}\n          />\n        </>\n      </FluidModal>\n    </>\n  )\n}\n"],"names":["_jsxs","_Fragment","_jsx","UNSAVED_CHANGES","showUnsavedChangesWarning","setShowUnsavedChangesWarning","props","undefined","show","title","titlePopoverProps","onClose","confirmButtonCopy","promptCopy","configuration","setSelected"],"mappings":"gPAAA,KAAA,GAAA,OAAA,MAAA,SAQO,EAAA,kBAcA,EAAA,AAAA,GAAA,CACL,KAAA,CAAA,EAAA,GAAA,EAAA,CAAA,CAAA,EACA,CAAA,EAAA,GAAA,EAAA,EAAA,EAEA,MAAAA,GAAAC,EAAA,CACE,SAAA,CAAAC,EAAA,EAAA,CACE,MAAA,EACSC,UAAAA,+EACG,KAAA,EACJC,kBAAAA,eACY,UAAA,IAAA,CAEhBC,EAAAA,EAAAA,EACAC,EAAAA,SAAAA,CAAA,EACD,SAAA,IAAA,CAECD,EAAAA,EAAAA,CAA4B,CAC7B,CAAA,EAAAH,EAAA,EAAA,CAEH,UAAA,EAAA,aAAA,OACwDK,KAAAA,EAAAA,KAC1CC,MAAAA,EAAAA,MACCC,kBAAAA,EAAAA,kBACYC,QAAAA,EAAAA,QACVC,cAAAA,CACA,KAAA,EAAA,kBACDC,QAAAA,IAAAA,CAEVN,EAAAA,UAAAA,CAAAA,CAAA,CACD,EAJY,iBAAA,CAAA,CAOb,KAAA,SACQ,QAAA,IAAA,CAEJ,AAAA,EAAA,OAAA,EACED,EAAAA,EAAAA,EAEAC,EAAAA,SAAAA,CACD,CACF,CAAA,EATa,SAAAN,EAAAC,EAAA,CAalB,SAAA,CAAAC,EAAA,EAAA,CACE,QAAA,QAAqB,SAAA,EAAA,UAAgBW,CAAAA,EAAAA,EAAAA,EAAAA,CAE/BP,GAAAA,EAAAA,cAAMQ,iBAAAA,CACQC,CAAAA,CAAAA,CAJtB,CAAA,CAAA,CAAA,CAAA,CAvCJ,CAAA,CAiDH"}