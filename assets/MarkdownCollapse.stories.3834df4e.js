import{I as L,w as b}from"./FacetNav.9e234cde.js";import{I as U}from"./IconCopy.095bf867.js";import{a as B}from"./CardContainerLogic.9969f463.js";import{d as W}from"./ToastMessage.de6992d0.js";import{j as r,a as u}from"./jsx-runtime.00d70968.js";import{c as E,S as k}from"./Button.fda23eee.js";import{_ as F}from"./withStyles.5fe35516.js";import{_ as q}from"./objectWithoutPropertiesLoose.5e7699d1.js";import{c as G}from"./index.57d09176.js";import{g as Y,h as j,s as M}from"./Alert.b74d1cfd.js";import{c as $,d as H,E as K,b as Q,T as X}from"./Transition.8278edb2.js";import"./index.a536ed12.js";import"./toString.d84aaeca.js";import"./index.35ce73ec.js";import"./assert.fddb1cad.js";import"./iframe.f8de4d79.js";import"./getEndpoint.bb7ded34.js";import"./SvgIcon.e37b9412.js";import"./queryUtils.5251d1e3.js";import"./cloneDeep.01d4ff36.js";import"./use-deep-compare-effect.esm.0387ba0e.js";import"./sqlFunctions.02978512.js";import"./ElementWithTooltip.78af9f5c.js";import"./SynapseTableConstants.07ecdebd.js";import"./IconSvg.debd858a.js";import"./Tooltip.6d92cd5b.js";import"./createSvgIcon.99e72c0f.js";import"./slicedToArray.e72f11da.js";import"./toConsumableArray.c4898ee4.js";import"./useTheme.aaa309f8.js";import"./makeStyles.45e8b79c.js";import"./InfoOutlined.60e019a4.js";import"./index.8ed07549.js";import"./Dropdown.b0dc465f.js";import"./Modal.1fb607f9.js";import"./useWaitForDOMRef.97759fd7.js";import"./useWillUnmount.4a16e5cd.js";import"./removeClass.27874bcb.js";import"./hasClass.56fd144a.js";import"./usePopperMarginModifiers.44e3343c.js";import"./isRequiredForA11y.20ed4857.js";import"./useGetInfoFromIds.9ad81144.js";import"./uniq.21cfaf51.js";import"./toInteger.0e6612b4.js";import"./_cacheHas.cc87b06a.js";import"./without.067eb9a7.js";import"./_setToArray.a82100c8.js";import"./ColumnType.744125d2.js";import"./Checkbox.c68b07e0.js";import"./uniqueId.eba72690.js";import"./Collapse.1f37bc76.js";import"./RadioGroup.d19dd04f.js";import"./moment.a565bb48.js";import"./RangeSlider.df5d4da8.js";import"./classCallCheck.8304ed06.js";import"./inherits.82916e50.js";import"./factory.b55dfb91.js";import"./react-sizeme.35566800.js";import"./Skeleton.99b24529.js";import"./ColorGradient.16f0e0f2.js";import"./colorPalette.8145e2e2.js";import"./LoadingScreen.91642215.js";import"./Typography.868473dc.js";import"./TypeUtils.a2c41307.js";import"./EntityIcon.51001575.js";import"./Select-54ac8379.esm.edd779c2.js";import"./CustomSelectWidget.b1e9ceda.js";import"./core.esm.7e77fe07.js";import"./index.4d54b1e5.js";import"./index.66e0b57e.js";import"./index.440cefe9.js";import"./isEmpty.e0c76c4b.js";import"./_baseIsEqual.464c1a19.js";import"./index.browser.36271dcc.js";import"./union.f396c337.js";import"./react-intersection-observer.esm.e445ee86.js";import"./UserCard.0eeb2c8e.js";import"./SkeletonTable.ec4e7fc2.js";import"./times.b28c51b3.js";import"./Overlay.7bb560f6.js";import"./DateFormatter.a5d74ef1.js";import"./useGetDownloadListStatistics.4a5e49e5.js";import"./QueryCount.32c1bf4b.js";import"./NoData.22383cce.js";import"./useGetAccessRequirement.daa359ed.js";import"./ManagedACTAccessRequirementStatus.13dcc250.js";import"./FileUpload.535eee0c.js";import"./UserSearchBox.d2a579a3.js";import"./index.582f6d03.js";import"./UserOrTeamBadge.3c5ed09e.js";import"./EntityLink.75067f88.js";import"./NoSearchResults.a01d676d.js";import"./SynapseVideo.481872ef.js";import"./IconList.43e19c16.js";import"./UserCardList.c357a617.js";import"./FullWidthAlert.6afa82c9.js";var z=["onEnter","onEntering","onEntered","onExit","onExiting","className","children","dimension","getDimensionValue"],m;const x=window.React,w=window.React.useMemo;var J={height:["marginTop","marginBottom"],width:["marginLeft","marginRight"]};function y(o,n){var s="offset"+o[0].toUpperCase()+o.slice(1),i=n[s],a=J[o];return i+parseInt(M(n,a[0]),10)+parseInt(M(n,a[1]),10)}var Z=(m={},m[$]="collapse",m[H]="collapsing",m[K]="collapsing",m[Q]="collapse show",m),oo={in:!1,timeout:300,mountOnEnter:!1,unmountOnExit:!1,appear:!1,getDimensionValue:y},_=x.forwardRef(function(o,n){var s=o.onEnter,i=o.onEntering,a=o.onEntered,d=o.onExit,f=o.onExiting,S=o.className,c=o.children,C=o.dimension,l=C===void 0?"height":C,p=o.getDimensionValue,h=p===void 0?y:p,g=q(o,z),e=typeof l=="function"?l():l,N=w(function(){return E(function(t){t.style[e]="0"},s)},[e,s]),O=w(function(){return E(function(t){var T="scroll"+e[0].toUpperCase()+e.slice(1);t.style[e]=t[T]+"px"},i)},[e,i]),D=w(function(){return E(function(t){t.style[e]=null},a)},[e,a]),P=w(function(){return E(function(t){t.style[e]=h(e,t)+"px",j(t)},d)},[d,h,e]),V=w(function(){return E(function(t){t.style[e]=null},f)},[e,f]);return r(X,{ref:n,addEndListener:Y,...g,"aria-expanded":g.role?g.in:null,onEnter:N,onEntering:O,onEntered:D,onExit:P,onExiting:V,children:function(t,T){return x.cloneElement(c,F({},T,{className:G(S,c.props.className,Z[t],e==="width"&&"width")}))}})});_.defaultProps=oo;const eo=_,v=window.React.useState,I=o=>{const[n,s]=v(!1),[i,a]=v(),[d,f]=v(),S=l=>{const p=l==null?void 0:l.textContent;p&&(f(p.trim()),a(p.trim().split(/\s+/).length))},{textDescription:c="full text",showCopyPlainText:C}=o;return u("div",{className:"MarkdownCollapse bootstrap-4-backport",children:[u("p",{children:[n?r(L,{}):r(b,{}),u(k,{className:"highlight-link",onClick:()=>s(!n),"aria-controls":"collapse-text","aria-expanded":n,children:[n?"Hide":"View"," ",c," ",i?`(${i} words)`:""]})]}),C&&u("p",{children:[r(U,{className:"primary"}),u(k,{className:"highlight-link",onClick:()=>{d&&navigator.clipboard.writeText(d).then(()=>{W("Successfully copied to the clipboard")})},children:["Copy ",c," to clipboard"]})]}),r(eo,{in:n,children:r("div",{id:"collapse-text",children:r(B,{onMarkdownProcessingDone:S,...o})})})]})},A=I;try{I.displayName="MarkdownCollapse",I.__docgenInfo={description:`Wraps a MarkdownSynapse in a Collapse area, with customizable text description.
Will pass down all properties to the MarkdownSynapse component, so this can be used in
the portal detail pages.`,displayName:"MarkdownCollapse",props:{textDescription:{defaultValue:null,description:"",name:"textDescription",required:!1,type:{name:"string"}},showCopyPlainText:{defaultValue:null,description:"",name:"showCopyPlainText",required:!1,type:{name:"boolean"}},ownerId:{defaultValue:null,description:"",name:"ownerId",required:!1,type:{name:"string"}},wikiId:{defaultValue:null,description:"",name:"wikiId",required:!1,type:{name:"string"}},markdown:{defaultValue:null,description:"",name:"markdown",required:!1,type:{name:"string"}},renderInline:{defaultValue:null,description:"",name:"renderInline",required:!1,type:{name:"boolean"}},objectType:{defaultValue:null,description:"",name:"objectType",required:!1,type:{name:"enum",value:[{value:'"ENTITY"'},{value:'"ENTITY_CONTAINER"'},{value:'"PRINCIPAL"'},{value:'"ACTIVITY"'},{value:'"EVALUATION"'},{value:'"SUBMISSION"'},{value:'"EVALUATION_SUBMISSIONS"'},{value:'"FILE"'},{value:'"MESSAGE"'},{value:'"WIKI"'},{value:'"FAVORITE"'},{value:'"ACCESS_REQUIREMENT"'},{value:'"ACCESS_APPROVAL"'},{value:'"TEAM"'},{value:'"TABLE"'},{value:'"ACCESS_CONTROL_LIST"'},{value:'"PROJECT_SETTING"'},{value:'"VERIFICATION_SUBMISSION"'},{value:'"CERTIFIED_USER_PASSING_RECORD"'},{value:'"FORUM"'},{value:'"THREAD"'},{value:'"REPLY"'},{value:'"FORM_GROUP"'},{value:'"FORM_DATA"'},{value:'"ENTITY_VIEW"'},{value:'"USER_PROFILE"'},{value:'"DATA_ACCESS_REQUEST"'},{value:'"DATA_ACCESS_SUBMISSION"'},{value:'"DATA_ACCESS_SUBMISSION_STATUS"'},{value:'"MEMBERSHIP_INVITATION"'}]}},onMarkdownProcessingDone:{defaultValue:null,description:"",name:"onMarkdownProcessingDone",required:!1,type:{name:"((ref: HTMLInputElement | null) => void)"}}}},typeof STORYBOOK_REACT_CLASSES<"u"&&(STORYBOOK_REACT_CLASSES["src/lib/containers/MarkdownCollapse.tsx#MarkdownCollapse"]={docgenInfo:I.__docgenInfo,name:"MarkdownCollapse",path:"src/lib/containers/MarkdownCollapse.tsx#MarkdownCollapse"})}catch{}const He={parameters:{storySource:{source:`import React from 'react'
import { ComponentStory, ComponentMeta } from '@storybook/react'
import MarkdownCollapse from './MarkdownCollapse'

export default {
  title: 'Markdown/MarkdownCollapse',
  component: MarkdownCollapse,
} as ComponentMeta<typeof MarkdownCollapse>

const Template: ComponentStory<typeof MarkdownCollapse> = args => (
  <MarkdownCollapse {...args} />
)

export const Markdown = Template.bind({})
Markdown.args = {
  markdown: '*markdown* given to the **component**',
  textDescription: 'full statement',
}

export const WikiPage = Template.bind({})
WikiPage.args = {
  ownerId: 'syn12666371',
  wikiId: '585317',
  textDescription: 'text',
  showCopyPlainText: true,
}
`,locationsMap:{markdown:{startLoc:{col:58,line:10},endLoc:{col:1,line:12},startBody:{col:58,line:10},endBody:{col:1,line:12}},"wiki-page":{startLoc:{col:58,line:10},endLoc:{col:1,line:12},startBody:{col:58,line:10},endBody:{col:1,line:12}}}}},title:"Markdown/MarkdownCollapse",component:A},R=o=>r(A,{...o}),to=R.bind({});to.args={markdown:"*markdown* given to the **component**",textDescription:"full statement"};const no=R.bind({});no.args={ownerId:"syn12666371",wikiId:"585317",textDescription:"text",showCopyPlainText:!0};const Ke=["Markdown","WikiPage"];export{to as Markdown,no as WikiPage,Ke as __namedExportsOrder,He as default};
