import{r as m,R as k,a as n,j as i,F as g}from"./jsx-runtime.34ce7573.js";import{h as E,A as N,bt as O,bu as B}from"./index.9252e43c.js";import{d}from"./ToastMessage.25625655.js";import{M as L}from"./CardContainerLogic.7cc39be0.js";import{T as u}from"./Typography.40039e1c.js";import{B as x}from"./Button.ce0bd2bc.js";import{H as _}from"./IconSvg.e4eaabe3.js";import"./iframe.2f145b9b.js";import"./index.440cbb05.js";import"./SynapseConstants.b6aa8bf5.js";import"./styled.20fad266.js";import"./utils.02697a41.js";import"./Alert.6db3bf6f.js";import"./createWithBsPrefix.b3a1d38c.js";import"./index.35ce73ec.js";import"./isArray.c4020594.js";import"./getEndpoint.bb7ded34.js";import"./SvgIcon.be1787bd.js";import"./FullWidthAlert.9e017ef2.js";import"./Tooltip.ba09745a.js";import"./createSvgIcon.b38e43ed.js";import"./removeClass.27874bcb.js";import"./hasClass.56fd144a.js";import"./uniqueId.d34fd1e6.js";import"./isSymbol.a6cfa1b9.js";import"./sqlFunctions.fb2b8b19.js";import"./RegularExpressions.3cd69849.js";import"./QueryFilter.cb52bd20.js";import"./useGetInfoFromIds.a3c1fbad.js";import"./use-deep-compare-effect.esm.98e326b7.js";import"./uniq.1828ee9e.js";import"./_baseSlice.50189bc5.js";import"./toInteger.237c62c7.js";import"./_cacheHas.501324b1.js";import"./without.8878821f.js";import"./_Set.0beeed1b.js";import"./_setToArray.a82100c8.js";import"./ColumnType.744125d2.js";import"./FacetNav.10e02f1d.js";import"./queryUtils.c7f410ff.js";import"./useInfiniteQuery.c68591e1.js";import"./queryKeys.e0d3085f.js";import"./cloneDeep.6f6e5476.js";import"./_baseClone.6414188e.js";import"./_getTag.db93df7f.js";import"./NoSearchResults.ee95b549.js";import"./NoData.87904bad.js";import"./unCamelCase.07e38083.js";import"./useEntity.39d0a6df.js";import"./useMutation.1d5deb4c.js";import"./pick.ec9119f4.js";import"./isEqual.211d8e41.js";import"./ElementWithTooltip.e4a037b6.js";import"./SynapseTableConstants.07ecdebd.js";import"./Dropdown.6c7af2c4.js";import"./usePrevious.3addf0ec.js";import"./contains.6d148a53.js";import"./usePopperMarginModifiers.08d898fd.js";import"./isRequiredForA11y.20ed4857.js";import"./Checkbox.a4c87e0b.js";import"./RadioGroup.fa263f64.js";import"./moment.a565bb48.js";import"./RangeSlider.8ffb999f.js";import"./factory.0c8a08a5.js";import"./react-sizeme.bfaa4e5c.js";import"./Skeleton.4a2bac74.js";import"./emotion-react.browser.esm.2f1b8c6f.js";import"./hoist-non-react-statics.cjs.a7086e34.js";import"./ColorGradient.16f0e0f2.js";import"./colorPalette.8145e2e2.js";import"./LoadingScreen.f3df99c4.js";import"./Modal.ab93f5f1.js";import"./inheritsLoose.722dc9df.js";import"./useWaitForDOMRef.bd397adc.js";import"./InfoOutlined.776d3e3c.js";import"./SelectionCriteriaPill.04198a45.js";import"./Close.7d039dff.js";import"./react-select.esm.92368a31.js";import"./Select-54ac8379.esm.0ae6bcaf.js";import"./CustomSelectWidget.3af0a163.js";import"./index.browser.ba1e8f37.js";import"./UserCard.d4cb2331.js";import"./IconCopy.4dd3a28c.js";import"./SkeletonTable.75981830.js";import"./times.060b00f0.js";import"./Overlay.e9b5736d.js";import"./WarningModal.17c62954.js";import"./react-intersection-observer.esm.f463fcd8.js";import"./DateFormatter.f008c727.js";import"./EntityIcon.e98c87d6.js";import"./core.esm.41ddcaa1.js";import"./isEmpty.46fcd958.js";import"./union.4d219cd2.js";import"./isString.e5e21bc4.js";import"./useGetDownloadListStatistics.3e87488b.js";import"./QueryCount.1862eaa8.js";import"./useGetAccessRequirement.36c43b06.js";import"./ManagedACTAccessRequirementStatus.320262df.js";import"./FileUpload.b608cce8.js";import"./UserSearchBox.7dfc66c7.js";import"./UserOrTeamBadge.544df5d8.js";import"./EntityLink.8387a03e.js";import"./SynapseVideo.8475afb5.js";import"./IconList.bded4a5b.js";import"./UserCardList.dbd42a20.js";const M="org.sagebionetworks.repo.model.quiz.MultichoiceResponse",c=()=>{const{accessToken:a}=E(),z=N(),[o,T]=m.exports.useState(),[l,f]=m.exports.useState([]),[e,h]=m.exports.useState(),C=k.useRef(null),S="https://help.synapse.org/docs/Getting-Started.2055471150.html",y=async()=>{try{T(await O(a))}catch(t){z(t)}};m.exports.useEffect(()=>{y()},[a]);const w=(t,p)=>{const s=[...l.filter(r=>r.questionIndex!==t),{questionIndex:t,answerIndex:[p],concreteType:M}];f(s)},v=()=>{var t;(t=C.current)==null||t.reset(),f([]),h(void 0),y()},R=async()=>{try{if(o&&o.questions.length===l.length){const t={quizId:o.id,questionResponses:l},p=await B(a,t);h(p),window.scrollTo(0,0)}else d("Please answer all of the questions and try again.","warning")}catch(t){d(t.reason,"danger")}},b=t=>t?{content:i(g,{children:"More info"}),closePopoverOnClick:!0,onClick:()=>window.open(t,"_blank"),variant:"primary"}:void 0;return n("div",{className:"bootstrap-4-backport CertificationQuiz",children:[e&&i("div",{children:n(g,{children:[!e.passed&&i("div",{className:"failBanner",children:"Quiz Failed"}),n(u,{variant:"hintText",children:["Score: ",e.score," / ",o==null?void 0:o.questions.length]}),e.passed?d(`You passed the Synapse Certification Quiz on ${e.passedOn}`,"success"):n(u,{variant:"body1",children:["Please review the items shown in red below, and"," ",i("a",{href:"#",onClick:t=>{t.preventDefault(),v()},children:"try again"}),"."]})]})}),n("div",{className:"CertificationQuiz__container",children:[n(x,{onClick:()=>window.open(S,"_blank"),className:"help-button",variant:"light-secondary",children:[i(_,{className:"HelpButton",style:{marginRight:"4px"}}),"Help"]}),o?i("div",{dangerouslySetInnerHTML:{__html:o.header}}):"",i("form",{ref:C,onSubmit:t=>t.preventDefault(),children:i("ol",{children:o==null?void 0:o.questions.map(t=>{var p,s;return n("li",{role:t.exclusive?"radiogroup":void 0,children:[i("div",{dangerouslySetInnerHTML:{__html:t.prompt},className:e&&((s=(p=e.corrections)==null?void 0:p.find(r=>r.question.questionIndex===t.questionIndex))!=null&&s.isCorrect?"":"incorrectQuestion")}),t.answers.map(r=>n("div",{children:[i("input",{id:`${t.questionIndex}-${r.answerIndex}`,name:`${t.questionIndex}`,type:t.exclusive?"radio":"checkbox",value:r.answerIndex,onClick:I=>w(t.questionIndex,Number(I.currentTarget.value)),disabled:!!e}),i("label",{style:{fontWeight:400},htmlFor:`${t.questionIndex}-${r.answerIndex}`,children:r.prompt})]},`${t.questionIndex}-${r.answerIndex}`)),i(L,{contentProps:{markdown:t.helpText},placement:"right",actionButton:b(t.docLink),showCloseButton:!0,children:n(u,{variant:"hintText",color:"primary",children:[i(_,{className:"HelpButton",style:{marginRight:"4px"}}),"Need help answering this question?"]})})]},t.questionIndex)})})}),!e&&i(x,{className:"help-button",variant:"primary",onClick:()=>R(),children:"Submit"})]})]})},Q=c;try{c.displayName="CertificationQuiz",c.__docgenInfo={description:"",displayName:"CertificationQuiz",props:{}},typeof STORYBOOK_REACT_CLASSES<"u"&&(STORYBOOK_REACT_CLASSES["src/lib/containers/CertificationQuiz.tsx#CertificationQuiz"]={docgenInfo:c.__docgenInfo,name:"CertificationQuiz",path:"src/lib/containers/CertificationQuiz.tsx#CertificationQuiz"})}catch{}const Mi={parameters:{storySource:{source:`import React from 'react'
import { ComponentStory, ComponentMeta } from '@storybook/react'

import CertificationQuiz from './CertificationQuiz'

export default {
  title: 'Synapse/CertificationQuiz',
  component: CertificationQuiz,
  argTypes: {},
} as ComponentMeta<typeof CertificationQuiz>

const Template: ComponentStory<typeof CertificationQuiz> = args => (
  <CertificationQuiz {...args} />
)

export const CertificationQuizDemo = Template.bind({})
CertificationQuizDemo.args = {}
`,locationsMap:{"certification-quiz-demo":{startLoc:{col:59,line:12},endLoc:{col:1,line:14},startBody:{col:59,line:12},endBody:{col:1,line:14}}}}},title:"Synapse/CertificationQuiz",component:Q,argTypes:{}},H=a=>i(Q,{...a}),$=H.bind({});$.args={};const Hi=["CertificationQuizDemo"];export{$ as CertificationQuizDemo,Hi as __namedExportsOrder,Mi as default};
