import{R as x,r as i,j as r,a as E}from"./jsx-runtime.1a5a2715.js";import{I as V,w as L}from"./FacetNav.fcfa658e.js";import{I as b}from"./IconCopy.6ad8cebf.js";import{a as U}from"./CardContainerLogic.6586af14.js";import{d as B}from"./ToastMessage.373e274f.js";import{_ as W,c as f,S as k}from"./Button.47fead8e.js";import{g as q,_ as F,h as j,s as M}from"./Alert.9d12ab40.js";import{c as G}from"./index.57d09176.js";import{i as Y,j as $,E as H,e as K,T as Q}from"./utils.6069a350.js";import"./iframe.cf33b896.js";import"./index.ee300637.js";import"./index.6dbf9fa2.js";import"./withStyles.7c3d6aba.js";import"./isArray.627abb94.js";import"./index.35ce73ec.js";import"./getEndpoint.bb7ded34.js";import"./SvgIcon.43465c61.js";import"./queryUtils.3d47f1fa.js";import"./useInfiniteQuery.142046cf.js";import"./queryKeys.e0d3085f.js";import"./cloneDeep.01158589.js";import"./_baseClone.7af79b7e.js";import"./_getTag.8a88363a.js";import"./_Set.461de1e6.js";import"./use-deep-compare-effect.esm.6aa57151.js";import"./useEntity.f2bcb259.js";import"./useMutation.a70ea721.js";import"./pick.758c86d7.js";import"./uniqueId.395c9d56.js";import"./isSymbol.eee16a1e.js";import"./_baseSlice.50189bc5.js";import"./sqlFunctions.1d7d9843.js";import"./ElementWithTooltip.3a18d1b9.js";import"./SynapseTableConstants.07ecdebd.js";import"./IconSvg.29727645.js";import"./Tooltip.5c94c0fd.js";import"./createSvgIcon.d6b9a03c.js";import"./makeStyles.bd855ff6.js";import"./InfoOutlined.9735fa89.js";import"./Dropdown.db05a958.js";import"./Modal.718a01b2.js";import"./useWaitForDOMRef.4377410d.js";import"./inheritsLoose.848d8abd.js";import"./removeClass.27874bcb.js";import"./hasClass.56fd144a.js";import"./usePopperMarginModifiers.118ff728.js";import"./isRequiredForA11y.20ed4857.js";import"./useGetInfoFromIds.784698b1.js";import"./uniq.d45a5a8e.js";import"./toInteger.72a0ddde.js";import"./_cacheHas.3118bd20.js";import"./without.dcfaba86.js";import"./_setToArray.a82100c8.js";import"./ColumnType.744125d2.js";import"./Checkbox.a9ac7e3d.js";import"./RadioGroup.8d10638e.js";import"./moment.a565bb48.js";import"./RangeSlider.f10c9159.js";import"./factory.e4649abd.js";import"./react-sizeme.bf2e423b.js";import"./Skeleton.1753a711.js";import"./ColorGradient.16f0e0f2.js";import"./colorPalette.8145e2e2.js";import"./LoadingScreen.34a4d5c9.js";import"./Typography.51984e68.js";import"./TypeUtils.a2c41307.js";import"./Close.724025ed.js";import"./EntityIcon.93350fe4.js";import"./react-select.esm.75b4a64f.js";import"./Select-54ac8379.esm.d1781a8c.js";import"./CustomSelectWidget.b8145431.js";import"./index.browser.6ebab1df.js";import"./WarningModal.dbadfe1f.js";import"./react-intersection-observer.esm.6d50f7e6.js";import"./UserCard.5b59af51.js";import"./SkeletonTable.733c6fe6.js";import"./times.fbcd0673.js";import"./Overlay.494df0cd.js";import"./DateFormatter.9463cb95.js";import"./core.esm.42d4ce1f.js";import"./isEmpty.831251fa.js";import"./isEqual.5fda5513.js";import"./union.59b836f0.js";import"./isString.7152dfdb.js";import"./useGetDownloadListStatistics.f73740b6.js";import"./QueryCount.211976f0.js";import"./NoData.d2495fa6.js";import"./useGetAccessRequirement.0deb7b53.js";import"./ManagedACTAccessRequirementStatus.a4169568.js";import"./FileUpload.64cdbb62.js";import"./UserSearchBox.f4d86727.js";import"./index.582f6d03.js";import"./UserOrTeamBadge.32b32420.js";import"./EntityLink.58ee5c18.js";import"./NoSearchResults.b02621a1.js";import"./SynapseVideo.3342ef05.js";import"./IconList.6717b107.js";import"./UserCardList.23549b6e.js";import"./FullWidthAlert.1624915d.js";var X=["onEnter","onEntering","onEntered","onExit","onExiting","className","children","dimension","getDimensionValue"],d,z={height:["marginTop","marginBottom"],width:["marginLeft","marginRight"]};function h(e,n){var p="offset"+e[0].toUpperCase()+e.slice(1),a=n[p],l=z[e];return a+parseInt(M(n,l[0]),10)+parseInt(M(n,l[1]),10)}var J=(d={},d[Y]="collapse",d[$]="collapsing",d[H]="collapsing",d[K]="collapse show",d),Z={in:!1,timeout:300,mountOnEnter:!1,unmountOnExit:!1,appear:!1,getDimensionValue:h},y=x.forwardRef(function(e,n){var p=e.onEnter,a=e.onEntering,l=e.onEntered,c=e.onExit,w=e.onExiting,I=e.className,u=e.children,C=e.dimension,s=C===void 0?"height":C,m=e.getDimensionValue,v=m===void 0?h:m,g=W(e,X),o=typeof s=="function"?s():s,R=i.exports.useMemo(function(){return f(function(t){t.style[o]="0"},p)},[o,p]),N=i.exports.useMemo(function(){return f(function(t){var T="scroll"+o[0].toUpperCase()+o.slice(1);t.style[o]=t[T]+"px"},a)},[o,a]),O=i.exports.useMemo(function(){return f(function(t){t.style[o]=null},l)},[o,l]),D=i.exports.useMemo(function(){return f(function(t){t.style[o]=v(o,t)+"px",j(t)},c)},[c,v,o]),P=i.exports.useMemo(function(){return f(function(t){t.style[o]=null},w)},[o,w]);return r(Q,{ref:n,addEndListener:q,...g,"aria-expanded":g.role?g.in:null,onEnter:R,onEntering:N,onEntered:O,onExit:D,onExiting:P,children:function(t,T){return x.cloneElement(u,F({},T,{className:G(I,u.props.className,J[t],o==="width"&&"width")}))}})});y.defaultProps=Z;const ee=y,S=e=>{const[n,p]=i.exports.useState(!1),[a,l]=i.exports.useState(),[c,w]=i.exports.useState(),I=s=>{const m=s==null?void 0:s.textContent;m&&(w(m.trim()),l(m.trim().split(/\s+/).length))},{textDescription:u="full text",showCopyPlainText:C}=e;return E("div",{className:"MarkdownCollapse bootstrap-4-backport",children:[E("p",{children:[n?r(V,{}):r(L,{}),E(k,{className:"highlight-link",onClick:()=>p(!n),"aria-controls":"collapse-text","aria-expanded":n,children:[n?"Hide":"View"," ",u," ",a?`(${a} words)`:""]})]}),C&&E("p",{children:[r(b,{className:"primary"}),E(k,{className:"highlight-link",onClick:()=>{c&&navigator.clipboard.writeText(c).then(()=>{B("Successfully copied to the clipboard")})},children:["Copy ",u," to clipboard"]})]}),r(ee,{in:n,children:r("div",{id:"collapse-text",children:r(U,{onMarkdownProcessingDone:I,...e})})})]})},_=S;try{S.displayName="MarkdownCollapse",S.__docgenInfo={description:`Wraps a MarkdownSynapse in a Collapse area, with customizable text description.
Will pass down all properties to the MarkdownSynapse component, so this can be used in
the portal detail pages.`,displayName:"MarkdownCollapse",props:{textDescription:{defaultValue:null,description:"",name:"textDescription",required:!1,type:{name:"string"}},showCopyPlainText:{defaultValue:null,description:"",name:"showCopyPlainText",required:!1,type:{name:"boolean"}},ownerId:{defaultValue:null,description:"",name:"ownerId",required:!1,type:{name:"string"}},wikiId:{defaultValue:null,description:"",name:"wikiId",required:!1,type:{name:"string"}},markdown:{defaultValue:null,description:"",name:"markdown",required:!1,type:{name:"string"}},renderInline:{defaultValue:null,description:"",name:"renderInline",required:!1,type:{name:"boolean"}},objectType:{defaultValue:null,description:"",name:"objectType",required:!1,type:{name:"enum",value:[{value:'"ENTITY"'},{value:'"ENTITY_CONTAINER"'},{value:'"PRINCIPAL"'},{value:'"ACTIVITY"'},{value:'"EVALUATION"'},{value:'"SUBMISSION"'},{value:'"EVALUATION_SUBMISSIONS"'},{value:'"FILE"'},{value:'"MESSAGE"'},{value:'"WIKI"'},{value:'"FAVORITE"'},{value:'"ACCESS_REQUIREMENT"'},{value:'"ACCESS_APPROVAL"'},{value:'"TEAM"'},{value:'"TABLE"'},{value:'"ACCESS_CONTROL_LIST"'},{value:'"PROJECT_SETTING"'},{value:'"VERIFICATION_SUBMISSION"'},{value:'"CERTIFIED_USER_PASSING_RECORD"'},{value:'"FORUM"'},{value:'"THREAD"'},{value:'"REPLY"'},{value:'"FORM_GROUP"'},{value:'"FORM_DATA"'},{value:'"ENTITY_VIEW"'},{value:'"USER_PROFILE"'},{value:'"DATA_ACCESS_REQUEST"'},{value:'"DATA_ACCESS_SUBMISSION"'},{value:'"DATA_ACCESS_SUBMISSION_STATUS"'},{value:'"MEMBERSHIP_INVITATION"'}]}},loadingSkeletonRowCount:{defaultValue:null,description:"",name:"loadingSkeletonRowCount",required:!1,type:{name:"number"}},onMarkdownProcessingDone:{defaultValue:null,description:"",name:"onMarkdownProcessingDone",required:!1,type:{name:"((ref: HTMLInputElement | null) => void)"}}}},typeof STORYBOOK_REACT_CLASSES<"u"&&(STORYBOOK_REACT_CLASSES["src/lib/containers/MarkdownCollapse.tsx#MarkdownCollapse"]={docgenInfo:S.__docgenInfo,name:"MarkdownCollapse",path:"src/lib/containers/MarkdownCollapse.tsx#MarkdownCollapse"})}catch{}const Qo={parameters:{storySource:{source:`import React from 'react'
import { ComponentStory, ComponentMeta } from '@storybook/react'
import MarkdownCollapse from './MarkdownCollapse'

export default {
  title: 'Markdown/MarkdownCollapse',
  component: MarkdownCollapse,
} as ComponentMeta<typeof MarkdownCollapse>

const Template: ComponentStory<typeof MarkdownCollapse> = args => (
  <MarkdownCollapse {...args} />
)

export const Markdown = Template.bind({})
Markdown.args = {
  markdown: '*markdown* given to the **component**',
  textDescription: 'full statement',
}

export const WikiPage = Template.bind({})
WikiPage.args = {
  ownerId: 'syn12666371',
  wikiId: '585317',
  textDescription: 'text',
  showCopyPlainText: true,
}
`,locationsMap:{markdown:{startLoc:{col:58,line:10},endLoc:{col:1,line:12},startBody:{col:58,line:10},endBody:{col:1,line:12}},"wiki-page":{startLoc:{col:58,line:10},endLoc:{col:1,line:12},startBody:{col:58,line:10},endBody:{col:1,line:12}}}}},title:"Markdown/MarkdownCollapse",component:_},A=e=>r(_,{...e}),oe=A.bind({});oe.args={markdown:"*markdown* given to the **component**",textDescription:"full statement"};const te=A.bind({});te.args={ownerId:"syn12666371",wikiId:"585317",textDescription:"text",showCopyPlainText:!0};const Xo=["Markdown","WikiPage"];export{oe as Markdown,te as WikiPage,Xo as __namedExportsOrder,Qo as default};
