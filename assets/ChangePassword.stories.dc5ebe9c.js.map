{"version":3,"file":"ChangePassword.stories.dc5ebe9c.js","sources":["../../src/lib/containers/ChangePassword.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { FormGroup, FormControl, FormLabel, Button } from 'react-bootstrap'\nimport { ChangePasswordWithCurrentPassword } from '../utils/synapseTypes/ChangePasswordRequests'\nimport { displayToast } from './ToastMessage'\nimport { SynapseClient } from '../utils'\nimport { useSynapseContext } from '../utils/SynapseContext'\nimport { UserProfile } from '../utils/synapseTypes'\n\nconst ChangePassword: React.FunctionComponent = () => {\n  const { accessToken } = useSynapseContext()\n  const [oldPassword, setOldPassword] = useState<string>('')\n  const [newPassword, setNewPassword] = useState<string>('')\n  const [confirmPassword, setConfirmPassword] = useState<string>('')\n  const [currentUserProfile, setUserProfile] = useState<UserProfile>()\n\n  useEffect(() => {\n    async function getUserProfile() {\n      const userProfile = await SynapseClient.getUserProfile(accessToken)\n      setUserProfile(userProfile)\n    }\n    if (accessToken) {\n      getUserProfile()\n    } else {\n      setUserProfile(undefined)\n    }\n  }, [accessToken])\n\n  const handleChangePassword = async (\n    clickEvent: React.FormEvent<HTMLElement>,\n  ) => {\n    clickEvent.preventDefault()\n    try {\n      if (newPassword !== confirmPassword) {\n        displayToast(\n          'New password and confirm password does not match.',\n          'danger',\n        )\n      } else if (accessToken) {\n        const changeRequest: ChangePasswordWithCurrentPassword = {\n          newPassword,\n          concreteType:\n            'org.sagebionetworks.repo.model.auth.ChangePasswordWithCurrentPassword',\n          username: currentUserProfile?.userName!,\n          currentPassword: oldPassword,\n        }\n        await SynapseClient.changePasswordWithCurrentPassword(\n          changeRequest,\n          accessToken,\n        )\n          .then(() => displayToast('Successfully changed', 'success'))\n          .catch((err: any) => displayToast(err.reason as string, 'danger'))\n      }\n    } catch (err) {\n      displayToast(err.reason as string, 'danger')\n    }\n  }\n\n  return (\n    <div className=\"changePassword\">\n      <form onSubmit={handleChangePassword}>\n        <FormGroup controlId=\"oldPassword\">\n          <FormLabel>Current Password</FormLabel>\n          <FormControl\n            type=\"password\"\n            onChange={e => setOldPassword(e.target.value)}\n            value={oldPassword}\n          />\n        </FormGroup>\n        <FormGroup controlId=\"newPassword\">\n          <FormLabel>New Password</FormLabel>\n          <FormControl\n            type=\"password\"\n            onChange={e => setNewPassword(e.target.value)}\n            value={newPassword}\n          />\n        </FormGroup>\n        <FormGroup controlId=\"confirmPassword\">\n          <FormLabel>Confirm Password</FormLabel>\n          <FormControl\n            type=\"password\"\n            onChange={e => setConfirmPassword(e.target.value)}\n            value={confirmPassword}\n          />\n        </FormGroup>\n        <Button type=\"submit\" onSubmit={handleChangePassword}>\n          Change Password\n        </Button>\n      </form>\n    </div>\n  )\n}\n\nexport default ChangePassword\n"],"names":["accessToken","useEffect","SynapseClient.getUserProfile","setUserProfile","getUserProfile","clickEvent","displayToast","newPassword","userName","oldPassword","SynapseClient.changePasswordWithCurrentPassword","_jsx","_jsxs","handleChangePassword","confirmPassword"],"mappings":"m6BAAA,KAAA,GAAA,OAAA,MAAA,kCAQA,EAAA,IAAA,CACE,KAAA,CAAM,eAAEA,EAAAA,EACR,CAAA,EAAA,GAAA,EAAA,EAAA,EACA,CAAA,EAAA,GAAA,EAAA,EAAA,EACA,CAAA,EAAA,GAAA,EAAA,EAAA,EACA,CAAA,EAAA,GAAA,EAAA,EAEAC,EAAAA,IAAAA,CACE,kBAAA,CACE,KAAA,GAAA,KAAAC,GAAA,CAAA,EACAC,EAAAA,CAAAA,CAAc,CAEhB,AAAA,EACEC,IAEAD,EAAAA,MAAAA,CACD,EAAA,CAAA,CAAA,CAAA,EAGH,KAAA,GAAA,KAAA,IAAA,CAGEE,EAAAA,eAAAA,EACA,GAAA,CACE,GAAA,IAAA,EACEC,EAAAA,oDAAAA,QAAAA,UAAY,EAAA,CAKZ,KAAA,GAAA,CAAyD,cACvDC,aAAAA,wEAEE,SAAA,iBAAA,SAC4BC,gBAAAA,CACbC,EAEnB,KAAAC,GAAA,EAAA,CAAA,EAAA,KAAA,IAAA,EAAA,uBAAA,SAAA,CAAA,EAAA,MAAA,AAAA,GAAA,EAAA,EAAA,OAAA,QAAA,CAAA,CAAM,CAMP,OAAA,EAAA,CAEDJ,EAAAA,EAAAA,OAAAA,QAAAA,CAAY,CACb,EAGH,MAAAK,GAAA,MAAA,CACE,UAAA,iBAAe,SAAAC,EAAA,OAAA,CACb,SAAA,EAAgBC,SAAAA,CAAAA,EAAAA,EAAAA,CACd,UAAA,cAAqB,SAAA,CAAAF,EAAA,EAAA,CACnB,SAAA,kBAAA,CAAA,EAAAA,EAAA,EAAA,CACA,KAAA,WACO,SAAA,AAAA,GAAA,EAAA,EAAA,OAAA,KAAA,EACwB,MAAA,CACtBF,CAAAA,CAAAA,CALX,CAAA,EAAAG,EAAA,EAAA,CAQA,UAAA,cAAqB,SAAA,CAAAD,EAAA,EAAA,CACnB,SAAA,cAAA,CAAA,EAAAA,EAAA,EAAA,CACA,KAAA,WACO,SAAA,AAAA,GAAA,EAAA,EAAA,OAAA,KAAA,EACwB,MAAA,CACtBJ,CAAAA,CAAAA,CALX,CAAA,EAAAK,EAAA,EAAA,CAQA,UAAA,kBAAqB,SAAA,CAAAD,EAAA,EAAA,CACnB,SAAA,kBAAA,CAAA,EAAAA,EAAA,EAAA,CACA,KAAA,WACO,SAAA,AAAA,GAAA,EAAA,EAAA,OAAA,KAAA,EAC4B,MAAA,CAC1BG,CAAAA,CAAAA,CALX,CAAA,EAAAH,EAAA,EAAA,CAQA,KAAA,SAAa,SAAA,EAAmBE,SAAAA,iBAAhC,CAAA,CAAA,CAzBF,CAAA,CAAA,CAAA,CA+BL,EAED,GAAA,GAAA;;;;;;;;;;;;;;;;;;;;;"}