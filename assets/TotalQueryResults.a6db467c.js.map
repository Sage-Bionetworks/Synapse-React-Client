{"version":3,"file":"TotalQueryResults.a6db467c.js","sources":["../../node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","../../node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","../../src/lib/containers/QueryContext.tsx","../../src/lib/assets/skeletons/SkeletonInlineBlock.tsx","../../src/lib/utils/functions/getDataFromFromStorage.ts","../../src/lib/utils/synapseTypes/Table/QueryFilter.ts","../../src/lib/containers/QueryVisualizationWrapper.tsx","../../src/lib/utils/functions/deepLinkingUtils.ts","../../src/lib/containers/QueryWrapper.tsx","../../src/lib/containers/widgets/facet-nav/SelectionCriteriaPill.tsx","../../src/lib/containers/widgets/query-filter/FacetFilterHeader.tsx","../../src/lib/containers/widgets/query-filter/EnumFacetFilter.tsx","../../src/lib/containers/widgets/Range.tsx","../../node_modules/react-compound-slider/es/utils.js","../../node_modules/react-compound-slider/es/Rail/Rail.js","../../node_modules/react-compound-slider/es/Ticks/Ticks.js","../../node_modules/react-compound-slider/es/Tracks/Tracks.js","../../node_modules/react-compound-slider/es/Handles/Handles.js","../../node_modules/react-compound-slider/es/Slider/utils.js","../../node_modules/react-compound-slider/es/Slider/modes.js","../../node_modules/d3-array/src/ascending.js","../../node_modules/d3-array/src/bisector.js","../../node_modules/d3-array/src/bisect.js","../../node_modules/d3-array/src/ticks.js","../../node_modules/react-compound-slider/es/Slider/LinearScale.js","../../node_modules/react-compound-slider/es/Slider/DiscreteScale.js","../../node_modules/react-compound-slider/es/Slider/Slider.js","../../node_modules/react-compound-slider/es/index.js","../../src/lib/containers/widgets/RangeSlider.tsx","../../src/lib/containers/widgets/query-filter/RangeFacetFilter.tsx","../../src/lib/containers/widgets/query-filter/QueryFilter.tsx","../../src/lib/containers/TotalQueryResults.tsx"],"sourcesContent":["import _typeof from \"./typeof.js\";\nimport assertThisInitialized from \"./assertThisInitialized.js\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n\n  return assertThisInitialized(self);\n}","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","import * as React from 'react'\nimport { createContext, useContext } from 'react'\nimport { SynapseClientError } from '../utils/SynapseClientError'\nimport {\n  AsynchronousJobStatus,\n  QueryBundleRequest,\n  QueryResultBundle,\n  Table,\n} from '../utils/synapseTypes'\n\nexport const QUERY_FILTERS_EXPANDED_CSS: string = 'isShowingFacetFilters'\nexport const QUERY_FILTERS_COLLAPSED_CSS: string = 'isHidingFacetFilters'\n\n/*\n  For details page: to lock a facet name (e.g. study, grant) so that the facet name\n  and its all possible values will not appear on the details page. The facet name is\n  given by the url's search param. The type is defined here so that other child components\n  in SRC won't generate type errors.\n */\nexport type LockedFacet = {\n  facet?: string\n  value?: string\n}\n\nexport type QueryContextType = {\n  /** The entity being queried. Will be undefined while initially fetching */\n  entity: Table | undefined\n  /** The query results, which will be undefined while initially fetching a new bundle, but will not be unloaded when fetching new pages */\n  data: QueryResultBundle | undefined\n  /** Returns a deep clone of the current query bundle request */\n  getLastQueryRequest: () => QueryBundleRequest\n  /** Returns a deep clone of the initial query bundle request */\n  getInitQueryRequest: () => QueryBundleRequest\n  /** Updates the current query with the passed request */\n  executeQueryRequest: (param: QueryBundleRequest) => void\n  /** Returns true when loading a brand new query result bundle. Will not be true when just loading the next page of query results. */\n  isLoadingNewBundle: boolean\n  /** The error returned by the query request, if one is encountered */\n  error: SynapseClientError | null\n  /** The status of the asynchronous job. */\n  asyncJobStatus?: AsynchronousJobStatus<QueryBundleRequest, QueryResultBundle>\n  /** Whether or not facets are available to be filtered upon based on the current data */\n  isFacetsAvailable: boolean\n  /**\n   * A facet may be \"locked\" so that it is not modifiable by the user, for example when showing only data relevant to a particular facet value on a Details Page.\n   * The value of a locked facet will result in a client-side modification of the result bundle data.\n   */\n  lockedFacet?: LockedFacet\n}\n\nexport type PaginatedQueryContextType = QueryContextType & {\n  /** Navigates to a particular page, where the first page has value 1 */\n  goToPage: (pageNum: number) => Promise<void>\n  /** The current page number, where page 1 is the first page. */\n  currentPage: number\n  /** Updates the page size */\n  setPageSize: (pageSize: number) => void\n  /** The current page size. */\n  pageSize: number\n}\n\nexport type InfiniteQueryContextType = QueryContextType & {\n  /** Returns true when loading a new page of query results */\n  isLoadingNewPage: boolean\n  /** Whether or not the query result bundle has a next page */\n  hasNextPage: boolean\n  /** Invoke this method to fetch and append the next page of rows to the data  */\n  appendNextPageToResults: () => Promise<void>\n  /** Invoke to fetch and update the data with the next page of query results */\n  goToNextPage: () => Promise<void>\n  /** Whether or not the query result bundle has a previous page */\n  hasPreviousPage: boolean\n  /** Invoke to fetch and update the data with the previous page of query results */\n  goToPreviousPage: () => Promise<void>\n}\n/**\n * This must be exported to use the context in class components.\n */\nexport const QueryContext = createContext<QueryContextType | undefined>(\n  undefined,\n)\n\nexport type QueryContextProviderProps = {\n  queryContext: QueryContextType\n}\n\n/**\n * Provides data related to a Synapse table query, and functions for iterating through pages of the data.\n */\nexport const QueryContextProvider: React.FC<QueryContextProviderProps> = ({\n  children,\n  queryContext,\n}) => {\n  return (\n    <QueryContext.Provider value={queryContext}>\n      {children}\n    </QueryContext.Provider>\n  )\n}\n\nexport function useQueryContext(): QueryContextType {\n  const context = useContext(QueryContext)\n  if (context === undefined) {\n    throw new Error('useQueryContext must be used within a QueryWrapper')\n  }\n  return context\n}\n\nexport function usePaginatedQueryContext(): PaginatedQueryContextType {\n  const context = useContext(QueryContext)\n  if (context === undefined) {\n    throw new Error(\n      'usePaginatedQueryContext must be used within a QueryWrapper',\n    )\n  }\n  // TODO: Identify more type-safe alternative to casting\n  return context as PaginatedQueryContextType\n}\n\nexport function useInfiniteQueryContext(): InfiniteQueryContextType {\n  const context = useContext(QueryContext)\n  if (context === undefined) {\n    throw new Error(\n      'useInfiniteQueryContext must be used within a QueryWrapper',\n    )\n  }\n  // TODO: Identify more type-safe alternative to casting\n  return context as InfiniteQueryContextType\n}\n\nexport const QueryContextConsumer = QueryContext.Consumer\n","import React from 'react'\nimport Skeleton, { SkeletonProps } from '@material-ui/lab/Skeleton'\n\n/**\n * Skeleton with a display value of `inline-block`. MUI applies `display: block` with high specificity, so it's easiest to just apply the style to the component.\n */\nexport const SkeletonInlineBlock: React.FC<SkeletonProps> = props => {\n  return (\n    <Skeleton\n      style={{ ...props.style, display: 'inline-block' }}\n      {...props}\n    ></Skeleton>\n  )\n}\n","import { EntityHeader, UserProfile } from '../synapseTypes'\nimport { SynapseConstants } from '..'\n\nexport const getStoredEntityHeaders = (): EntityHeader[] => {\n  try {\n    const lookUpEntityHeaders: EntityHeader[] = JSON.parse(\n      sessionStorage.getItem(SynapseConstants.ENTITY_HEADER_STORAGE_KEY) || '',\n    )\n    return lookUpEntityHeaders\n  } catch (e) {\n    return []\n  }\n}\n\nexport const getStoredUserProfiles = (): UserProfile[] => {\n  try {\n    const lookUpUserIds: UserProfile[] = JSON.parse(\n      sessionStorage.getItem(SynapseConstants.USER_PROFILE_STORAGE_KEY) || '',\n    )\n    return lookUpUserIds\n  } catch (e) {\n    return []\n  }\n}\n","import { isTypeViaConcreteTypeFactory } from '../../functions/TypeUtils'\n\nexport enum ColumnSingleValueFilterOperator {\n  LIKE = 'LIKE', // The LIKE operation. Use wildcard '%' in value sting for prefix/suffix matching.\n}\nexport enum ColumnMultiValueFunction {\n  HAS = 'HAS', // HAS function on multi-value columns, same as the predicate: 'columnName HAS ()'\n  HAS_LIKE = 'HAS_LIKE', // HAS_LIKE function on multi-value columns, same as the predicate: 'columnName HAS_LIKE ()'. Can be used for pattern matching using wildcard %.\n}\n\nconst COLUMN_SINGLE_VALUE_QUERY_FILTER_CONCRETE_TYPE_VALUE =\n  'org.sagebionetworks.repo.model.table.ColumnSingleValueQueryFilter'\ntype COLUMN_SINGLE_VALUE_QUERY_FILTER_CONCRETE_TYPE =\n  typeof COLUMN_SINGLE_VALUE_QUERY_FILTER_CONCRETE_TYPE_VALUE\n\n// A filter using a single value against a column. Values within the values list have an OR relationship\nexport interface ColumnSingleValueQueryFilter extends QueryFilter {\n  concreteType: COLUMN_SINGLE_VALUE_QUERY_FILTER_CONCRETE_TYPE\n  columnName: string // name of the column to filter\n  operator: ColumnSingleValueFilterOperator // Determines the filter operation to perform\n  values: string[] // Values to used with the filter.\n}\n\nconst COLUMN_MULTI_VALUE_FUNCTION_QUERY_FILTER_CONCRETE_TYPE_VALUE =\n  'org.sagebionetworks.repo.model.table.ColumnMultiValueFunctionQueryFilter'\ntype COLUMN_MULTI_VALUE_FUNCTION_QUERY_FILTER_CONCRETE_TYPE =\n  typeof COLUMN_MULTI_VALUE_FUNCTION_QUERY_FILTER_CONCRETE_TYPE_VALUE\n\n// A filter that applies multi-value columns functions.\nexport interface ColumnMultiValueFunctionQueryFilter extends QueryFilter {\n  concreteType: COLUMN_MULTI_VALUE_FUNCTION_QUERY_FILTER_CONCRETE_TYPE\n  columnName: string // name of the column to filter\n  function: ColumnMultiValueFunction // Determines the filter operation to perform\n  values: string[] // Values to used with the filter.\n}\n\n// https://docs.synapse.org/rest/org/sagebionetworks/repo/model/table/TextMatchesQueryFilter.html\nconst TEXT_MATCHES_QUERY_FILTER_CONCRETE_TYPE_VALUE =\n  'org.sagebionetworks.repo.model.table.TextMatchesQueryFilter'\ntype TEXT_MATCHES_QUERY_FILTER_CONCRETE_TYPE =\n  typeof TEXT_MATCHES_QUERY_FILTER_CONCRETE_TYPE_VALUE\nexport interface TextMatchesQueryFilter extends QueryFilter {\n  concreteType: TEXT_MATCHES_QUERY_FILTER_CONCRETE_TYPE\n  searchExpression: string\n}\n\nexport interface QueryFilter {\n  concreteType:\n    | TEXT_MATCHES_QUERY_FILTER_CONCRETE_TYPE\n    | COLUMN_SINGLE_VALUE_QUERY_FILTER_CONCRETE_TYPE\n    | COLUMN_MULTI_VALUE_FUNCTION_QUERY_FILTER_CONCRETE_TYPE\n}\n\nexport const isTextMatchesQueryFilter =\n  isTypeViaConcreteTypeFactory<TextMatchesQueryFilter>(\n    TEXT_MATCHES_QUERY_FILTER_CONCRETE_TYPE_VALUE,\n  )\n\nexport const isColumnSingleValueQueryFilter =\n  isTypeViaConcreteTypeFactory<ColumnSingleValueQueryFilter>(\n    COLUMN_SINGLE_VALUE_QUERY_FILTER_CONCRETE_TYPE_VALUE,\n  )\n\nexport const isColumnMultiValueFunctionQueryFilter =\n  isTypeViaConcreteTypeFactory<ColumnMultiValueFunctionQueryFilter>(\n    COLUMN_MULTI_VALUE_FUNCTION_QUERY_FILTER_CONCRETE_TYPE_VALUE,\n  )\n","import React, { createContext, useContext, useEffect, useState } from 'react'\nimport { useQueryContext } from './QueryContext'\n\nexport type QueryVisualizationContextType = {\n  topLevelControlsState: TopLevelControlsState\n  setTopLevelControlsState: React.Dispatch<\n    React.SetStateAction<TopLevelControlsState>\n  >\n  columnsToShowInTable: string[]\n  setColumnsToShowInTable: (newState: string[]) => void\n  selectedRowIndices: number[]\n  setSelectedRowIndices: (newState: number[]) => void\n  // General UI related:\n  facetAliases?: Record<string, string>\n  rgbIndex?: number\n  unitDescription?: string\n  /** Whether to show when the table or view was last updated. */\n  showLastUpdatedOn?: boolean\n}\n\n/**\n * This must be exported to use the context in class components.\n */\nexport const QueryVisualizationContext = createContext<\n  QueryVisualizationContextType | undefined\n>(undefined)\n\nexport type QueryVisualizationContextProviderProps = {\n  queryVisualizationContext: QueryVisualizationContextType\n}\n\n/**\n * Provides fields and functions related to visualizing a Synapse table query. For actual query data, see QueryContextProvider.\n */\nexport const QueryVisualizationContextProvider: React.FunctionComponent<\n  QueryVisualizationContextProviderProps\n> = ({ children, queryVisualizationContext }) => {\n  return (\n    <QueryVisualizationContext.Provider value={queryVisualizationContext}>\n      {children}\n    </QueryVisualizationContext.Provider>\n  )\n}\n\nexport function useQueryVisualizationContext(): QueryVisualizationContextType {\n  const context = useContext(QueryVisualizationContext)\n  if (context === undefined) {\n    throw new Error(\n      'useQueryVisualizationContext must be used within a QueryWrapper',\n    )\n  }\n  return context\n}\n\nexport const QueryVisualizationContextConsumer =\n  QueryVisualizationContext.Consumer\n\nexport type QueryVisualizationWrapperProps = {\n  children: React.ReactNode | React.ReactNode[]\n  rgbIndex?: number\n  unitDescription?: string\n  facetAliases?: Record<string, string>\n  visibleColumnCount?: number\n  hiddenColumns?: string[]\n  defaultShowFacetVisualization?: boolean\n  defaultShowSearchBar?: boolean\n  showLastUpdatedOn?: boolean\n}\n\nexport type TopLevelControlsState = {\n  showFacetVisualization: boolean\n  showFacetFilter?: boolean\n  showColumnFilter: boolean\n  showSearchBar: boolean\n  showDownloadConfirmation: boolean\n  showColumnSelectDropdown: boolean\n  showSqlEditor: boolean\n}\n\n/**\n * QueryVisualizationWrapper manages UI state for components that query tables in Synapse. That state can be accessed\n * or updated using QueryVisualizationContext. A QueryVisualizationWrapper must be used within a QueryWrapper.\n */\nexport function QueryVisualizationWrapper(\n  props: QueryVisualizationWrapperProps,\n) {\n  const { data, getLastQueryRequest, isFacetsAvailable, isLoadingNewBundle } =\n    useQueryContext()\n\n  const [topLevelControlsState, setTopLevelControlsState] =\n    useState<TopLevelControlsState>({\n      showColumnFilter: true,\n      showFacetFilter: true,\n      showFacetVisualization: props.defaultShowFacetVisualization ?? true,\n      showSearchBar: props.defaultShowSearchBar ?? false,\n      showDownloadConfirmation: false,\n      showColumnSelectDropdown: false,\n      showSqlEditor: false,\n    })\n\n  useEffect(() => {\n    if (!isFacetsAvailable) {\n      setTopLevelControlsState(state => ({\n        ...state,\n        showFacetFilter: false,\n        showFacetVisualization: false,\n      }))\n    }\n  }, [isFacetsAvailable])\n\n  useEffect(() => {\n    if (isLoadingNewBundle) {\n      setSelectedRowIndices([])\n    }\n  }, [isLoadingNewBundle])\n\n  const [isColumnSelected, setIsColumnSelected] = useState<string[]>([])\n  const [selectedRowIndices, setSelectedRowIndices] = useState<number[]>([])\n\n  const lastQueryRequest = getLastQueryRequest()\n  const selectColumns = data?.selectColumns\n\n  useEffect(() => {\n    // SWC-6030: If sql changes, reset what columns are visible\n    setIsColumnSelected(\n      selectColumns\n        ?.slice(0, props.visibleColumnCount ?? Infinity)\n        .map(el => el.name) ?? [],\n    )\n  }, [selectColumns, lastQueryRequest.query.sql, props.visibleColumnCount])\n\n  const context: QueryVisualizationContextType = {\n    topLevelControlsState,\n    setTopLevelControlsState,\n    columnsToShowInTable: isColumnSelected,\n    setColumnsToShowInTable: setIsColumnSelected,\n    selectedRowIndices,\n    setSelectedRowIndices,\n\n    facetAliases: props.facetAliases,\n    rgbIndex: props.rgbIndex,\n    unitDescription: props.unitDescription,\n    showLastUpdatedOn: props.showLastUpdatedOn,\n  }\n  /**\n   * Render the children without any formatting\n   */\n  const { children } = props\n  return (\n    <QueryVisualizationContextProvider queryVisualizationContext={context}>\n      {children}\n    </QueryVisualizationContextProvider>\n  )\n}\n","import { QueryBundleRequest } from '../synapseTypes/Table/QueryBundleRequest'\nimport { Query } from '../synapseTypes'\nimport { SynapseConstants } from '..'\nimport { parseEntityIdFromSqlStatement } from './sqlFunctions'\n\n//id consists of a component class/function name and it's index\nfunction getComponentSearchHashId(\n  componentName: string,\n  componentIndex: number,\n): string {\n  return `${componentName}${componentIndex}`\n}\n\n//returns updated search string with the component's info\nfunction patchSearchString(\n  componentSearchHashId: string,\n  stringifiedQuery: string,\n): string | undefined {\n  const searchString = window.location.search\n\n  const searchFragment = `${componentSearchHashId}=${stringifiedQuery}`\n  if (!searchString) {\n    return searchFragment\n  }\n\n  if (!searchString.includes(`${componentSearchHashId}=`)) {\n    //substr(1) because we don't want '?' character\n    return `${searchString.substr(1)}&${searchFragment}`\n  }\n  const searchHashes = window.location.search\n    .slice(searchString.indexOf('?') + 1)\n    .split('&')\n\n  const searchHashesUpdated = searchHashes\n    .map(item => {\n      const split = item.split('=')\n      if (split[0] === componentSearchHashId) {\n        return `${searchFragment}`\n      } else return item\n    })\n    .join('&')\n  return searchHashesUpdated\n}\n\n//gets a value for the search param for the component from the url\nexport function getSearchParamValueFromUrl(\n  componentName: string,\n  componentIndex: number,\n): string | undefined {\n  if (!window.location.search) {\n    return undefined\n  }\n  const componentSearchHashId = getComponentSearchHashId(\n    componentName,\n    componentIndex,\n  )\n  const hashes = window.location.search\n    .slice(window.location.search.indexOf('?') + 1)\n    .split('&')\n  const getSearchParamValue = hashes\n    .filter(item => {\n      const hash = item.split('=')\n      return hash[0] === componentSearchHashId\n    })\n    .map(item => item.split('=')[1])[0]\n  return getSearchParamValue\n    ? decodeURIComponent(getSearchParamValue)\n    : undefined\n}\n\n//updates the url with the components new search params\nexport function updateUrlWithNewSearchParam(\n  componentName: string,\n  componentIndex: number | undefined,\n  stringifiedQuery: string,\n) {\n  const componentSearchHashId =\n    componentIndex !== undefined\n      ? getComponentSearchHashId(componentName, componentIndex)\n      : componentName\n  const searchString = patchSearchString(\n    componentSearchHashId,\n    stringifiedQuery,\n  )\n  const location = window.location\n  const newURL = `${location.protocol}//${location.hostname}${\n    location.port ? ':' + location.port : ''\n  }${location.pathname}?${searchString}`\n\n  window.history.replaceState('object or string', 'Title', newURL)\n}\n\nexport function getQueryRequestFromLink(\n  componentName: string,\n  componentIndex: number,\n): QueryBundleRequest | undefined {\n  const searchParamValue = getSearchParamValueFromUrl(\n    componentName,\n    componentIndex,\n  )\n\n  let initQueryRequest: QueryBundleRequest | undefined = undefined\n  if (searchParamValue) {\n    const query = JSON.parse(searchParamValue) as Query\n    if (query.sql) {\n      initQueryRequest = {\n        concreteType: 'org.sagebionetworks.repo.model.table.QueryBundleRequest',\n        partMask:\n          SynapseConstants.BUNDLE_MASK_QUERY_COLUMN_MODELS |\n          SynapseConstants.BUNDLE_MASK_QUERY_FACETS |\n          SynapseConstants.BUNDLE_MASK_QUERY_SELECT_COLUMNS |\n          SynapseConstants.BUNDLE_MASK_QUERY_RESULTS,\n        entityId: parseEntityIdFromSqlStatement(query.sql),\n        query,\n      }\n    }\n  }\n  return initQueryRequest\n}\n","import { cloneDeep } from 'lodash-es'\nimport * as React from 'react'\nimport { useEffect, useMemo, useState } from 'react'\nimport useDeepCompareEffect from 'use-deep-compare-effect'\nimport * as DeepLinkingUtils from '../utils/functions/deepLinkingUtils'\nimport { isFacetAvailable } from '../utils/functions/queryUtils'\nimport { parseEntityIdAndVersionFromSqlStatement } from '../utils/functions/sqlFunctions'\nimport { useGetEntity } from '../utils/hooks/SynapseAPI/entity/useEntity'\nimport { useGetQueryResultBundleWithAsyncStatus } from '../utils/hooks/SynapseAPI/entity/useGetQueryResultBundle'\nimport { DEFAULT_PAGE_SIZE } from '../utils/SynapseConstants'\nimport {\n  AsynchronousJobStatus,\n  QueryBundleRequest,\n  QueryResultBundle,\n  Table,\n} from '../utils/synapseTypes'\nimport {\n  LockedFacet,\n  PaginatedQueryContextType,\n  QueryContextProvider,\n} from './QueryContext'\n\nexport const QUERY_FILTERS_EXPANDED_CSS: string = 'isShowingFacetFilters'\nexport const QUERY_FILTERS_COLLAPSED_CSS: string = 'isHidingFacetFilters'\n\nexport type QueryWrapperProps = {\n  children: React.ReactNode | React.ReactNode[]\n  initQueryRequest: QueryBundleRequest\n  componentIndex?: number //used for deep linking\n  shouldDeepLink?: boolean\n  onQueryChange?: (newQueryJson: string) => void\n  onQueryResultBundleChange?: (newQueryResultBundleJson: string) => void\n  lockedFacet?: LockedFacet\n}\n\nexport type SearchQuery = {\n  columnName: string\n  searchText: string\n}\n\n/**\n * Component that manages the state of a Synapse table query. Data can be accessed via QueryContext using\n * either `useQueryContext` or `QueryContextConsumer`.\n */\nexport function QueryWrapper(props: QueryWrapperProps) {\n  const { initQueryRequest, onQueryChange, onQueryResultBundleChange } = props\n  const [lastQueryRequest, setLastQueryRequest] =\n    useState<QueryBundleRequest>(initQueryRequest)\n  const [currentAsyncStatus, setCurrentAsyncStatus] = useState<\n    AsynchronousJobStatus<QueryBundleRequest, QueryResultBundle> | undefined\n  >(undefined)\n  const {\n    data: asyncJobStatus,\n    isLoading: queryIsLoading,\n    error,\n    isPreviousData: newQueryIsFetching,\n    remove,\n  } = useGetQueryResultBundleWithAsyncStatus(\n    lastQueryRequest,\n    {\n      // We use `keepPreviousData` because we don't want to clear out the current data when the query is modified via the UI\n      keepPreviousData: true,\n    },\n    setCurrentAsyncStatus,\n  )\n\n  const data = asyncJobStatus?.responseBody\n\n  // Indicate if we're fetching data for the first time (queryIsLoading) or if we're fetching data for a brand new query (newQueryIsFetching)\n  const isLoadingNewBundle = queryIsLoading || newQueryIsFetching\n\n  const { entityId, versionNumber } = parseEntityIdAndVersionFromSqlStatement(\n    lastQueryRequest.query.sql,\n  )!\n\n  const { data: entity } = useGetEntity<Table>(entityId, versionNumber)\n\n  const pageSize = lastQueryRequest.query.limit ?? DEFAULT_PAGE_SIZE\n  const currentPage = Math.ceil(\n    ((lastQueryRequest.query.offset ?? 0) + Number(pageSize)) / pageSize,\n  )\n\n  const setPageSize = (pageSize: number) => {\n    const lastQueryRequestDeepClone = getLastQueryRequest()\n    lastQueryRequestDeepClone.query.limit = pageSize\n    executeQueryRequest(lastQueryRequestDeepClone)\n  }\n\n  const goToPage = async (pageNum: number) => {\n    const lastQueryRequestDeepClone = getLastQueryRequest()\n    lastQueryRequestDeepClone.query.offset = (pageNum - 1) * pageSize\n    executeQueryRequest(lastQueryRequestDeepClone)\n  }\n\n  useDeepCompareEffect(() => {\n    if (onQueryChange) {\n      onQueryChange(JSON.stringify(lastQueryRequest.query))\n    }\n  }, [onQueryChange, lastQueryRequest.query])\n\n  useEffect(() => {\n    if (data && onQueryResultBundleChange) {\n      onQueryResultBundleChange(JSON.stringify(data))\n    }\n  }, [data, onQueryResultBundleChange])\n\n  const componentIndex = props.componentIndex ?? 0\n\n  const isFacetsAvailable = data\n    ? isFacetAvailable(data.facets, data.selectColumns)\n    : true\n\n  /**\n   * Inspect the URL to see if we have a particular query request that we must show.\n   */\n  useEffect(() => {\n    const query = DeepLinkingUtils.getQueryRequestFromLink(\n      'QueryWrapper',\n      componentIndex,\n    )\n    if (query) {\n      setLastQueryRequest(query)\n    }\n  }, [])\n\n  /**\n   * Pass down a deep clone (so no side affects on the child's part) of the\n   * last query request made\n   *\n   * @returns\n   * @memberof QueryWrapper\n   */\n  const getLastQueryRequest = React.useCallback(() => {\n    return cloneDeep(lastQueryRequest)\n  }, [lastQueryRequest])\n\n  /**\n   * Pass down a deep clone (so no side affects on the child's part) of the\n   * first query request made\n   *\n   * @returns\n   * @memberof QueryWrapper\n   */\n  function getInitQueryRequest(): QueryBundleRequest {\n    return cloneDeep(props.initQueryRequest)\n  }\n\n  /**\n   * Execute the given query request, updating all of the data in the QueryContext to match the new query\n   * @param {*} queryRequest Query request as specified by\n   *                         https://rest-docs.synapse.org/rest/org/sagebionetworks/repo/model/table/Query.html\n   */\n  function executeQueryRequest(queryRequest: QueryBundleRequest) {\n    const clonedQueryRequest = cloneDeep(queryRequest)\n\n    setLastQueryRequest(clonedQueryRequest)\n\n    if (clonedQueryRequest.query) {\n      const clonedQueryRequestJson = JSON.stringify(clonedQueryRequest.query)\n      const stringifiedQuery = encodeURIComponent(clonedQueryRequestJson)\n      if (props.shouldDeepLink) {\n        if (props.onQueryChange) {\n          props.onQueryChange(clonedQueryRequestJson)\n        } else {\n          DeepLinkingUtils.updateUrlWithNewSearchParam(\n            'QueryWrapper',\n            componentIndex,\n            stringifiedQuery,\n          )\n        }\n      }\n    }\n    /**\n     * TODO: We remove the cached data because it can interfere with user controls, such as the QueryFilter.\n     * For example, if you filter on a facet with value [\"a\"], then value [\"a\", \"b\"], then value [\"a\"] again,\n     * we'll have a cache hit on the last query, so we won't get a loading state, but the controls haven't been updated\n     * to handle cache hits. Forcing a cache miss here fixes this, but ideally the controls should handle this case.\n     */\n    remove()\n    // end TODO\n  }\n\n  /**\n   * remove a particular facet name (e.g. study) and its all possible values based on the parameter specified in the url\n   * this is to remove the facet from the charts, search and filter.\n   * @return data: QueryResultBundle\n   */\n  const dataWithLockedFacetRemoved = useMemo(() => {\n    const lockedFacet = props.lockedFacet?.facet\n    if (lockedFacet && data) {\n      // for details page, return data without the \"locked\" facet\n      const dataCopy: QueryResultBundle = cloneDeep(data)\n      const facets = dataCopy.facets?.filter(\n        item => item.columnName.toLowerCase() !== lockedFacet.toLowerCase(),\n      )\n      dataCopy.facets = facets\n      return dataCopy\n    } else {\n      // for other pages, just return the data\n      return data\n    }\n  }, [data, props.lockedFacet?.facet])\n\n  const context: PaginatedQueryContextType = {\n    data: dataWithLockedFacetRemoved,\n    currentPage,\n    pageSize,\n    setPageSize,\n    isLoadingNewBundle: isLoadingNewBundle,\n    getLastQueryRequest,\n    getInitQueryRequest,\n    error: error,\n    entity,\n    executeQueryRequest,\n    isFacetsAvailable,\n    asyncJobStatus: currentAsyncStatus,\n    goToPage,\n  }\n  /**\n   * Render the children without any formatting\n   */\n  const { children } = props\n  const loadingCursorClass = isLoadingNewBundle ? 'SRC-logo-cursor' : ''\n  return (\n    <QueryContextProvider queryContext={context}>\n      <div\n        className={`SRC-wrapper ${loadingCursorClass} ${\n          isFacetsAvailable ? 'has-facets' : ''\n        }`}\n      >\n        {children}\n      </div>\n    </QueryContextProvider>\n  )\n}\n","import { Close } from '@material-ui/icons'\nimport React from 'react'\nimport { FunctionComponent } from 'react'\nimport { SynapseConstants } from '../../../utils'\nimport { unCamelCase } from '../../../utils/functions/unCamelCase'\nimport {\n  FacetColumnResult,\n  FacetColumnResultRange,\n  FacetColumnResultValueCount,\n} from '../../../utils/synapseTypes'\nimport { ElementWithTooltip } from '../ElementWithTooltip'\n\nexport type FacetWithSelection = {\n  facet: FacetColumnResult\n  selectedValue?: FacetColumnResultValueCount\n  displayValue?: string\n}\n\nexport type SelectionCriteriaPillProps = (\n  | { readonly facetWithSelection: FacetWithSelection }\n  | {\n      filter: {\n        columnName?: string\n        value: string\n      }\n    }\n) & {\n  onRemove: () => void\n}\n\nconst SelectionCriteriaPill: FunctionComponent<\n  SelectionCriteriaPillProps\n> = props => {\n  let innerText,\n    tooltipText: string | null = ''\n  if ('facetWithSelection' in props) {\n    const { facetWithSelection } = props\n    if (facetWithSelection.facet.facetType === 'enumeration') {\n      innerText =\n        facetWithSelection.displayValue === SynapseConstants.VALUE_NOT_SET\n          ? SynapseConstants.FRIENDLY_VALUE_NOT_SET\n          : facetWithSelection.displayValue\n    } else {\n      innerText = `${(facetWithSelection.facet as FacetColumnResultRange)\n        .selectedMin!} \n        - ${(facetWithSelection.facet as FacetColumnResultRange).selectedMax!}`\n    }\n    tooltipText = `${unCamelCase(\n      facetWithSelection.facet.columnName!,\n    )}: ${innerText}`\n  } else if ('filter' in props) {\n    const { filter } = props\n    let filterValue = filter.value\n    if (filterValue?.startsWith('%') && filterValue?.endsWith('%')) {\n      // strip '%' wildcard character when using a LIKE condition\n      filterValue = filterValue.substring(1, filterValue.length - 1)\n    }\n\n    // For full-text search, set the pill text and tooltip text\n    innerText = filterValue\n    tooltipText = `Text matches: \"${filterValue}\"`\n\n    // If searching in a specific column, use different inner/tooltip text\n    if (filter.columnName) {\n      innerText = `\"${filterValue}\" in ${unCamelCase(filter?.columnName)}`\n      tooltipText = `${unCamelCase(filter?.columnName)}: ${filterValue}`\n    }\n  } else {\n    console.warn(\n      'Expected either facetWithSelection or filter in SelectionCriteriaPill but got neither',\n    )\n  }\n  const key = encodeURIComponent(tooltipText)\n  return (\n    <ElementWithTooltip\n      idForToolTip={`selectionCriteria_${key}`}\n      tooltipText={tooltipText}\n      callbackFn={() => {}}\n    >\n      <label\n        className=\"SelectionCriteriaPill\"\n        key={`SelectionCriteriaPill ${key}`}\n      >\n        <span>{innerText}</span>\n        <button\n          onClick={() => props.onRemove()}\n          className=\"SelectionCriteriaPill__btnRemove\"\n          title=\"deselect\"\n        >\n          <Close />\n        </button>\n      </label>\n    </ElementWithTooltip>\n  )\n}\n\nexport default SelectionCriteriaPill\n","import * as React from 'react'\nimport { unCamelCase } from '../../../utils/functions/unCamelCase'\nimport IconPlus from '../../../assets/icons/IconPlus'\nimport IconMinus from '../../../assets/icons/IconMinus'\n\nexport type FacetFilterHeaderProps = {\n  label: string\n  isCollapsed: boolean\n  onClick: Function\n  facetAliases: {} | undefined\n}\nexport const FacetFilterHeader: React.FunctionComponent<\n  FacetFilterHeaderProps\n> = ({ label, isCollapsed, onClick, facetAliases }: FacetFilterHeaderProps) => {\n  return (\n    <div className=\"FacetFilterHeader\">\n      <label className=\"FacetFilterHeader__label\">\n        {unCamelCase(label, facetAliases)}\n      </label>\n      <button\n        className=\"FacetFilterHeader__collapseToggleBtn\"\n        onClick={() => onClick(!isCollapsed)}\n      >\n        {isCollapsed ? (\n          <IconPlus className=\"icon-plus\" title=\"Expand Menu\" />\n        ) : (\n          <IconMinus className=\"icon-minus\" title=\"Collapse Menu\" />\n        )}\n      </button>\n    </div>\n  )\n}\n","import { Collapse } from '@material-ui/core'\nimport React, { useState } from 'react'\nimport { Dropdown } from 'react-bootstrap'\nimport useDeepCompareEffect from 'use-deep-compare-effect'\nimport { ElementWithTooltip } from '../../../containers/widgets/ElementWithTooltip'\nimport { SynapseConstants } from '../../../utils'\nimport useGetInfoFromIds from '../../../utils/hooks/useGetInfoFromIds'\nimport { ColumnType, UserGroupHeader } from '../../../utils/synapseTypes'\nimport { EntityHeader } from '../../../utils/synapseTypes/EntityHeader'\nimport {\n  FacetColumnResultValueCount,\n  SelectColumn,\n} from '../../../utils/synapseTypes/Table'\nimport IconSvg from '../../IconSvg'\nimport { Checkbox } from '../Checkbox'\nimport { FacetFilterHeader } from './FacetFilterHeader'\n\nexport type EnumFacetFilterProps = {\n  facetValues: FacetColumnResultValueCount[]\n  columnModel: SelectColumn\n  onChange: (facetNamesMap: Record<string, string>) => void\n  onClear: () => void\n  facetAliases?: Record<string, string>\n  containerAs?: 'Collapsible' | 'Dropdown'\n  dropdownType?: 'Icon' | 'SelectBox'\n  collapsed?: boolean\n}\n\nfunction valueToId(value: string): string {\n  return value.replace(/\\s/g, '').toLowerCase()\n}\n\nfunction valueToLabel(\n  facet: FacetColumnResultValueCount,\n  profiles: UserGroupHeader[] = [],\n  entityHeaders: EntityHeader[] = [],\n): string {\n  const { value } = facet\n  let displayValue = value\n  if (value === SynapseConstants.VALUE_NOT_SET) {\n    displayValue = SynapseConstants.FRIENDLY_VALUE_NOT_SET\n  }\n  const profile = profiles.find(profile => profile.ownerId === value)\n  if (profile) {\n    displayValue = profile ? profile.userName : `unknown (${value})`\n  }\n\n  const eh = entityHeaders.find(eh => eh.id === value)\n  if (eh) {\n    displayValue = eh ? eh.name : `unknown (${value})`\n  }\n\n  return `${displayValue}`\n}\n\nfunction formatFacetValuesForDisplay(\n  facetValues: FacetColumnResultValueCount[],\n  isShowAll: boolean,\n  visibleItemsCount: number,\n) {\n  //sort facets by count\n  const facets = [...facetValues.sort((a, b) => b.count - a.count)]\n  if (isShowAll || facets.length <= visibleItemsCount) {\n    return facets\n  } else {\n    //if we are not hiding elected facets\n    if (facets.slice(visibleItemsCount).find(item => item.isSelected)) {\n      return facets\n    } else {\n      return facets.splice(0, visibleItemsCount)\n    }\n  }\n}\n\n/************* QUERY ENUM CONMPONENT  *************/\n\nexport const EnumFacetFilter: React.FunctionComponent<EnumFacetFilterProps> = ({\n  facetValues,\n  columnModel,\n  onClear,\n  onChange,\n  facetAliases,\n  containerAs = 'Collapsible',\n  dropdownType = 'Icon',\n  collapsed = false,\n}: EnumFacetFilterProps) => {\n  const [isShowAll, setIsShowAll] = useState<boolean>(false)\n  const [isCollapsed, setIsCollapsed] = useState<boolean>(collapsed)\n  const [isShowDropdown, setIsShowDropdown] = useState<boolean>(false)\n  const [showSearch, setShowSearch] = useState<boolean>(false)\n  const [searchTerm, setSearchText] = useState<string>('')\n  const [filteredSet, setFilteredSet] =\n    useState<FacetColumnResultValueCount[]>(facetValues)\n\n  useDeepCompareEffect(() => {\n    setFilteredSet(facetValues)\n  }, [facetValues])\n\n  const visibleItemsCount = 5\n  const selectionDelay = 1500 // in ms\n  const textInput: React.RefObject<HTMLInputElement> = React.createRef()\n  const selectedValuesMap = {}\n  let timer: ReturnType<typeof setTimeout>\n\n  const allIsSelected = facetValues.filter(item => item.isSelected).length === 0\n\n  const userIds =\n    columnModel?.columnType === ColumnType.USERID ||\n    columnModel?.columnType === ColumnType.USERID_LIST\n      ? facetValues.map(facet => facet.value)\n      : []\n  const userGroupHeaders = useGetInfoFromIds<UserGroupHeader>({\n    ids: userIds,\n    type: 'USER_PROFILE',\n  })\n\n  const entityIds =\n    columnModel?.columnType === ColumnType.ENTITYID ||\n    columnModel?.columnType === ColumnType.ENTITYID_LIST\n      ? facetValues.map(facet => facet.value)\n      : []\n  const entityHeaders = useGetInfoFromIds<EntityHeader>({\n    ids: entityIds,\n    type: 'ENTITY_HEADER',\n  })\n\n  const handleTextInputFilterEvent = (\n    e: React.ChangeEvent<HTMLInputElement>,\n  ) => {\n    const inputValue: string = e.target.value\n    setSearchText(inputValue)\n    setIsShowAll(true) // While in filter search mode, display all filtered values\n\n    if (!inputValue) {\n      // if input field is empty, display all facet values\n      facetValues.forEach(obj => {\n        obj.isSelected = false\n      })\n      setFilteredSet(facetValues)\n    } else {\n      // display only facet values that contain text from the text input field\n      const filtered = facetValues.filter(obj => {\n        const label = valueToLabel(obj, userGroupHeaders, entityHeaders)\n        return label.toLowerCase().indexOf(inputValue.trim().toLowerCase()) > -1\n          ? obj\n          : null\n      })\n      setFilteredSet(filtered)\n    }\n  }\n\n  if (!columnModel) {\n    return <></>\n  }\n  const isDropdown = containerAs === 'Dropdown'\n  const content = (\n    <div className={isDropdown ? 'EnumFacetFilter__dropdown_menu' : ''}>\n      <div className=\"EnumFacetFilter__checkboxContainer--forAll\">\n        <div\n          className={\n            showSearch\n              ? 'EnumFacetFilter__search active'\n              : 'EnumFacetFilter__search'\n          }\n        >\n          <button // Close Search Button\n            className=\"EnumFacetFilter__closeSearch\"\n            onClick={() => {\n              setFilteredSet(facetValues)\n              setShowSearch(false)\n              setIsShowAll(false)\n            }}\n          >\n            <span className=\"EnumFacetFilter__previous\">\n              <IconSvg options={{ icon: 'arrowBack' }} />\n            </span>\n          </button>\n          {searchTerm.length > 0 && (\n            <button // Clear Search Filter Text Button\n              className=\"EnumFacetFilter__resetSearch\"\n              onClick={() => {\n                setSearchText('')\n                textInput.current?.focus()\n              }}\n            >\n              <span className=\"EnumFacetFilter__reset\">\n                <IconSvg options={{ icon: 'close' }} />\n              </span>\n            </button>\n          )}\n          <input // Search Filter Text\n            type=\"text\"\n            placeholder=\"Find values\"\n            value={searchTerm}\n            ref={textInput}\n            onChange={e => {\n              handleTextInputFilterEvent(e)\n            }}\n          />\n        </div>\n        {!showSearch && (\n          <div className=\"EnumFacetFilter__checkAll\">\n            <Checkbox\n              className=\"EnumFacetFilter__checkbox\"\n              onChange={() => {\n                onClear()\n              }}\n              key=\"select_all\"\n              checked={allIsSelected}\n              label=\"All\"\n              isSelectAll={true}\n            ></Checkbox>\n            <button\n              className=\"EnumFacetFilter__searchbtn\"\n              onClick={() => {\n                setSearchText('')\n                setShowSearch(true)\n                textInput.current?.focus()\n              }}\n            >\n              <span className=\"EnumFacetFilter__searchicon\">\n                <IconSvg options={{ icon: 'search' }} />\n              </span>\n            </button>\n          </div>\n        )}\n      </div>\n      <div>\n        {filteredSet.length > 0 &&\n          formatFacetValuesForDisplay(\n            filteredSet,\n            isShowAll || isDropdown,\n            visibleItemsCount,\n          ).map((facet, index: number) => (\n            <EnumFacetFilterOption\n              key={`checkLabel${index}`}\n              id={valueToId(facet.value)}\n              index={index}\n              label={valueToLabel(facet, userGroupHeaders, entityHeaders)}\n              count={facet.count}\n              isDropdown={isDropdown}\n              initialIsSelected={facet.isSelected}\n              onChange={(isChecked: boolean) => {\n                selectedValuesMap[facet.value] = isChecked\n                clearTimeout(timer)\n                timer = setTimeout(() => {\n                  onChange(selectedValuesMap)\n                  setIsShowDropdown(false)\n                }, selectionDelay)\n              }}\n            />\n          ))}\n        {!isDropdown && (\n          <>\n            {!isShowAll && filteredSet.length > visibleItemsCount && (\n              <button\n                className=\"EnumFacetFilter__showMoreFacetsBtn\"\n                onClick={() => setIsShowAll(true)}\n              >\n                <div className=\"EnumFacetFilter__checkboxContainer\">\n                  <div className=\"EnumFacetFilter__showMoreFacetsLabel\">\n                    Show all ({filteredSet.length})\n                  </div>\n                </div>\n              </button>\n            )}\n            {isShowAll && filteredSet.length > visibleItemsCount && (\n              <button\n                className=\"EnumFacetFilter__showMoreFacetsBtn\"\n                onClick={() => setIsShowAll(false)}\n              >\n                <div className=\"EnumFacetFilter__checkboxContainer\">\n                  <div className=\"EnumFacetFilter__showMoreFacetsLabel\">\n                    Show less\n                  </div>\n                </div>\n              </button>\n            )}\n          </>\n        )}\n        {filteredSet.length <= 0 && (\n          <div className=\"EnumFacetFilter__noMatch\">No match found</div>\n        )}\n      </div>\n    </div>\n  )\n\n  const onToggle = () => setIsShowDropdown(!isShowDropdown)\n\n  if (isDropdown) {\n    if (dropdownType === 'SelectBox') {\n      return (\n        <Dropdown\n          className={'EnumFacetFilter EnumFacetFilterSelect'}\n          show={isShowDropdown}\n          onToggle={onToggle}\n        >\n          <Dropdown.Toggle className=\"secondary-caret\" variant=\"gray-select\">\n            {allIsSelected && 'All'}\n            {!allIsSelected &&\n              facetValues.filter(item => item.isSelected).length === 1 &&\n              facetValues.filter(item => item.isSelected)[0].value}\n            {!allIsSelected &&\n              facetValues.filter(item => item.isSelected).length > 1 &&\n              'Multiple Values Selected'}\n          </Dropdown.Toggle>\n          <Dropdown.Menu>{content}</Dropdown.Menu>\n        </Dropdown>\n      )\n    } else {\n      return (\n        <Dropdown\n          className=\"EnumFacetFilter\"\n          show={isShowDropdown}\n          onToggle={onToggle}\n        >\n          <ElementWithTooltip\n            idForToolTip=\"facetFilterTooltip\"\n            tooltipText=\"Filter by specific facet\"\n            key=\"facetFilterTooltip\"\n            darkTheme={false}\n            icon={'filter'}\n          />\n          <Dropdown.Menu>{content}</Dropdown.Menu>\n        </Dropdown>\n      )\n    }\n  } else {\n    return (\n      <>\n        <FacetFilterHeader\n          facetAliases={facetAliases}\n          isCollapsed={isCollapsed}\n          label={columnModel.name}\n          onClick={(isCollapsed: boolean) => setIsCollapsed(isCollapsed)}\n        />\n        <Collapse className=\"EnumFacetFilter\" in={!isCollapsed}>\n          {content}\n        </Collapse>\n      </>\n    )\n  }\n}\n\ntype EnumFacetFilterOptionProps = {\n  readonly id: string\n  readonly index: number\n  readonly label: string\n  readonly count: number\n  readonly isDropdown: boolean\n  readonly initialIsSelected: boolean\n  readonly onChange: (selected: boolean) => void\n}\n\nfunction EnumFacetFilterOption({\n  id,\n  index,\n  label,\n  count,\n  isDropdown,\n  initialIsSelected,\n  onChange,\n}: EnumFacetFilterOptionProps) {\n  const [isSelected, setIsSelected] = useState(initialIsSelected)\n\n  React.useEffect(() => {\n    setIsSelected(initialIsSelected)\n  }, [initialIsSelected])\n\n  return (\n    <div\n      className=\"EnumFacetFilter__checkboxContainer\"\n      onClick={() => {\n        if (isDropdown) {\n          setIsSelected(!isSelected)\n          onChange(!isSelected)\n        }\n      }}\n    >\n      <Checkbox\n        className=\"EnumFacetFilter__checkbox\"\n        onClick={event => event.stopPropagation()}\n        onChange={newValue => {\n          setIsSelected(newValue)\n          onChange(newValue)\n        }}\n        key={`${id}-${index}`}\n        checked={isSelected}\n        label={label}\n      ></Checkbox>\n      {isDropdown && <span className=\"EnumFacetFilter__count\">({count})</span>}\n      {!isDropdown && <div className=\"EnumFacetFilter__count\">{count}</div>}\n    </div>\n  )\n}\n","import React, { useState } from 'react'\nimport moment from 'moment'\n\ntype ControlType = 'number' | 'date'\n\nexport type RangeValues = {\n  min?: string\n  max?: string\n}\n\nexport type RangeProps = {\n  type: ControlType\n  initialValues?: RangeValues\n  className?: string\n  errorText?: string\n  onChange: Function\n}\n\nexport const Range: React.FunctionComponent<RangeProps> = (\n  props: RangeProps,\n) => {\n  const errorText = 'Min value should be less then max value'\n  const [error, setError] = useState(false)\n  const [values, setValues] = useState(() =>\n    props.type === 'number' && props.initialValues\n      ? props.initialValues\n      : (props.initialValues && {\n          min: moment(props.initialValues.min).format('YYYY-MM-DD'),\n          max: moment(props.initialValues.max).format('YYYY-MM-DD'),\n        }) || {\n          min: undefined,\n          max: undefined,\n        },\n  )\n\n  const className = props.className ? `range ${props.className}` : `range`\n\n  const isValid = (\n    { min, max }: RangeValues,\n\n    type: ControlType = 'number',\n  ) => {\n    if (\n      min === null ||\n      min === undefined ||\n      max === null ||\n      max === undefined\n    ) {\n      setError(false)\n      return true\n    }\n\n    if (type === 'number') {\n      if (Number(min) > Number(max)) {\n        setError(true)\n        return false\n      }\n    }\n    if (Date.parse(min) > Date.parse(max)) {\n      setError(true)\n      return false\n    }\n    setError(false)\n    return true\n  }\n\n  const handleAppyChanges = (\n    values: RangeValues,\n    callBackFn: Function,\n    type: ControlType = 'number',\n  ) => {\n    if (isValid(values, type)) {\n      callBackFn(values)\n    }\n  }\n\n  return (\n    <div className={className} style={{ display: 'flex', flexWrap: 'wrap' }}>\n      <div style={{ marginRight: '10px' }}>\n        <input\n          key=\"range_min\"\n          type={props.type}\n          value={values.min}\n          onChange={({ target }: React.ChangeEvent<HTMLInputElement>) =>\n            setValues({ min: target.value, max: values.max })\n          }\n        />\n        <div>to</div>\n        <input\n          key=\"range_max\"\n          type={props.type}\n          value={values.max}\n          onChange={({ target }: React.ChangeEvent<HTMLInputElement>) =>\n            setValues({ min: values.min, max: target.value })\n          }\n        />\n      </div>\n      <button\n        className=\"btn btn-link SRC-noPadding\"\n        onClick={() => handleAppyChanges(values, props.onChange, props.type)}\n      >\n        Apply\n      </button>\n      {error && (\n        <div className=\"SRC-danger-color\">{props.errorText || errorText}</div>\n      )}\n    </div>\n  )\n}\n","export var callAll = function callAll() {\n  for (var _len = arguments.length, fns = new Array(_len), _key = 0; _key < _len; _key++) {\n    fns[_key] = arguments[_key];\n  }\n\n  return function () {\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    return fns.forEach(function (fn) {\n      return fn && fn.apply(void 0, args);\n    });\n  };\n};","import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { callAll } from '../utils';\n\nvar Rail =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Rail, _Component);\n\n  function Rail() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Rail);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Rail)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"getRailProps\", function () {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var _this$props = _this.props,\n          emitMouse = _this$props.emitMouse,\n          emitTouch = _this$props.emitTouch;\n      return _objectSpread({}, props, {\n        onMouseDown: callAll(props.onMouseDown, emitMouse),\n        onTouchStart: callAll(props.onTouchStart, emitTouch)\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(Rail, [{\n    key: \"render\",\n    value: function render() {\n      var getRailProps = this.getRailProps,\n          _this$props2 = this.props,\n          getEventData = _this$props2.getEventData,\n          activeHandleID = _this$props2.activeHandleID,\n          children = _this$props2.children;\n      var renderedChildren = children({\n        getEventData: getEventData,\n        activeHandleID: activeHandleID,\n        getRailProps: getRailProps\n      });\n      return renderedChildren && React.Children.only(renderedChildren);\n    }\n  }]);\n\n  return Rail;\n}(Component);\n\nRail.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** @ignore */\n  getEventData: PropTypes.func,\n\n  /** @ignore */\n  activeHandleID: PropTypes.string,\n\n  /** @ignore */\n  emitMouse: PropTypes.func,\n\n  /** @ignore */\n  emitTouch: PropTypes.func,\n\n  /**\n   * A function to render the rail. Note: `getEventData` can be called with an event and get the value and percent at that location (used for tooltips etc). `activeHandleID` will be a string or null.  Function signature: `({ getEventData, activeHandleID, getRailProps }): element`\n   */\n  children: PropTypes.func.isRequired\n} : {};\nexport default Rail;","import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nvar Ticks =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Ticks, _Component);\n\n  function Ticks() {\n    _classCallCheck(this, Ticks);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Ticks).apply(this, arguments));\n  }\n\n  _createClass(Ticks, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          children = _this$props.children,\n          values = _this$props.values,\n          scale = _this$props.scale,\n          count = _this$props.count,\n          getEventData = _this$props.getEventData,\n          activeHandleID = _this$props.activeHandleID;\n      var ticks = (values ? values : scale.getTicks(count)).map(function (value) {\n        return {\n          id: \"$$-\".concat(value),\n          value: value,\n          percent: scale.getValue(value)\n        };\n      });\n      var renderedChildren = children({\n        getEventData: getEventData,\n        activeHandleID: activeHandleID,\n        ticks: ticks\n      });\n      return renderedChildren && React.Children.only(renderedChildren);\n    }\n  }]);\n\n  return Ticks;\n}(Component);\n\nTicks.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** @ignore */\n  scale: PropTypes.object,\n\n  /**\n   * Approximate number of ticks you want to render.\n   * If you supply your own ticks using the values prop this prop has no effect.\n   */\n  count: PropTypes.number,\n\n  /**\n   * The values prop should be an array of unique numbers.\n   * Use this prop if you want to specify your own tick values instead of ticks generated by the slider.\n   * The numbers should be valid numbers in the domain and correspond to the step value.\n   * Invalid values will be coerced to the closet matching value in the domain.\n   */\n  values: PropTypes.array,\n\n  /** @ignore */\n  getEventData: PropTypes.func,\n\n  /** @ignore */\n  activeHandleID: PropTypes.string,\n\n  /** @ignore */\n  emitMouse: PropTypes.func,\n\n  /** @ignore */\n  emitTouch: PropTypes.func,\n\n  /**\n   * A function to render the ticks.\n   * The function receives an object with an array of ticks. Note: `getEventData` can be called with an event and get the value and percent at that location (used for tooltips etc). `activeHandleID` will be a string or null.  Function signature:\n   * `({ getEventData, activeHandleID, ticks  }): element`\n   */\n  children: PropTypes.func.isRequired\n} : {};\nTicks.defaultProps = {\n  count: 10\n};\nexport default Ticks;","import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { callAll } from '../utils';\n\nvar Tracks =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Tracks, _Component);\n\n  function Tracks() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Tracks);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Tracks)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"getTrackProps\", function () {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var _this$props = _this.props,\n          emitMouse = _this$props.emitMouse,\n          emitTouch = _this$props.emitTouch;\n      return _objectSpread({}, props, {\n        onMouseDown: callAll(props.onMouseDown, emitMouse),\n        onTouchStart: callAll(props.onTouchStart, emitTouch)\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(Tracks, [{\n    key: \"render\",\n    value: function render() {\n      var getTrackProps = this.getTrackProps,\n          _this$props2 = this.props,\n          children = _this$props2.children,\n          left = _this$props2.left,\n          right = _this$props2.right,\n          scale = _this$props2.scale,\n          handles = _this$props2.handles,\n          getEventData = _this$props2.getEventData,\n          activeHandleID = _this$props2.activeHandleID;\n      var domain = scale.getDomain();\n      var tracks = [];\n\n      for (var i = 0; i < handles.length + 1; i++) {\n        var source = handles[i - 1];\n        var target = handles[i];\n\n        if (i === 0 && left === true) {\n          source = {\n            id: '$',\n            value: domain[0],\n            percent: 0\n          };\n        } else if (i === handles.length && right === true) {\n          target = {\n            id: '$',\n            value: domain[1],\n            percent: 100\n          };\n        }\n\n        if (source && target) {\n          tracks.push({\n            id: \"\".concat(source.id, \"-\").concat(target.id),\n            source: source,\n            target: target\n          });\n        }\n      }\n\n      var renderedChildren = children({\n        getEventData: getEventData,\n        activeHandleID: activeHandleID,\n        tracks: tracks,\n        getTrackProps: getTrackProps\n      });\n      return renderedChildren && React.Children.only(renderedChildren);\n    }\n  }]);\n\n  return Tracks;\n}(Component);\n\nTracks.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * Boolean value to control whether the left most track is included in the tracks array.\n   */\n  left: PropTypes.bool,\n\n  /**\n   * Boolean value to control whether the right most track is included in the tracks array.\n   */\n  right: PropTypes.bool,\n\n  /** @ignore */\n  getEventData: PropTypes.func,\n\n  /** @ignore */\n  activeHandleID: PropTypes.string,\n\n  /** @ignore */\n  scale: PropTypes.object,\n\n  /** @ignore */\n  handles: PropTypes.array,\n\n  /** @ignore */\n  emitMouse: PropTypes.func,\n\n  /** @ignore */\n  emitTouch: PropTypes.func,\n\n  /**\n   * A function to render the tracks. The function receives an object with an array of tracks. Note: `getEventData` can be called with an event and get the value and percent at that location (used for tooltips etc). `activeHandleID` will be a string or null.  Function signature:  `({ getEventData, activeHandleID, tracks, getTrackProps }): element`\n   */\n  children: PropTypes.func.isRequired\n} : {};\nTracks.defaultProps = {\n  left: true,\n  right: true\n};\nexport default Tracks;","import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { callAll } from '../utils';\n\nvar Handles =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Handles, _Component);\n\n  function Handles() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Handles);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Handles)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"autofocus\", function (e) {\n      e.target.focus();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getHandleProps\", function (id) {\n      var props = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var _this$props = _this.props,\n          emitKeyboard = _this$props.emitKeyboard,\n          emitMouse = _this$props.emitMouse,\n          emitTouch = _this$props.emitTouch;\n      return _objectSpread({}, props, {\n        onKeyDown: callAll(props.onKeyDown, function (e) {\n          return emitKeyboard(e, id);\n        }),\n        onMouseDown: callAll(props.onMouseDown, _this.autofocus, function (e) {\n          return emitMouse(e, id);\n        }),\n        onTouchStart: callAll(props.onTouchStart, function (e) {\n          return emitTouch(e, id);\n        })\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(Handles, [{\n    key: \"render\",\n    value: function render() {\n      var getHandleProps = this.getHandleProps,\n          _this$props2 = this.props,\n          activeHandleID = _this$props2.activeHandleID,\n          children = _this$props2.children,\n          handles = _this$props2.handles;\n      var renderedChildren = children({\n        handles: handles,\n        activeHandleID: activeHandleID,\n        getHandleProps: getHandleProps\n      });\n      return renderedChildren && React.Children.only(renderedChildren);\n    }\n  }]);\n\n  return Handles;\n}(Component);\n\nHandles.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** @ignore */\n  activeHandleID: PropTypes.string,\n\n  /** @ignore */\n  handles: PropTypes.array,\n\n  /** @ignore */\n  emitKeyboard: PropTypes.func,\n\n  /** @ignore */\n  emitMouse: PropTypes.func,\n\n  /** @ignore */\n  emitTouch: PropTypes.func,\n\n  /**\n   * A function to render the handles.\n   * The function receives an object with an array of handles and functions to get handle props\n   * `({ handles, getHandleProps }): element`\n   */\n  children: PropTypes.func.isRequired\n} : {};\nexport default Handles;","import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport warning from 'warning';\nexport var prfx = 'react-compound-slider:';\nexport function getSortByVal(reversed) {\n  return function sortByVal(a, b) {\n    if (a.val > b.val) {\n      return reversed ? -1 : 1;\n    }\n\n    if (b.val > a.val) {\n      return reversed ? 1 : -1;\n    }\n\n    return 0;\n  };\n}\nexport function getUpdatedHandles(handles, updateKey, updateValue, reversed) {\n  var index = handles.findIndex(function (v) {\n    return v.key === updateKey;\n  });\n\n  if (index !== -1) {\n    var _handles$index = handles[index],\n        key = _handles$index.key,\n        val = _handles$index.val;\n\n    if (val === updateValue) {\n      return handles;\n    }\n\n    return [].concat(_toConsumableArray(handles.slice(0, index)), [{\n      key: key,\n      val: updateValue\n    }], _toConsumableArray(handles.slice(index + 1))).sort(getSortByVal(reversed));\n  }\n\n  return handles;\n}\nexport function getSliderDomain(slider, vertical) {\n  if (!slider) {\n    return [0, 0];\n  }\n\n  var s = slider.getBoundingClientRect();\n  var d0 = vertical ? s.top : s.left;\n  var d1 = vertical ? s.bottom : s.right;\n  return [d0, d1];\n}\nexport function isNotValidTouch(_ref) {\n  var _ref$type = _ref.type,\n      type = _ref$type === void 0 ? '' : _ref$type,\n      touches = _ref.touches;\n  return !touches || touches.length > 1 || type.toLowerCase() === 'touchend' && touches.length > 0;\n}\nexport function getTouchPosition(vertical, e) {\n  return vertical ? e.touches[0].clientY : e.touches[0].pageX;\n}\nexport function getHandles() {\n  var values = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var reversed = arguments.length > 1 ? arguments[1] : undefined;\n  var valueToStep = arguments.length > 2 ? arguments[2] : undefined;\n  var warn = arguments.length > 3 ? arguments[3] : undefined;\n  var changes = 0;\n  var handles = values.map(function (x) {\n    var val = valueToStep.getValue(x);\n\n    if (x !== val) {\n      changes += 1;\n      warning(!warn, \"\".concat(prfx, \" Invalid value encountered. Changing \").concat(x, \" to \").concat(val, \".\"));\n    }\n\n    return val;\n  }).map(function (val, i) {\n    return {\n      key: \"$$-\".concat(i),\n      val: val\n    };\n  }).sort(getSortByVal(reversed));\n  return {\n    handles: handles,\n    changes: changes\n  };\n}","/* eslint complexity: \"off\", max-statements: \"off\", max-depth: \"off\" */\nimport { getUpdatedHandles } from './utils'; // default mode\n\nexport function mode1(curr, next) {\n  return next;\n} // prevent duplicate values and crossing\n\nexport function mode2(curr, next) {\n  for (var i = 0; i < curr.length; i++) {\n    if (curr[i].key !== next[i].key) {\n      return curr;\n    }\n\n    if (next[i + 1] && next[i].val === next[i + 1].val) {\n      return curr;\n    }\n  }\n\n  return next;\n} // pushable mode\n\nexport function mode3(curr, next, step, reversed, getValue) {\n  var indexForMovingHandle = -1;\n  var handleMoveIsPositive = true;\n\n  for (var i = 0; i < curr.length; i++) {\n    var c = curr[i];\n    var n = next[i]; // make sure keys are in same order if not return curr\n\n    if (!n || n.key !== c.key) {\n      return curr;\n    } else if (n.val !== c.val) {\n      indexForMovingHandle = i;\n      handleMoveIsPositive = n.val - c.val > 0;\n    }\n  } // nothing has changed (shouldn't happen but just in case).\n\n\n  if (indexForMovingHandle === -1) {\n    return curr;\n  } else {\n    var increment = handleMoveIsPositive ? step : -step;\n\n    for (var _i = 0; _i < next.length; _i++) {\n      var n0 = next[_i];\n      var n1 = next[_i + 1];\n\n      if (n1 && n0.val === n1.val) {\n        if (_i === indexForMovingHandle) {\n          var newStep = n1.val + increment;\n\n          if (getValue(newStep) === newStep) {\n            var clone = getUpdatedHandles(next, n1.key, n1.val + increment, reversed);\n            var check = mode3(next, clone, step, reversed, getValue);\n\n            if (check === next) {\n              return curr;\n            } else {\n              return check;\n            }\n          } else {\n            return curr;\n          }\n        } else {\n          var _newStep = n0.val + increment;\n\n          if (getValue(_newStep) === _newStep) {\n            var _clone = getUpdatedHandles(next, n0.key, n0.val + increment, reversed);\n\n            var _check = mode3(next, _clone, step, reversed, getValue);\n\n            if (_check === next) {\n              return curr;\n            } else {\n              return _check;\n            }\n          } else {\n            return curr;\n          }\n        }\n      }\n    }\n  }\n\n  return next;\n}","export default function(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n","import ascending from \"./ascending\";\n\nexport default function(compare) {\n  if (compare.length === 1) compare = ascendingComparator(compare);\n  return {\n    left: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) < 0) lo = mid + 1;\n        else hi = mid;\n      }\n      return lo;\n    },\n    right: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) > 0) hi = mid;\n        else lo = mid + 1;\n      }\n      return lo;\n    }\n  };\n}\n\nfunction ascendingComparator(f) {\n  return function(d, x) {\n    return ascending(f(d), x);\n  };\n}\n","import ascending from \"./ascending\";\nimport bisector from \"./bisector\";\n\nvar ascendingBisect = bisector(ascending);\nexport var bisectRight = ascendingBisect.right;\nexport var bisectLeft = ascendingBisect.left;\nexport default bisectRight;\n","var e10 = Math.sqrt(50),\n    e5 = Math.sqrt(10),\n    e2 = Math.sqrt(2);\n\nexport default function(start, stop, count) {\n  var reverse,\n      i = -1,\n      n,\n      ticks,\n      step;\n\n  stop = +stop, start = +start, count = +count;\n  if (start === stop && count > 0) return [start];\n  if (reverse = stop < start) n = start, start = stop, stop = n;\n  if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) return [];\n\n  if (step > 0) {\n    start = Math.ceil(start / step);\n    stop = Math.floor(stop / step);\n    ticks = new Array(n = Math.ceil(stop - start + 1));\n    while (++i < n) ticks[i] = (start + i) * step;\n  } else {\n    start = Math.floor(start * step);\n    stop = Math.ceil(stop * step);\n    ticks = new Array(n = Math.ceil(start - stop + 1));\n    while (++i < n) ticks[i] = (start - i) / step;\n  }\n\n  if (reverse) ticks.reverse();\n\n  return ticks;\n}\n\nexport function tickIncrement(start, stop, count) {\n  var step = (stop - start) / Math.max(0, count),\n      power = Math.floor(Math.log(step) / Math.LN10),\n      error = step / Math.pow(10, power);\n  return power >= 0\n      ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power)\n      : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);\n}\n\nexport function tickStep(start, stop, count) {\n  var step0 = Math.abs(stop - start) / Math.max(0, count),\n      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n      error = step0 / step1;\n  if (error >= e10) step1 *= 10;\n  else if (error >= e5) step1 *= 5;\n  else if (error >= e2) step1 *= 2;\n  return stop < start ? -step1 : step1;\n}\n","import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport { ticks } from 'd3-array';\n\nvar LinearScale =\n/*#__PURE__*/\nfunction () {\n  function LinearScale() {\n    _classCallCheck(this, LinearScale);\n\n    this.domain = [0, 1];\n    this.range = [0, 1];\n    this.interpolator = null;\n  }\n\n  _createClass(LinearScale, [{\n    key: \"createInterpolator\",\n    value: function createInterpolator(domain, range) {\n      var d0 = domain[0];\n      var d1 = domain[1];\n      var r0 = range[0];\n      var r1 = range[1];\n\n      if (d1 < d0) {\n        d0 = this.deinterpolateValue(d1, d0);\n        r0 = this.interpolateValue(r1, r0);\n      } else {\n        d0 = this.deinterpolateValue(d0, d1);\n        r0 = this.interpolateValue(r0, r1);\n      }\n\n      return function (x) {\n        return r0(d0(x));\n      };\n    }\n  }, {\n    key: \"interpolateValue\",\n    value: function interpolateValue(a, b) {\n      return a = +a, b -= a, function i(t) {\n        return a + b * t;\n      };\n    }\n  }, {\n    key: \"deinterpolateValue\",\n    value: function deinterpolateValue(a, b) {\n      return (b -= a = +a) ? function (x) {\n        return (x - a) / b;\n      } : function () {\n        return b;\n      }; // eslint-disable-line\n    }\n  }, {\n    key: \"rescale\",\n    value: function rescale() {\n      this.interpolator = null;\n      return this;\n    }\n  }, {\n    key: \"getValue\",\n    value: function getValue(x) {\n      var domain = this.domain,\n          range = this.range;\n      return (this.interpolator || (this.interpolator = this.createInterpolator(domain, range)))(+x);\n    }\n  }, {\n    key: \"setDomain\",\n    value: function setDomain(val) {\n      this.domain = val.map(function (d) {\n        return +d;\n      });\n      this.rescale();\n      return this;\n    }\n  }, {\n    key: \"getDomain\",\n    value: function getDomain() {\n      return this.domain;\n    }\n  }, {\n    key: \"setRange\",\n    value: function setRange(val) {\n      this.range = val.map(function (d) {\n        return +d;\n      });\n      return this;\n    }\n  }, {\n    key: \"getTicks\",\n    value: function getTicks(count) {\n      var d = this.domain;\n      return ticks(d[0], d[d.length - 1], count ? count : 10);\n    }\n  }]);\n\n  return LinearScale;\n}();\n\nexport { LinearScale as default };","import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction clamp(value, min, max) {\n  return Math.min(Math.max(value, min), max);\n}\n\nvar DiscreteScale = function DiscreteScale() {\n  var _this = this;\n\n  _classCallCheck(this, DiscreteScale);\n\n  _defineProperty(this, \"setDomain\", function (val) {\n    _this.domain = val.slice();\n    return _this;\n  });\n\n  _defineProperty(this, \"setRange\", function (val) {\n    _this.range = val.slice();\n    return _this;\n  });\n\n  _defineProperty(this, \"setStep\", function (val) {\n    _this.step = val;\n    return _this;\n  });\n\n  _defineProperty(this, \"getValue\", function (x) {\n    var _this$domain = _slicedToArray(_this.domain, 2),\n        d0 = _this$domain[0],\n        d1 = _this$domain[1],\n        _this$range = _slicedToArray(_this.range, 2),\n        r0 = _this$range[0],\n        r1 = _this$range[1],\n        step = _this.step;\n\n    var p = (clamp(x, d0, d1) - d0) / (d1 - d0);\n    var b = step * Math.round(p * (r1 - r0) / step) + r0;\n    return clamp(b, r0 < r1 ? r0 : r1, r1 > r0 ? r1 : r0);\n  });\n\n  this.step = 1;\n  this.domain = [0, 1];\n  this.range = [0, 1];\n};\n\nexport default DiscreteScale;","import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport React, { PureComponent, Fragment } from 'react';\nimport warning from 'warning';\nimport PropTypes from 'prop-types';\nimport Rail from '../Rail';\nimport Ticks from '../Ticks';\nimport Tracks from '../Tracks';\nimport Handles from '../Handles';\nimport { mode1, mode2, mode3 } from './modes';\nimport { isNotValidTouch, getTouchPosition, getUpdatedHandles, getSliderDomain, getHandles, prfx } from './utils';\nimport LinearScale from './LinearScale';\nimport DiscreteScale from './DiscreteScale';\nvar isBrowser = typeof window !== 'undefined' && typeof document !== 'undefined';\n\nvar noop = function noop() {};\n\nvar compare = function compare(b) {\n  return function (m, d, i) {\n    return m && b[i] === d;\n  };\n};\n\nvar equal = function equal(a, b) {\n  return a === b || a.length === b.length && a.reduce(compare(b), true);\n};\n\nvar getNextValue = function getNextValue(curr, step, domain, reversed) {\n  var newVal = reversed ? curr - step : curr + step;\n  return reversed ? Math.max(domain[0], newVal) : Math.min(domain[1], newVal);\n};\n\nvar getPrevValue = function getPrevValue(curr, step, domain, reversed) {\n  var newVal = reversed ? curr + step : curr - step;\n  return reversed ? Math.min(domain[1], newVal) : Math.max(domain[0], newVal);\n};\n\nvar Slider =\n/*#__PURE__*/\nfunction (_PureComponent) {\n  _inherits(Slider, _PureComponent);\n\n  function Slider() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Slider);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Slider)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      step: null,\n      values: null,\n      domain: null,\n      handles: [],\n      reversed: null,\n      activeHandleID: null,\n      valueToPerc: null,\n      valueToStep: null,\n      pixelToStep: null\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"slider\", React.createRef());\n\n    _defineProperty(_assertThisInitialized(_this), \"onKeyDown\", function (e, handleID) {\n      var validUpKeys = ['ArrowRight', 'ArrowUp'];\n      var validDownKeys = ['ArrowDown', 'ArrowLeft'];\n\n      var _assertThisInitialize = _assertThisInitialized(_this),\n          handles = _assertThisInitialize.state.handles,\n          _assertThisInitialize2 = _assertThisInitialize.props,\n          step = _assertThisInitialize2.step,\n          reversed = _assertThisInitialize2.reversed,\n          vertical = _assertThisInitialize2.vertical,\n          domain = _assertThisInitialize2.domain;\n\n      var key = e.key || e.keyCode;\n\n      if (!validUpKeys.concat(validDownKeys).includes(key)) {\n        return;\n      }\n\n      if (vertical) {\n        var _ref = [validDownKeys, validUpKeys];\n        validUpKeys = _ref[0];\n        validDownKeys = _ref[1];\n      }\n\n      e.stopPropagation && e.stopPropagation();\n      e.preventDefault && e.preventDefault();\n      var found = handles.find(function (value) {\n        return value.key === handleID;\n      });\n\n      if (!found) {\n        return;\n      }\n\n      var currVal = found.val;\n      var newVal = currVal;\n\n      if (validUpKeys.includes(key)) {\n        newVal = getNextValue(currVal, step, domain, reversed);\n      } else if (validDownKeys.includes(key)) {\n        newVal = getPrevValue(currVal, step, domain, reversed);\n      }\n\n      var nextHandles = handles.map(function (v) {\n        return v.key === handleID ? {\n          key: v.key,\n          val: newVal\n        } : v;\n      });\n\n      _this.submitUpdate(nextHandles, true);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onMouseDown\", function (e, handleID) {\n      _this.onStart(e, handleID, false);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onTouchStart\", function (e, handleID) {\n      if (isNotValidTouch(e)) {\n        return;\n      }\n\n      _this.onStart(e, handleID, true);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getEventData\", function (e, isTouch) {\n      var _assertThisInitialize3 = _assertThisInitialized(_this),\n          _assertThisInitialize4 = _assertThisInitialize3.state,\n          pixelToStep = _assertThisInitialize4.pixelToStep,\n          valueToPerc = _assertThisInitialize4.valueToPerc,\n          vertical = _assertThisInitialize3.props.vertical; // double check the dimensions of the slider\n\n\n      pixelToStep.setDomain(getSliderDomain(_this.slider.current, vertical));\n      var value;\n\n      if (isTouch) {\n        value = pixelToStep.getValue(getTouchPosition(vertical, e));\n      } else {\n        value = pixelToStep.getValue(vertical ? e.clientY : e.pageX);\n      }\n\n      return {\n        value: value,\n        percent: valueToPerc.getValue(value)\n      };\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onMouseMove\", function (e) {\n      var _assertThisInitialize5 = _assertThisInitialized(_this),\n          _assertThisInitialize6 = _assertThisInitialize5.state,\n          curr = _assertThisInitialize6.handles,\n          pixelToStep = _assertThisInitialize6.pixelToStep,\n          activeHandleID = _assertThisInitialize6.activeHandleID,\n          _assertThisInitialize7 = _assertThisInitialize5.props,\n          vertical = _assertThisInitialize7.vertical,\n          reversed = _assertThisInitialize7.reversed; // double check the dimensions of the slider\n\n\n      pixelToStep.setDomain(getSliderDomain(_this.slider.current, vertical)); // find the closest value (aka step) to the event location\n\n      var updateValue = pixelToStep.getValue(vertical ? e.clientY : e.pageX); // generate a \"candidate\" set of values - a suggestion of what to do\n\n      var nextHandles = getUpdatedHandles(curr, activeHandleID, updateValue, reversed); // submit the candidate values\n\n      _this.submitUpdate(nextHandles);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onTouchMove\", function (e) {\n      var _assertThisInitialize8 = _assertThisInitialized(_this),\n          _assertThisInitialize9 = _assertThisInitialize8.state,\n          curr = _assertThisInitialize9.handles,\n          pixelToStep = _assertThisInitialize9.pixelToStep,\n          activeHandleID = _assertThisInitialize9.activeHandleID,\n          _assertThisInitialize10 = _assertThisInitialize8.props,\n          vertical = _assertThisInitialize10.vertical,\n          reversed = _assertThisInitialize10.reversed;\n\n      if (isNotValidTouch(e)) {\n        return;\n      } // double check the dimensions of the slider\n\n\n      pixelToStep.setDomain(getSliderDomain(_this.slider.current, vertical)); // find the closest value (aka step) to the event location\n\n      var updateValue = pixelToStep.getValue(getTouchPosition(vertical, e)); // generate a \"candidate\" set of values - a suggestion of what to do\n\n      var nextHandles = getUpdatedHandles(curr, activeHandleID, updateValue, reversed); // submit the candidate values\n\n      _this.submitUpdate(nextHandles);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onMouseUp\", function () {\n      var _assertThisInitialize11 = _assertThisInitialized(_this),\n          _assertThisInitialize12 = _assertThisInitialize11.state,\n          handles = _assertThisInitialize12.handles,\n          activeHandleID = _assertThisInitialize12.activeHandleID,\n          _assertThisInitialize13 = _assertThisInitialize11.props,\n          onChange = _assertThisInitialize13.onChange,\n          onSlideEnd = _assertThisInitialize13.onSlideEnd;\n\n      onChange(handles.map(function (d) {\n        return d.val;\n      }));\n      onSlideEnd(handles.map(function (d) {\n        return d.val;\n      }), {\n        activeHandleID: activeHandleID\n      });\n\n      _this.setState({\n        activeHandleID: null\n      });\n\n      if (isBrowser) {\n        document.removeEventListener('mousemove', _this.onMouseMove);\n        document.removeEventListener('mouseup', _this.onMouseUp);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onTouchEnd\", function () {\n      var _assertThisInitialize14 = _assertThisInitialized(_this),\n          _assertThisInitialize15 = _assertThisInitialize14.state,\n          handles = _assertThisInitialize15.handles,\n          activeHandleID = _assertThisInitialize15.activeHandleID,\n          _assertThisInitialize16 = _assertThisInitialize14.props,\n          onChange = _assertThisInitialize16.onChange,\n          onSlideEnd = _assertThisInitialize16.onSlideEnd;\n\n      onChange(handles.map(function (d) {\n        return d.val;\n      }));\n      onSlideEnd(handles.map(function (d) {\n        return d.val;\n      }), {\n        activeHandleID: activeHandleID\n      });\n\n      _this.setState({\n        activeHandleID: null\n      });\n\n      if (isBrowser) {\n        document.removeEventListener('touchmove', _this.onTouchMove);\n        document.removeEventListener('touchend', _this.onTouchEnd);\n      }\n    });\n\n    return _this;\n  }\n\n  _createClass(Slider, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var pixelToStep = this.state.pixelToStep;\n      var vertical = this.props.vertical;\n      pixelToStep.setDomain(getSliderDomain(this.slider.current, vertical));\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.removeListeners();\n    }\n  }, {\n    key: \"removeListeners\",\n    value: function removeListeners() {\n      if (isBrowser) {\n        document.removeEventListener('mousemove', this.onMouseMove);\n        document.removeEventListener('mouseup', this.onMouseUp);\n        document.removeEventListener('touchmove', this.onTouchMove);\n        document.removeEventListener('touchend', this.onTouchEnd);\n      }\n    }\n  }, {\n    key: \"onStart\",\n    value: function onStart(e, handleID, isTouch) {\n      var handles = this.state.handles,\n          onSlideStart = this.props.onSlideStart;\n\n      if (!isTouch) {\n        e.preventDefault && e.preventDefault();\n      }\n\n      e.stopPropagation && e.stopPropagation();\n      var found = handles.find(function (value) {\n        return value.key === handleID;\n      });\n\n      if (found) {\n        this.setState({\n          activeHandleID: handleID\n        });\n        onSlideStart(handles.map(function (d) {\n          return d.val;\n        }), {\n          activeHandleID: handleID\n        });\n        isTouch ? this.addTouchEvents() : this.addMouseEvents();\n      } else {\n        this.setState({\n          activeHandleID: null\n        });\n        this.handleRailAndTrackClicks(e, isTouch);\n      }\n    }\n  }, {\n    key: \"handleRailAndTrackClicks\",\n    value: function handleRailAndTrackClicks(e, isTouch) {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          curr = _this$state.handles,\n          pixelToStep = _this$state.pixelToStep,\n          _this$props = this.props,\n          vertical = _this$props.vertical,\n          reversed = _this$props.reversed;\n      var slider = this.slider; // double check the dimensions of the slider\n\n      pixelToStep.setDomain(getSliderDomain(slider.current, vertical)); // find the closest value (aka step) to the event location\n\n      var updateValue;\n\n      if (isTouch) {\n        updateValue = pixelToStep.getValue(getTouchPosition(vertical, e));\n      } else {\n        updateValue = pixelToStep.getValue(vertical ? e.clientY : e.pageX);\n      } // find the closest handle key\n\n\n      var updateKey = null;\n      var minDiff = Infinity;\n\n      for (var i = 0; i < curr.length; i++) {\n        var _curr$i = curr[i],\n            key = _curr$i.key,\n            val = _curr$i.val;\n        var diff = Math.abs(val - updateValue);\n\n        if (diff < minDiff) {\n          updateKey = key;\n          minDiff = diff;\n        }\n      } // generate a \"candidate\" set of values - a suggestion of what to do\n\n\n      var nextHandles = getUpdatedHandles(curr, updateKey, updateValue, reversed); // submit the candidate values\n\n      this.setState({\n        activeHandleID: updateKey\n      }, function () {\n        _this2.submitUpdate(nextHandles, true);\n\n        isTouch ? _this2.addTouchEvents() : _this2.addMouseEvents();\n      });\n    }\n  }, {\n    key: \"addMouseEvents\",\n    value: function addMouseEvents() {\n      if (isBrowser) {\n        document.addEventListener('mousemove', this.onMouseMove);\n        document.addEventListener('mouseup', this.onMouseUp);\n      }\n    }\n  }, {\n    key: \"addTouchEvents\",\n    value: function addTouchEvents() {\n      if (isBrowser) {\n        document.addEventListener('touchmove', this.onTouchMove);\n        document.addEventListener('touchend', this.onTouchEnd);\n      }\n    }\n  }, {\n    key: \"submitUpdate\",\n    value: function submitUpdate(next, callOnChange) {\n      var _this$props2 = this.props,\n          mode = _this$props2.mode,\n          step = _this$props2.step,\n          onUpdate = _this$props2.onUpdate,\n          onChange = _this$props2.onChange,\n          reversed = _this$props2.reversed;\n      var getValue = this.state.valueToStep.getValue;\n      this.setState(function (_ref2) {\n        var curr = _ref2.handles;\n        var handles; // given the current handles and a candidate set, decide what to do\n\n        if (typeof mode === 'function') {\n          handles = mode(curr, next, step, reversed, getValue);\n          warning(Array.isArray(handles), 'Custom mode function did not return an array.');\n        } else {\n          switch (mode) {\n            case 1:\n              handles = mode1(curr, next);\n              break;\n\n            case 2:\n              handles = mode2(curr, next);\n              break;\n\n            case 3:\n              handles = mode3(curr, next, step, reversed, getValue);\n              break;\n\n            default:\n              handles = next;\n              warning(false, \"\".concat(prfx, \" Invalid mode value.\"));\n          }\n        }\n\n        onUpdate(handles.map(function (d) {\n          return d.val;\n        }));\n\n        if (callOnChange) {\n          onChange(handles.map(function (d) {\n            return d.val;\n          }));\n        }\n\n        return {\n          handles: handles\n        };\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$state2 = this.state,\n          handles = _this$state2.handles,\n          valueToPerc = _this$state2.valueToPerc,\n          activeHandleID = _this$state2.activeHandleID,\n          _this$props3 = this.props,\n          className = _this$props3.className,\n          rootStyle = _this$props3.rootStyle,\n          rootProps = _this$props3.rootProps,\n          Comp = _this$props3.component,\n          disabled = _this$props3.disabled,\n          flatten = _this$props3.flatten;\n      var mappedHandles = handles.map(function (_ref3) {\n        var key = _ref3.key,\n            val = _ref3.val;\n        return {\n          id: key,\n          value: val,\n          percent: valueToPerc.getValue(val)\n        };\n      });\n      var children = React.Children.map(this.props.children, function (child) {\n        if (child && (child.type.name === Rail.name || child.type.name === Ticks.name || child.type.name === Tracks.name || child.type.name === Handles.name)) {\n          return React.cloneElement(child, {\n            scale: valueToPerc,\n            handles: mappedHandles,\n            activeHandleID: activeHandleID,\n            getEventData: _this3.getEventData,\n            emitKeyboard: disabled ? noop : _this3.onKeyDown,\n            emitMouse: disabled ? noop : _this3.onMouseDown,\n            emitTouch: disabled ? noop : _this3.onTouchStart\n          });\n        }\n\n        return child;\n      });\n      return flatten ? React.createElement(Fragment, null, React.createElement(Comp, _extends({}, rootProps, {\n        style: rootStyle,\n        className: className,\n        ref: this.slider\n      })), children) : React.createElement(Comp, _extends({}, rootProps, {\n        style: rootStyle,\n        className: className,\n        ref: this.slider\n      }), children);\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      var step = nextProps.step,\n          values = nextProps.values,\n          domain = nextProps.domain,\n          reversed = nextProps.reversed,\n          onUpdate = nextProps.onUpdate,\n          onChange = nextProps.onChange,\n          warnOnChanges = nextProps.warnOnChanges;\n      var valueToPerc = prevState.valueToPerc;\n      var valueToStep = prevState.valueToStep;\n      var pixelToStep = prevState.pixelToStep;\n      var nextState = {};\n\n      if (!valueToPerc || !valueToStep || !pixelToStep) {\n        valueToPerc = new LinearScale();\n        valueToStep = new DiscreteScale();\n        pixelToStep = new DiscreteScale();\n        nextState.valueToPerc = valueToPerc;\n        nextState.valueToStep = valueToStep;\n        nextState.pixelToStep = pixelToStep;\n      }\n\n      if (prevState.step === null || prevState.domain === null || prevState.reversed === null || step !== prevState.step || domain[0] !== prevState.domain[0] || domain[1] !== prevState.domain[1] || reversed !== prevState.reversed) {\n        var _domain = _slicedToArray(domain, 2),\n            min = _domain[0],\n            max = _domain[1];\n\n        valueToStep.setStep(step).setRange([min, max]).setDomain([min, max]);\n\n        if (reversed === true) {\n          valueToPerc.setDomain([min, max]).setRange([100, 0]);\n          pixelToStep.setStep(step).setRange([max, min]);\n        } else {\n          valueToPerc.setDomain([min, max]).setRange([0, 100]);\n          pixelToStep.setStep(step).setRange([min, max]);\n        }\n\n        warning(max > min, \"\".concat(prfx, \" Max must be greater than min (even if reversed). Max is \").concat(max, \". Min is \").concat(min, \".\"));\n\n        var _getHandles = getHandles(values || prevState.values, reversed, valueToStep, warnOnChanges),\n            handles = _getHandles.handles,\n            changes = _getHandles.changes;\n\n        if (changes || values === undefined || values === prevState.values) {\n          onUpdate(handles.map(function (d) {\n            return d.val;\n          }));\n          onChange(handles.map(function (d) {\n            return d.val;\n          }));\n        }\n\n        nextState.step = step;\n        nextState.values = values;\n        nextState.domain = domain;\n        nextState.handles = handles;\n        nextState.reversed = reversed;\n      } else if (!equal(values, prevState.values)) {\n        var _getHandles2 = getHandles(values, reversed, valueToStep, warnOnChanges),\n            _handles = _getHandles2.handles,\n            _changes = _getHandles2.changes;\n\n        if (_changes) {\n          onUpdate(_handles.map(function (d) {\n            return d.val;\n          }));\n          onChange(_handles.map(function (d) {\n            return d.val;\n          }));\n        }\n\n        nextState.values = values;\n        nextState.handles = _handles;\n      }\n\n      if (Object.keys(nextState).length) {\n        return nextState;\n      }\n\n      return null;\n    }\n  }]);\n\n  return Slider;\n}(PureComponent);\n\nSlider.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * String component used for slider root. Defaults to 'div'.\n   */\n  component: PropTypes.string,\n\n  /**\n   * An object with any inline styles you want applied to the root element.\n   */\n  rootStyle: PropTypes.object,\n\n  /**\n   * An object with any props you want applied to the root element.\n   */\n  rootProps: PropTypes.object,\n\n  /**\n   * CSS class name applied to the root element of the slider.\n   */\n  className: PropTypes.string,\n\n  /**\n   * Two element array of numbers providing the min and max values for the slider [min, max] e.g. [0, 100].\n   * It does not matter if the slider is reversed on the screen, domain is always [min, max] with min < max.\n   */\n  domain: PropTypes.array,\n\n  /**\n   * An array of numbers. You can supply one for a value slider, two for a range slider or more to create n-handled sliders.\n   * The values should correspond to valid step values in the domain.\n   * The numbers will be forced into the domain if they are two small or large.\n   */\n  values: PropTypes.array,\n\n  /**\n   * The step value for the slider.\n   */\n  step: PropTypes.number,\n\n  /**\n   * The interaction mode. Value of 1 will allow handles to cross each other.\n   * Value of 2 will keep the sliders from crossing and separated by a step.\n   * Value of 3 will make the handles pushable and keep them a step apart.\n   * ADVANCED: You can also supply a function that will be passed the current values and the incoming update.\n   * Your function should return what the state should be set as.\n   */\n  mode: PropTypes.oneOfType([PropTypes.number, PropTypes.func]),\n\n  /**\n   * Set to true if the slider is displayed vertically to tell the slider to use the height to calculate positions.\n   */\n  vertical: PropTypes.bool,\n\n  /**\n   * Reverse the display of slider values.\n   */\n  reversed: PropTypes.bool,\n\n  /**\n   * Function triggered when the value of the slider has changed. This will recieve changes at the end of a slide as well as changes from clicks on rails and tracks. Receives values.\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * Function called with the values at each update (caution: high-volume updates when dragging). Receives values.\n   */\n  onUpdate: PropTypes.func,\n\n  /**\n   * Function triggered with ontouchstart or onmousedown on a handle. Receives values.\n   */\n  onSlideStart: PropTypes.func,\n\n  /**\n   * Function triggered on ontouchend or onmouseup on a handle. Receives values.\n   */\n  onSlideEnd: PropTypes.func,\n\n  /**\n   * Ignore all mouse, touch and keyboard events.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * Render slider children as siblings. This is primarily for SVG sliders. See the SVG example.\n   */\n  flatten: PropTypes.bool,\n\n  /**\n   * When true, the slider will warn if values are changed to fit domain and step values.  Defaults to false.\n   */\n  warnOnChanges: PropTypes.bool,\n\n  /**\n   * Component children to render.\n   */\n  children: PropTypes.any\n} : {};\nSlider.defaultProps = {\n  mode: 1,\n  step: 0.1,\n  domain: [0, 100],\n  component: 'div',\n  rootProps: {},\n  rootStyle: {},\n  vertical: false,\n  reversed: false,\n  onChange: noop,\n  onUpdate: noop,\n  onSlideStart: noop,\n  onSlideEnd: noop,\n  disabled: false,\n  flatten: false,\n  warnOnChanges: false\n};\nexport default Slider;","import Slider, { mode1, mode2, mode3 } from './Slider';\nimport Rail from './Rail';\nimport Ticks from './Ticks';\nimport Tracks from './Tracks';\nimport Handles from './Handles';\nSlider.Rail = Rail;\nSlider.Ticks = Ticks;\nSlider.Tracks = Tracks;\nSlider.Handles = Handles;\nexport default Slider;\nexport { Slider, Rail, Ticks, Tracks, Handles, mode1, mode2, mode3 };","import * as React from 'react'\n\nimport { Slider, Rail, Handles, Tracks, Ticks } from 'react-compound-slider'\nimport {\n  SliderItem,\n  GetHandleProps,\n  GetTrackProps,\n} from 'react-compound-slider'\nimport { RangeValues } from './Range'\nimport { useState } from 'react'\n\n/**************** RANGE SLIDER SUBCOMPONENTS *********************/\n\n/***  handles ***/\n\ninterface IHandleProps {\n  domain: number[]\n  handle: SliderItem\n  getHandleProps: GetHandleProps\n}\n\nexport const Handle: React.FunctionComponent<IHandleProps> = ({\n  domain: [min, max],\n  handle: { id, value, percent },\n  getHandleProps,\n}) => (\n  <div\n    role=\"slider\"\n    className=\"RangeSlider__handle\"\n    aria-valuemin={min}\n    aria-valuemax={max}\n    aria-valuenow={value}\n    style={{\n      left: `${percent}%`,\n    }}\n    {...getHandleProps(id)}\n  />\n)\n\n/***   track  ***/\ninterface ITrackProps {\n  source: SliderItem\n  target: SliderItem\n  getTrackProps: GetTrackProps\n}\n\nexport const Track: React.FunctionComponent<ITrackProps> = ({\n  source,\n  target,\n  getTrackProps,\n}) => (\n  <div\n    className=\"RangeSlider__track\"\n    style={{\n      left: `${source.percent}%`,\n      width: `${target.percent - source.percent}%`,\n    }}\n    {...getTrackProps()}\n  />\n)\n\n/***   tick  ***/\ninterface ITickProps {\n  key: string\n  tick: SliderItem\n  count: number\n  mode?: 'SHOWALL' | 'SHOWNONE' | 'SHOWMINMAX'\n}\n\nexport const Tick: React.FunctionComponent<ITickProps> = ({\n  tick,\n  count,\n  mode = 'SHOWMINMAX',\n}) => (\n  <div>\n    <div\n      className=\"RangeSlider__tick\"\n      style={{\n        left: `${tick.percent}%`,\n      }}\n    />\n    <div\n      className=\"RangeSlider__tickInner\"\n      style={{\n        marginLeft: `${-(100 / count) / 2}%`,\n        width: `${100 / count}%`,\n        left: `${tick.percent}%`,\n      }}\n    >\n      {(mode === 'SHOWALL' ||\n        (mode === 'SHOWMINMAX' &&\n          (tick.percent == 0 || tick.percent == 100))) &&\n        tick.value}\n    </div>\n  </div>\n)\n\n/*************  RANGE SLIDER COMPONENT ****************/\n\nexport type RangeSliderProps = {\n  domain: string[]\n  initialValues: RangeValues\n  step: number\n  doUpdateOnApply?: boolean\n  maxTickCount?: number\n  onChange: Function\n}\n\nexport type RangeSliderState = {\n  values: readonly number[]\n}\n\nfunction getInitialValues(initialValues: RangeValues, domain: string[]) {\n  const result = [\n    initialValues.min ? Number(initialValues.min) : Number(domain[0]),\n    initialValues.max ? Number(initialValues.max) : Number(domain[1]),\n  ]\n  return result\n}\n\nexport const RangeSlider: React.FunctionComponent<RangeSliderProps> = ({\n  doUpdateOnApply = true,\n  ...props\n}) => {\n  const stringArrToNumArr = (inputArr: string[]) =>\n    inputArr.map(value => Number(value))\n\n  const [values, setValues] = useState<number[]>(() =>\n    getInitialValues(props.initialValues, props.domain),\n  )\n\n  const numDomain = stringArrToNumArr(props.domain)\n\n  const handleSliderChange = (\n    values: readonly number[],\n    callbackFn?: Function,\n  ) => {\n    setValues([...values])\n    if (callbackFn) {\n      callbackFn({ min: values[0], max: values[1] })\n    }\n  }\n\n  let ticksCount = numDomain[1] - numDomain[0]\n  if (props.maxTickCount && ticksCount > props.maxTickCount) {\n    ticksCount = props.maxTickCount\n  }\n\n  return (\n    <div className=\"RangeSlider\">\n      <div className=\"RangeSlider__values\">\n        {values[0]} - {values[1]}\n      </div>\n      <div\n        className={`RangeSlider__wrapper${\n          doUpdateOnApply ? '--flex' : '--block'\n        }`}\n      >\n        <Slider\n          mode={1}\n          step={props.step}\n          domain={stringArrToNumArr(props.domain)}\n          className=\"RangeSlider__slider\"\n          onChange={(values: readonly number[]) =>\n            handleSliderChange(\n              values,\n              doUpdateOnApply ? undefined : props.onChange,\n            )\n          }\n          values={getInitialValues(props.initialValues, props.domain)}\n        >\n          <Rail>\n            {({ getRailProps }) => (\n              <div className=\"RangeSlider__rail\" {...getRailProps()} />\n            )}\n          </Rail>\n          <Handles>\n            {({ handles, getHandleProps }) => (\n              <div className=\"slider-handles\">\n                {handles.map(handle => (\n                  <Handle\n                    key={handle.id + handle.percent}\n                    handle={handle}\n                    domain={stringArrToNumArr(props.domain)}\n                    getHandleProps={getHandleProps}\n                  />\n                ))}\n              </div>\n            )}\n          </Handles>\n          <Tracks left={true} right={true}>\n            {({ tracks, getTrackProps }) => (\n              <div>\n                {tracks.map(({ id, source, target }) => (\n                  <Track\n                    key={id}\n                    source={source}\n                    target={target}\n                    getTrackProps={getTrackProps}\n                  />\n                ))}\n              </div>\n            )}\n          </Tracks>\n          <Ticks count={ticksCount}>\n            {({ ticks }) => (\n              <div>\n                {ticks.map(tick => (\n                  <Tick key={tick.id} tick={tick} count={ticks.length} />\n                ))}\n              </div>\n            )}\n          </Ticks>\n        </Slider>\n        {doUpdateOnApply && (\n          <button\n            className=\"RangeSlider__btnApply\"\n            onClick={() => props.onChange({ min: values[0], max: values[1] })}\n          >\n            Apply\n          </button>\n        )}\n      </div>\n    </div>\n  )\n}\n","import { Collapse } from '@material-ui/core'\nimport * as React from 'react'\nimport { useState } from 'react'\nimport {\n  FRIENDLY_VALUE_NOT_SET,\n  VALUE_NOT_SET,\n} from '../../../utils/SynapseConstants'\nimport { SelectColumn } from '../../../utils/synapseTypes'\nimport { FacetColumnResultRange } from '../../../utils/synapseTypes/Table/FacetColumnResult'\nimport { RadioGroup } from '../RadioGroup'\nimport { Range, RangeValues } from '../Range'\nimport { RangeSlider } from '../RangeSlider'\nimport { FacetFilterHeader } from './FacetFilterHeader'\n\nexport enum RadioValuesEnum {\n  NOT_SET = 'org.sagebionetworks.UNDEFINED_NULL_NOTSET',\n  RANGE = 'RANGE',\n  ANY = '',\n}\n\nexport type RangeFacetFilterProps = {\n  facetResult: FacetColumnResultRange\n  columnModel: SelectColumn\n  onChange: Function\n  facetAliases?: Record<string, string>\n  collapsed?: boolean\n}\n\nexport type RangeFacetFilterState = {\n  facetResult: FacetColumnResultRange\n  columnModel: SelectColumn\n}\n\nexport const RangeFacetFilter: React.FunctionComponent<\n  RangeFacetFilterProps\n> = ({\n  facetResult,\n  columnModel,\n  onChange,\n  facetAliases,\n  collapsed = false,\n}: RangeFacetFilterProps) => {\n  const [isCollapsed, setIsCollapsed] = useState<boolean>(collapsed)\n  const options = [\n    { label: FRIENDLY_VALUE_NOT_SET, value: RadioValuesEnum.NOT_SET },\n    { label: 'Any', value: RadioValuesEnum.ANY },\n    { label: 'Range', value: RadioValuesEnum.RANGE },\n  ]\n\n  let { columnMin, columnMax, selectedMin, selectedMax } = facetResult // the upper bound of the selected range\n\n  const hasAnyValue = !selectedMin && !selectedMax\n\n  selectedMin = selectedMin || columnMin\n  selectedMax = selectedMax || columnMax\n\n  const rangeType = columnModel.columnType === 'DOUBLE' ? 'number' : 'date'\n\n  const getRadioValue = (min: string, isAnyValue: boolean) => {\n    if (isAnyValue) {\n      return RadioValuesEnum.ANY\n    } else if (min === VALUE_NOT_SET) {\n      return RadioValuesEnum.NOT_SET\n    }\n    return RadioValuesEnum.RANGE\n  }\n\n  const handleRadioGroupChange = (\n    radioValue: RadioValuesEnum,\n    onChangeCallback: Function,\n  ) => {\n    setRadioValue(radioValue)\n\n    if (radioValue !== RadioValuesEnum.RANGE) {\n      onChangeCallback([radioValue, radioValue])\n    }\n  }\n\n  const [radioValue, setRadioValue] = useState(\n    getRadioValue(selectedMin, hasAnyValue),\n  )\n\n  const result = (\n    <div>\n      <FacetFilterHeader\n        isCollapsed={isCollapsed}\n        label={columnModel.name}\n        onClick={(isCollapsed: boolean) => setIsCollapsed(isCollapsed)}\n        facetAliases={facetAliases}\n      ></FacetFilterHeader>\n      <Collapse in={!isCollapsed}>\n        <RadioGroup\n          value={radioValue}\n          id=\"rangeSelector\"\n          options={options}\n          onChange={(radioValue: string) =>\n            handleRadioGroupChange(radioValue as RadioValuesEnum, onChange)\n          }\n        ></RadioGroup>\n        {radioValue === RadioValuesEnum.RANGE &&\n          (columnMin === columnMax ? (\n            <label>{columnMax}</label>\n          ) : (\n            <>\n              {columnModel.columnType === 'INTEGER' && (\n                <RangeSlider\n                  key=\"RangeSlider\"\n                  domain={[columnMin, columnMax]}\n                  initialValues={{ min: selectedMin, max: selectedMax }}\n                  step={1}\n                  doUpdateOnApply={true}\n                  onChange={(values: RangeValues) =>\n                    onChange([values.min, values.max])\n                  }\n                >\n                  ) {'>'}\n                </RangeSlider>\n              )}\n\n              {(columnModel.columnType === 'DATE' ||\n                columnModel.columnType === 'DOUBLE') && (\n                <Range\n                  key=\"Range\"\n                  initialValues={{\n                    min: selectedMin,\n                    max: selectedMax,\n                  }}\n                  type={rangeType}\n                  onChange={(values: RangeValues) =>\n                    onChange([values.min, values.max])\n                  }\n                ></Range>\n              )}\n            </>\n          ))}\n      </Collapse>\n    </div>\n  )\n  return result\n}\n","import * as React from 'react'\nimport { isSingleNotSetValue } from '../../../utils/functions/queryUtils'\nimport { QueryBundleRequest } from '../../../utils/synapseTypes'\nimport {\n  FacetColumnRangeRequest,\n  FacetColumnRequest,\n  FacetColumnValuesRequest,\n} from '../../../utils/synapseTypes/Table/FacetColumnRequest'\nimport {\n  FacetColumnResult,\n  FacetColumnResultRange,\n  FacetColumnResultValues,\n} from '../../../utils/synapseTypes/Table/FacetColumnResult'\nimport { useQueryVisualizationContext } from '../../QueryVisualizationWrapper'\nimport {\n  QUERY_FILTERS_COLLAPSED_CSS,\n  QUERY_FILTERS_EXPANDED_CSS,\n} from '../../QueryWrapper'\nimport { useQueryContext } from '../../QueryContext'\nimport { EnumFacetFilter } from './EnumFacetFilter'\nimport { RangeFacetFilter } from './RangeFacetFilter'\n\nexport type QueryFilterProps = {\n  facetsToFilter?: string[]\n}\n\nconst convertFacetToFacetColumnValuesRequest = (\n  facet: FacetColumnResultValues,\n): FacetColumnValuesRequest => ({\n  concreteType: 'org.sagebionetworks.repo.model.table.FacetColumnValuesRequest',\n  columnName: facet.columnName,\n  facetValues: facet.facetValues\n    .filter(facet => facet.isSelected === true)\n    .map(facet => facet.value),\n})\n\nconst convertFacetColumnRangeRequest = (\n  facet: FacetColumnResultRange,\n): FacetColumnRangeRequest => {\n  let result = {\n    concreteType:\n      'org.sagebionetworks.repo.model.table.FacetColumnRangeRequest',\n    columnName: facet.columnName, // The name of the faceted column\n  }\n\n  if (facet.columnMin) {\n    result = { ...result, ...{ min: facet.columnMin, max: facet.columnMax } }\n  }\n  return result\n}\n\nconst patchRequestFacets = (\n  changedFacet: FacetColumnRequest,\n  lastRequest?: QueryBundleRequest,\n): FacetColumnRequest[] => {\n  const selections = lastRequest?.query?.selectedFacets ?? []\n  const changedFacetIndex = selections.findIndex(\n    facet => facet.columnName === changedFacet.columnName,\n  )\n\n  const isEmptyValuesFacet =\n    changedFacet.concreteType ===\n      'org.sagebionetworks.repo.model.table.FacetColumnValuesRequest' &&\n    (!changedFacet.facetValues || !changedFacet.facetValues.length)\n  if (changedFacetIndex > -1) {\n    if (isEmptyValuesFacet) {\n      selections.splice(changedFacetIndex, 1)\n    } else {\n      selections[changedFacetIndex] = changedFacet\n    }\n  } else {\n    selections.push(changedFacet)\n  }\n  return selections\n}\n\nexport function applyChangesToValuesColumn(\n  lastRequest: QueryBundleRequest | undefined,\n  facet: FacetColumnResultValues,\n  onChangeFn: (result: FacetColumnRequest[]) => void,\n  facetName?: string,\n  checked: boolean = false,\n) {\n  if (facetName) {\n    facet.facetValues.forEach(facetValue => {\n      if (facetValue.value === facetName) {\n        facetValue.isSelected = checked\n      }\n    })\n  } else {\n    // else clear all\n    facet.facetValues.forEach(facet => {\n      facet.isSelected = false\n    })\n  }\n\n  const changedFacet = convertFacetToFacetColumnValuesRequest(facet)\n  const result = patchRequestFacets(changedFacet, lastRequest)\n  onChangeFn(result)\n}\n\n// This handles multiple checkbox selection with delay refresh\nexport const applyMultipleChangesToValuesColumn = (\n  lastRequest: QueryBundleRequest | undefined,\n  facet: FacetColumnResultValues,\n  onChangeFn: (result: FacetColumnRequest[]) => void,\n  facetNameMap?: Record<string, string>,\n) => {\n  const facetNames = (facetNameMap && Object.keys(facetNameMap)) || []\n  if (facetNames.length) {\n    facet.facetValues.forEach(facetValue => {\n      if (facetNames.includes(facetValue.value)) {\n        facetValue.isSelected = facetNameMap\n          ? !!facetNameMap[facetValue.value]\n          : false\n      }\n    })\n  }\n  const changedFacet = convertFacetToFacetColumnValuesRequest(facet)\n  const result = patchRequestFacets(changedFacet, lastRequest)\n  onChangeFn(result)\n}\n\n//rangeChanges\nexport const applyChangesToRangeColumn = (\n  lastRequest: QueryBundleRequest | undefined,\n  facet: FacetColumnResultRange,\n  onChangeFn: (result: FacetColumnRequest[]) => void,\n  values: string[],\n) => {\n  facet.columnMin = values[0]\n  facet.columnMax = values[1]\n  const changedFacet = convertFacetColumnRangeRequest(facet)\n  const result = patchRequestFacets(changedFacet, lastRequest)\n  onChangeFn(result)\n}\n\nexport const QueryFilter: React.FunctionComponent<QueryFilterProps> = ({\n  facetsToFilter,\n}): JSX.Element => {\n  const { data, isLoadingNewBundle, getLastQueryRequest, executeQueryRequest } =\n    useQueryContext()\n\n  const { facetAliases, topLevelControlsState } = useQueryVisualizationContext()\n\n  if (!data) {\n    return <></>\n  }\n  const { showFacetFilter } = topLevelControlsState\n  const columnModels = data.selectColumns\n  let facets = data.facets as FacetColumnResult[]\n  if (facetsToFilter) {\n    facets = facets.filter(facet => {\n      return facetsToFilter.includes(facet.columnName)\n    })\n  }\n  const lastRequest = getLastQueryRequest()\n\n  const applyChanges = (facets: FacetColumnRequest[]) => {\n    const queryRequest: QueryBundleRequest = getLastQueryRequest()\n    queryRequest.query.selectedFacets = facets\n    queryRequest.query.offset = 0\n    executeQueryRequest(queryRequest)\n  }\n\n  return (\n    <div\n      className={`QueryFilter ${\n        showFacetFilter\n          ? QUERY_FILTERS_EXPANDED_CSS\n          : QUERY_FILTERS_COLLAPSED_CSS\n      }`}\n    >\n      <h4 className=\"QueryFilter__title\">Filter By</h4>\n      {isLoadingNewBundle && <div>Loading...</div>}\n      {!isLoadingNewBundle &&\n        facets.map((facet, index) => {\n          const columnModel = columnModels!.find(\n            model => model.name === facet.columnName,\n          )\n          const shouldStartCollapsed = index > 2\n          if (isSingleNotSetValue(facet)) {\n            return\n          }\n          return (\n            <div className=\"QueryFilter__facet\" key={facet.columnName}>\n              {facet.facetType === 'enumeration' && columnModel && (\n                <EnumFacetFilter\n                  containerAs=\"Collapsible\"\n                  collapsed={shouldStartCollapsed}\n                  facetValues={facet.facetValues}\n                  columnModel={columnModel}\n                  facetAliases={facetAliases}\n                  onChange={(facetNamesMap: Record<string, string>) =>\n                    applyMultipleChangesToValuesColumn(\n                      lastRequest,\n                      facet,\n                      applyChanges,\n                      facetNamesMap,\n                    )\n                  }\n                  onClear={() =>\n                    applyChangesToValuesColumn(lastRequest, facet, applyChanges)\n                  }\n                ></EnumFacetFilter>\n              )}\n              {facet.facetType === 'range' && columnModel && (\n                <RangeFacetFilter\n                  facetResult={facet}\n                  columnModel={columnModel}\n                  facetAliases={facetAliases}\n                  collapsed={shouldStartCollapsed}\n                  onChange={(values: string[]) =>\n                    applyChangesToRangeColumn(\n                      lastRequest,\n                      facet,\n                      applyChanges,\n                      values,\n                    )\n                  }\n                ></RangeFacetFilter>\n              )}\n            </div>\n          )\n        })}\n    </div>\n  )\n}\n","import { cloneDeep } from 'lodash-es'\nimport React, {\n  FunctionComponent,\n  useCallback,\n  useEffect,\n  useState,\n} from 'react'\nimport { Button } from 'react-bootstrap'\nimport { SkeletonInlineBlock } from '../assets/skeletons/SkeletonInlineBlock'\nimport {\n  getStoredEntityHeaders,\n  getStoredUserProfiles,\n} from '../utils/functions/getDataFromFromStorage'\nimport {\n  ColumnModel,\n  ColumnType,\n  EntityHeader,\n  FacetColumnRequest,\n  FacetColumnResult,\n  FacetColumnResultRange,\n  FacetColumnResultValues,\n  QueryBundleRequest,\n  UserProfile,\n} from '../utils/synapseTypes'\nimport {\n  isColumnMultiValueFunctionQueryFilter,\n  isColumnSingleValueQueryFilter,\n  isTextMatchesQueryFilter,\n  QueryFilter,\n  TextMatchesQueryFilter,\n} from '../utils/synapseTypes/Table/QueryFilter'\nimport { useQueryVisualizationContext } from './QueryVisualizationWrapper'\nimport {\n  QUERY_FILTERS_COLLAPSED_CSS,\n  QUERY_FILTERS_EXPANDED_CSS,\n} from './QueryWrapper'\nimport { useQueryContext } from './QueryContext'\nimport SelectionCriteriaPill, {\n  FacetWithSelection,\n  SelectionCriteriaPillProps,\n} from './widgets/facet-nav/SelectionCriteriaPill'\nimport {\n  applyChangesToRangeColumn,\n  applyChangesToValuesColumn,\n} from './widgets/query-filter/QueryFilter'\nimport { RadioValuesEnum } from './widgets/query-filter/RangeFacetFilter'\n\nexport type TotalQueryResultsProps = {\n  style?: React.CSSProperties\n  frontText: string\n  endText?: string\n  applyChanges?: (newFacets: FacetColumnRequest[]) => void\n  showNotch?: boolean\n}\n\n// This is a stateful component so that during load the component can hold onto the previous\n// total instead of showing 0 results for the intermittent loading state.\n\nconst TotalQueryResults: FunctionComponent<TotalQueryResultsProps> = ({\n  style,\n  frontText,\n  endText = '',\n  showNotch = false,\n}) => {\n  const {\n    data,\n    isLoadingNewBundle,\n    getLastQueryRequest,\n    executeQueryRequest,\n    getInitQueryRequest,\n    error,\n  } = useQueryContext()\n\n  const { topLevelControlsState, unitDescription } =\n    useQueryVisualizationContext()\n\n  const total = data?.queryCount\n  const [facetsWithSelection, setFacetsWithSelection] = useState<\n    FacetWithSelection[]\n  >([])\n\n  const applyChanges = (facets: FacetColumnRequest[]) => {\n    const queryRequest: QueryBundleRequest = cloneDeep(getLastQueryRequest())\n    queryRequest.query.selectedFacets = facets\n    queryRequest.query.offset = 0\n    executeQueryRequest(queryRequest)\n  }\n\n  const getEnumFacetsWithSelections = (\n    facets: FacetColumnResult[],\n  ): FacetColumnResultValues[] => {\n    const enumFacets = facets.filter(\n      facet => facet.facetType === 'enumeration',\n    ) as FacetColumnResultValues[]\n    const enumFacetsWithSelections = enumFacets.filter(\n      facet =>\n        facet.facetValues.filter(value => value.isSelected === true).length > 0,\n    )\n    return enumFacetsWithSelections\n  }\n\n  const getRangeFacetsWithSelections = (\n    facets: FacetColumnResult[],\n  ): FacetColumnResultRange[] => {\n    const rangeFacets = facets.filter(\n      facet => facet.facetType === 'range',\n    ) as FacetColumnResultRange[]\n    const rangeFacetsWithSelections = rangeFacets.filter(\n      facet => facet.selectedMax || facet.selectedMin,\n    )\n    return rangeFacetsWithSelections\n  }\n\n  const getDisplayValueForEntityColumn = (\n    entityHeaders: EntityHeader[],\n    facetValue: string,\n  ): string => {\n    const entity = entityHeaders.find(item => item.id === facetValue)\n    return entity?.name ?? facetValue\n  }\n\n  const getDisplayValueUserIdColumn = (\n    userProfiles: UserProfile[],\n    facetValue: string,\n  ): string => {\n    const userProfile = userProfiles.find(item => item.ownerId === facetValue)\n    return userProfile?.userName || facetValue\n  }\n\n  const transformEnumFacetsForSelectionDisplay = useCallback(\n    (\n      facets: FacetColumnResultValues[],\n      columnModels: ColumnModel[],\n    ): FacetWithSelection[] => {\n      const lookUpEntityHeaders = getStoredEntityHeaders()\n      const lookUpUserProfiles = getStoredUserProfiles()\n      const filteredEnumWithSelectedValuesOnly: FacetWithSelection[] = []\n      facets.forEach(facet => {\n        const columnModel = columnModels.find(\n          model => model.name === facet.columnName,\n        )\n        facet.facetValues.forEach(facetValue => {\n          if (facetValue.isSelected) {\n            let displayValue = facetValue.value\n            if (\n              columnModel?.columnType === ColumnType.ENTITYID ||\n              columnModel?.columnType === ColumnType.ENTITYID_LIST\n            ) {\n              displayValue = getDisplayValueForEntityColumn(\n                lookUpEntityHeaders,\n                facetValue.value,\n              )\n            } else if (\n              columnModel?.columnType === ColumnType.USERID ||\n              columnModel?.columnType === ColumnType.USERID_LIST\n            ) {\n              displayValue = getDisplayValueUserIdColumn(\n                lookUpUserProfiles,\n                facetValue.value,\n              )\n            }\n\n            filteredEnumWithSelectedValuesOnly.push({\n              facet,\n              displayValue,\n              selectedValue: facetValue,\n            })\n          }\n        })\n      })\n      return filteredEnumWithSelectedValuesOnly\n    },\n    [],\n  )\n\n  useEffect(() => {\n    if (data) {\n      const rangeFacetsWithSelections = getRangeFacetsWithSelections(\n        data.facets!,\n      )\n      const enumFacetsWithSelections = getEnumFacetsWithSelections(data.facets!)\n      const rangeFacetsForDisplay = rangeFacetsWithSelections.map(facet => ({\n        facet,\n      }))\n      const enumFacetsForDisplay = transformEnumFacetsForSelectionDisplay(\n        enumFacetsWithSelections,\n        data.columnModels!,\n      )\n\n      setFacetsWithSelection([\n        ...rangeFacetsForDisplay,\n        ...enumFacetsForDisplay,\n      ])\n    }\n  }, [data, transformEnumFacetsForSelectionDisplay])\n\n  const removeFacetSelection = (facetWithSelection: FacetWithSelection) => {\n    const { facet, selectedValue } = facetWithSelection\n    if (facet.facetType === 'enumeration') {\n      applyChangesToValuesColumn(\n        getLastQueryRequest(),\n        facet,\n        applyChanges,\n        selectedValue?.value,\n        false,\n      )\n    } else {\n      applyChangesToRangeColumn(getLastQueryRequest(), facet, applyChanges, [\n        RadioValuesEnum.ANY,\n        RadioValuesEnum.ANY,\n      ])\n    }\n  }\n\n  const removeColumnSearchQuerySelection = (\n    columnName: string,\n    value: string,\n  ) => {\n    const cloneLastQueryRequest = cloneDeep(getLastQueryRequest())\n    if (!cloneLastQueryRequest.query.additionalFilters) {\n      return\n    }\n    cloneLastQueryRequest.query.additionalFilters =\n      cloneLastQueryRequest.query.additionalFilters?.reduce(function (\n        filtered: QueryFilter[],\n        el: QueryFilter,\n      ) {\n        if (\n          isColumnSingleValueQueryFilter(el) ||\n          isColumnMultiValueFunctionQueryFilter(el)\n        ) {\n          // For column-specific QueryFilters, filter out matching values on the matching column\n          const newElement = {\n            columnName: el.columnName,\n            values:\n              el.columnName === columnName\n                ? el.values.filter(el => el !== value)\n                : el.values,\n            operator: isColumnSingleValueQueryFilter(el)\n              ? el.operator\n              : undefined,\n            function: isColumnMultiValueFunctionQueryFilter(el)\n              ? el.function\n              : undefined,\n            concreteType: el.concreteType,\n          }\n\n          // Drop this QueryFilter if it has no more values\n          if (newElement.values.length > 0) {\n            filtered.push(newElement)\n          }\n        } else {\n          // Don't alter/drop non-column-specific QueryFilters\n          filtered.push(el)\n        }\n        return filtered\n      },\n      [])\n\n    executeQueryRequest(cloneLastQueryRequest)\n  }\n\n  const removeTextMatchesQueryFilter = (\n    queryFilter: TextMatchesQueryFilter,\n  ) => {\n    const cloneLastQueryRequest = cloneDeep(getLastQueryRequest())\n    if (!cloneLastQueryRequest.query.additionalFilters) {\n      return\n    }\n    cloneLastQueryRequest.query.additionalFilters =\n      cloneLastQueryRequest.query.additionalFilters.filter(\n        el =>\n          !(\n            isTextMatchesQueryFilter(el) &&\n            el.searchExpression === queryFilter.searchExpression\n          ),\n      )\n    executeQueryRequest(cloneLastQueryRequest)\n  }\n\n  const clearAll = () => {\n    const initQueryRequest = cloneDeep(getInitQueryRequest())\n    initQueryRequest.query.additionalFilters = []\n    executeQueryRequest(initQueryRequest)\n  }\n\n  const searchSelectionCriteriaPillProps:\n    | (SelectionCriteriaPillProps & {\n        key: string\n      })[]\n    | undefined = getLastQueryRequest().query.additionalFilters?.reduce(\n    (\n      pillProps: (SelectionCriteriaPillProps & {\n        key: string\n      })[],\n      el: QueryFilter,\n    ) => {\n      if (isTextMatchesQueryFilter(el)) {\n        pillProps.push({\n          key: `fulltextsearch-${el.searchExpression}`,\n          filter: {\n            value: el.searchExpression,\n          },\n          onRemove: () => removeTextMatchesQueryFilter(el),\n        })\n      } else if (\n        isColumnSingleValueQueryFilter(el) ||\n        isColumnMultiValueFunctionQueryFilter(el)\n      ) {\n        const { columnName } = el\n        el.values.forEach(value => {\n          pillProps.push({\n            key: `columnsearch-${value}`,\n            filter: {\n              columnName,\n              value,\n            },\n            onRemove: () =>\n              removeColumnSearchQuerySelection(el.columnName, value),\n          })\n        })\n      } else {\n        console.warn('Encountered unexpected QueryFilter: ', el)\n      }\n      return pillProps\n    },\n    [],\n  )\n  const showFacetFilter = topLevelControlsState?.showFacetFilter\n  if (error) {\n    return <></>\n  }\n  return (\n    <div\n      className={`TotalQueryResults ${showNotch ? 'notch-down' : ''} ${\n        showFacetFilter\n          ? QUERY_FILTERS_EXPANDED_CSS\n          : QUERY_FILTERS_COLLAPSED_CSS\n      }`}\n      style={style}\n    >\n      {isLoadingNewBundle ? (\n        <SkeletonInlineBlock width={100} />\n      ) : (\n        <>\n          <span className=\"SRC-boldText SRC-text-title SRC-centerContent\">\n            {frontText} {total?.toLocaleString()} {unitDescription} {endText}\n          </span>\n          <div className=\"TotalQueryResults__selections\">\n            {searchSelectionCriteriaPillProps &&\n              searchSelectionCriteriaPillProps.map(props => (\n                <SelectionCriteriaPill {...props} key={props.key} />\n              ))}\n            {facetsWithSelection.map((selectedFacet, index) => (\n              <SelectionCriteriaPill\n                key={`facets-${\n                  selectedFacet.selectedValue?.value ??\n                  selectedFacet.displayValue ??\n                  index\n                }`}\n                facetWithSelection={selectedFacet}\n                onRemove={() => removeFacetSelection(selectedFacet)}\n              />\n            ))}\n          </div>\n          {(facetsWithSelection.length > 0 ||\n            (searchSelectionCriteriaPillProps &&\n              searchSelectionCriteriaPillProps.length > 0)) && (\n            <Button\n              onClick={clearAll}\n              variant=\"light\"\n              className=\"TotalQueryResults__clearall\"\n            >\n              Clear All\n            </Button>\n          )}\n        </>\n      )}\n    </div>\n  )\n}\n\nexport default TotalQueryResults\n"],"names":["assertThisInitialized","createContext","children","_jsx","queryContext","useContext","style","props","SynapseConstants.ENTITY_HEADER_STORAGE_KEY","SynapseConstants.USER_PROFILE_STORAGE_KEY","queryVisualizationContext","data","getLastQueryRequest","isFacetsAvailable","isLoadingNewBundle","useState","useEffect","setTopLevelControlsState","state","setSelectedRowIndices","setIsColumnSelected","topLevelControlsState","isColumnSelected","selectedRowIndices","facetAliases","rgbIndex","unitDescription","showLastUpdatedOn","context","SynapseConstants.BUNDLE_MASK_QUERY_COLUMN_MODELS","SynapseConstants.BUNDLE_MASK_QUERY_FACETS","SynapseConstants.BUNDLE_MASK_QUERY_SELECT_COLUMNS","SynapseConstants.BUNDLE_MASK_QUERY_RESULTS","React","initQueryRequest","onQueryChange","onQueryResultBundleChange","asyncJobStatus","queryIsLoading","error","newQueryIsFetching","remove","entityId","versionNumber","entity","lastQueryRequestDeepClone","executeQueryRequest","useDeepCompareEffect","DeepLinkingUtils.getQueryRequestFromLink","setLastQueryRequest","DeepLinkingUtils","dataCopy","dataWithLockedFacetRemoved","currentPage","pageSize","setPageSize","getInitQueryRequest","currentAsyncStatus","goToPage","facetWithSelection","innerText","selectedMin","tooltipText","filter","filterValue","console","key","_jsxs","label","isCollapsed","onClick","value","SynapseConstants.VALUE_NOT_SET","displayValue","facetValues","columnModel","onClear","onChange","setFilteredSet","userIds","entityIds","setSearchText","setIsShowAll","obj","_Fragment","setShowSearch","textInput","searchTerm","handleTextInputFilterEvent","allIsSelected","count","isSelected","selectedValuesMap","clearTimeout","timer","setIsShowDropdown","isShowDropdown","content","name","id","index","isDropdown","initialIsSelected","setIsSelected","moment","undefined","min","max","setError","callBackFn","type","target","errorText","ownKeys","_objectSpread","Component","isBrowser","window","document","noop","compare","b","m","d","i","equal","a","length","reduce","getNextValue","curr","step","domain","reversed","newVal","Math","getPrevValue","Slider","_PureComponent","_inherits","_getPrototypeOf2","_this","_classCallCheck","_len","arguments","args","Array","_key","_possibleConstructorReturn","_getPrototypeOf","call","apply","concat","_defineProperty","_assertThisInitialized","values","handles","activeHandleID","valueToPerc","valueToStep","pixelToStep","createRef","e","handleID","validUpKeys","validDownKeys","_assertThisInitialize","_assertThisInitialize2","vertical","keyCode","includes","_ref","stopPropagation","preventDefault","found","find","currVal","val","nextHandles","map","v","submitUpdate","onStart","isNotValidTouch","isTouch","_assertThisInitialize3","_assertThisInitialize4","setDomain","getSliderDomain","slider","current","getValue","getTouchPosition","clientY","pageX","percent","_assertThisInitialize5","_assertThisInitialize6","_assertThisInitialize7","updateValue","getUpdatedHandles","_assertThisInitialize8","_assertThisInitialize9","_assertThisInitialize10","_assertThisInitialize11","_assertThisInitialize12","_assertThisInitialize13","onSlideEnd","setState","removeEventListener","onMouseMove","onMouseUp","_assertThisInitialize14","_assertThisInitialize15","_assertThisInitialize16","onTouchMove","onTouchEnd","_createClass","removeListeners","onSlideStart","addTouchEvents","addMouseEvents","handleRailAndTrackClicks","_this2","_this$state","_this$props","updateKey","minDiff","Infinity","_curr$i","diff","abs","addEventListener","next","callOnChange","_this$props2","mode","onUpdate","_ref2","mode1","mode2","mode3","_this3","_this$state2","_this$props3","className","rootStyle","rootProps","Comp","component","disabled","flatten","mappedHandles","_ref3","Children","child","Rail","Ticks","Tracks","Handles","cloneElement","scale","getEventData","emitKeyboard","onKeyDown","emitMouse","onMouseDown","emitTouch","onTouchStart","nextProps","prevState","warnOnChanges","nextState","LinearScale","DiscreteScale","_domain","_slicedToArray","setStep","setRange","_getHandles","getHandles","changes","_getHandles2","_handles","_changes","Object","keys","PureComponent","propTypes","defaultProps","getHandleProps","source","getTrackProps","tick","setValues","callbackFn","ticksCount","getRailProps","tracks","ticks","NOT_SET","RANGE","ANY","RadioValuesEnum","facetResult","FRIENDLY_VALUE_NOT_SET","columnMin","columnMax","selectedMax","setRadioValue","onChangeCallback","radioValue","rangeType","columnName","result","selections","facet","facetValue","onChangeFn","facetsToFilter","showFacetFilter","facets","queryRequest","QUERY_FILTERS_COLLAPSED_CSS","shouldStartCollapsed","frontText","filteredEnumWithSelectedValuesOnly","setFacetsWithSelection","selectedValue","applyChangesToValuesColumn","applyChangesToRangeColumn","cloneLastQueryRequest","concreteType","filtered","pillProps","searchExpression","el","selectedFacet","clearAll"],"mappings":"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"}