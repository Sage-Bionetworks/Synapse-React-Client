import{t as x,I as E,B as R}from"./index.e94f1e56.js";import{h as N}from"./moment.81704e1d.js";import{M as v}from"./MarkdownSynapse.46a192d7.js";import{l as w}from"./LoadingScreen.7047b156.js";import{a as c,j as t}from"./jsx-runtime.2e925369.js";import{B as M}from"./Button.c582ea4c.js";import"./objectWithoutPropertiesLoose.090b3c10.js";import"./withStyles.ab2e1d33.js";import"./toConsumableArray.b3669986.js";import"./isObject.97b5908e.js";import"./index.f252d424.js";import"./Transition.c5966bcb.js";import"./index.06f4a415.js";import"./toString.41faaa42.js";import"./assert.f88a2d20.js";import"./iframe.a56f5c43.js";import"./index.8cde812d.js";import"./getEndpoint.0de7fccf.js";import"./SvgIcon.f6f6da7c.js";import"./UserCard.60c6e9c5.js";import"./index.es.82d55a6a.js";import"./IconCopy.b1eba79c.js";import"./SkeletonTable.9c2d923f.js";import"./times.e9ba47eb.js";import"./toInteger.ea37b69f.js";import"./toNumber.bfb36d17.js";import"./Skeleton.bcb4a49e.js";import"./IconSvg.160dd61c.js";import"./utils.38c8d0df.js";import"./useTheme.990cd45a.js";import"./makeStyles.9976e655.js";import"./createSvgIcon.88863916.js";import"./InfoOutlined.21bf844a.js";import"./Clear.eb427cfa.js";import"./ToastMessage.87e58df2.js";import"./FullWidthAlert.96be848e.js";import"./Typography.7bd5dd17.js";import"./debounce.b9f00509.js";import"./removeClass.27874bcb.js";import"./hasClass.56fd144a.js";import"./uniqueId.ce7b286a.js";import"./Overlay.4a980e95.js";import"./useWaitForDOMRef.67fdb4e5.js";import"./usePopperMarginModifiers.ee427a81.js";import"./factory.db4683b0.js";import"./sqlFunctions.b49ac766.js";import"./SynapseVideo.3ad8429a.js";import"./react-intersection-observer.m.66de6abb.js";import"./DateFormatter.e6da0921.js";import"./Modal.59a27718.js";import"./useWillUnmount.4a16e5cd.js";const B=window.React.useEffect,u=window.React.useState,d=({tableEntityId:r})=>{const{accessToken:p}=x(),[o,f]=u(),[m,y]=u(3);let l=!0;if(B(()=>((()=>{if(l){if(o)return;const a={concreteType:"org.sagebionetworks.repo.model.table.QueryBundleRequest",query:{sql:`SELECT "categories", "date", "title", "mdDescription" FROM ${r} ORDER BY "date" desc`},entityId:r,partMask:R};E(a,p).then(n=>{var i;f((i=n.queryResult)==null?void 0:i.queryResults)})}})(),()=>{l=!1}),[r,p]),!o)return w;const s=o.headers,T=s.findIndex(e=>e.name==="categories"),b=s.findIndex(e=>e.name==="date"),S=s.findIndex(e=>e.name==="title"),F=s.findIndex(e=>e.name==="mdDescription");return c("div",{className:"Feed bootstrap-4-backport",children:[t("div",{className:"FeedItems",children:o.rows.map((e,a)=>{if(a>m-1)return;const n=JSON.parse(e.values[T]),i=e.values[b],I=e.values[S],g=e.values[F];return t("div",{className:"FeedItem",children:c("div",{children:[n&&t("div",{className:"FeedItemCategories",children:n.map((h,_)=>t("div",{className:"FeedItemCategory",children:h},`row-${a},categoryIndex-${_}`))}),t("p",{className:"FeedItemDate",children:N(new Date(parseInt(i))).format("MMMM YYYY")}),t("p",{className:"FeedItemTitle",children:I}),t("div",{className:"FeedItemDescription",children:t(v,{markdown:g})})]})},`row-${a}`)})}),o.rows.length>m&&t("div",{className:"FeedViewAllNewsButtonContainer",children:t(M,{variant:"primary",size:"lg",className:"pill",onClick:()=>y(m+3),children:"VIEW MORE NEWS"})})]})};var C=d;try{d.displayName="TableFeedCards",d.__docgenInfo={description:"",displayName:"TableFeedCards",props:{tableEntityId:{defaultValue:null,description:"",name:"tableEntityId",required:!0,type:{name:"string"}}}},typeof STORYBOOK_REACT_CLASSES!="undefined"&&(STORYBOOK_REACT_CLASSES["src/lib/containers/TableFeedCards.tsx#TableFeedCards"]={docgenInfo:d.__docgenInfo,name:"TableFeedCards",path:"src/lib/containers/TableFeedCards.tsx#TableFeedCards"})}catch{}var Be={parameters:{storySource:{source:`import React from 'react'
import { ComponentStory, ComponentMeta } from '@storybook/react'
import TableFeedCards from './TableFeedCards'

export default {
  title: 'Synapse/TableFeedCards',
  component: TableFeedCards,
} as ComponentMeta<typeof TableFeedCards>

const Template: ComponentStory<typeof TableFeedCards> = args => (
  <TableFeedCards {...args} />
)

export const Demo = Template.bind({})
Demo.args = {
  tableEntityId: 'syn23520190',
}
`,locationsMap:{demo:{startLoc:{col:56,line:10},endLoc:{col:1,line:12},startBody:{col:56,line:10},endBody:{col:1,line:12}}}}},title:"Synapse/TableFeedCards",component:C};const D=r=>t(C,{...r}),O=D.bind({});O.args={tableEntityId:"syn23520190"};const De=["Demo"];export{O as Demo,De as __namedExportsOrder,Be as default};
//# sourceMappingURL=TableFeedCards.stories.d2c7b46e.js.map
